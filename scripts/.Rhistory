measurePar=list(na.rm=TRUE)
} else if (method=="spring"){
measure = "spring" #associations between taxa
measurePar = list(nlambda=10,
rep.num=10)
}
net_spring <- netConstruct(dat,
filtTax = "highestFreq",
filtTaxPar = list(highestFreq = 50),
filtSamp = "totalReads",
filtSampPar = list(totalReads = 0.01),# my data is abundance
measure = measure,#associations between taxa
measurePar = measurePar,
normMethod = "none",
zeroMethod = "none",
sparsMethod = "none",
dissFunc = "signed",
verbose = 2,
seed = 123456)
# analyze it
props_spring <- netAnalyze(net_spring,
centrLCC = TRUE,
gcmHeat = FALSE, # not to plot automatically
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
# plot manually
# plot the matrix
png(paste(pathout,'/GCM.cluster.',method,'.png',sep=""),width=700,height=600)
plotHeat(mat = props_spring$graphletLCC$gcm1,
pmat = props_spring$graphletLCC$pAdjust1,
type = "mixed",
title = "GCM",
#textCex = 0.5,
colorLim = c(-1, 1),
mar = c(2, 0, 2, 0))
# Add rectangles highlighting the four types of orbits
graphics::rect(xleft   = c( 0.5,  1.5, 4.5,  7.5),
ybottom = c(11.5,  7.5, 4.5,  0.5),
xright  = c( 1.5,  4.5, 7.5, 11.5),
ytop    = c(10.5, 10.5, 7.5,  4.5),
lwd = 2, xpd = NA)
text(6, -0.2, xpd = NA,
"Significance codes:  ***: 0.001;  **: 0.01;  *: 0.05")
dev.off()
# summary
sink('network.summary.',method,'.txt')
print(summary(props_spring, numbNodes = 5L))
sink()  # returns output to the console
# viz the network
png(paste(pathout,'/network_',method,'.png',sep=""),width=700,height=600)
p <- plot(props_spring,
nodeColor = "cluster",
nodeSize = "eigenvector",
title1 = paste("Network on OTU level with",method,"  associations"),
showTitle = TRUE,
cexNodes = 6,
cexTitle = 0.8)
legend(0.5, 1.1, cex = 0.8, title = "estimated association:",
legend = c("+","-"), lty = 1, lwd = 3, col = c("#009900","red"),
bty = "n", horiz = TRUE)
dev.off()
}
main <- function(pathin,pathout,method){
if (!dir.exists(pathout)){
dir.create(pathout,recursive = TRUE)
}
dat <- get.dat(pathin)
get.network(dat,pathout,method)}
# Dongqi HRSD Data
pathin = "../data/Dongqi/HRSD/abundance/genus.tsv"
pathout = "../output/Dongqi/HRSD"
main(pathin,pathout,"spearman")
get.dat <- function(path){
# load data n x d (samples x OTUs)
dat <- read.table(path,sep='\t',header = TRUE,row.names = 1)
dat[is.na(dat)] <- 0
return (dat)
}
# calculate network
get.network <- function(dat,pathout,method){
if (method=="spearman"){
measure="spearman"
measurePar=list(na.rm=TRUE)
} else if (method=="spring"){
measure = "spring" #associations between taxa
measurePar = list(nlambda=10,
rep.num=10)
}
net_spring <- netConstruct(dat,
filtTax = "highestFreq",
filtTaxPar = list(highestFreq = 50),
filtSamp = "totalReads",
filtSampPar = list(totalReads = 0.01),# my data is abundance
measure = measure,#associations between taxa
measurePar = measurePar,
normMethod = "none",
zeroMethod = "none",
sparsMethod = "none",
dissFunc = "signed",
verbose = 2,
seed = 123456)
# analyze it
props_spring <- netAnalyze(net_spring,
centrLCC = TRUE,
gcmHeat = FALSE, # not to plot automatically
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
# plot manually
# plot the matrix
png(paste(pathout,'/GCM.cluster.',method,'.png',sep=""),width=700,height=600)
plotHeat(mat = props_spring$graphletLCC$gcm1,
pmat = props_spring$graphletLCC$pAdjust1,
type = "mixed",
title = "GCM",
#textCex = 0.5,
colorLim = c(-1, 1),
mar = c(2, 0, 2, 0))
# Add rectangles highlighting the four types of orbits
graphics::rect(xleft   = c( 0.5,  1.5, 4.5,  7.5),
ybottom = c(11.5,  7.5, 4.5,  0.5),
xright  = c( 1.5,  4.5, 7.5, 11.5),
ytop    = c(10.5, 10.5, 7.5,  4.5),
lwd = 2, xpd = NA)
text(6, -0.2, xpd = NA,
"Significance codes:  ***: 0.001;  **: 0.01;  *: 0.05")
dev.off()
# summary
sink(paste('network.summary.',method,'.txt'))
print(summary(props_spring, numbNodes = 5L))
sink()  # returns output to the console
# viz the network
png(paste(pathout,'/network_',method,'.png',sep=""),width=700,height=600)
p <- plot(props_spring,
nodeColor = "cluster",
nodeSize = "eigenvector",
title1 = paste("Network on OTU level with",method,"  associations"),
showTitle = TRUE,
cexNodes = 6,
cexTitle = 0.8)
legend(0.5, 1.1, cex = 0.8, title = "estimated association:",
legend = c("+","-"), lty = 1, lwd = 3, col = c("#009900","red"),
bty = "n", horiz = TRUE)
dev.off()
}
main <- function(pathin,pathout,method){
if (!dir.exists(pathout)){
dir.create(pathout,recursive = TRUE)
}
dat <- get.dat(pathin)
get.network(dat,pathout,method)}
# Dongqi HRSD Data
pathin = "../data/Dongqi/HRSD/abundance/genus.tsv"
pathout = "../output/Dongqi/HRSD"
main(pathin,pathout,"spearman")
get.dat <- function(path){
# load data n x d (samples x OTUs)
dat <- read.table(path,sep='\t',header = TRUE,row.names = 1)
dat[is.na(dat)] <- 0
return (dat)
}
# calculate network
get.network <- function(dat,pathout,method){
if (method=="spearman"){
measure="spearman"
measurePar=list(na.rm=TRUE)
} else if (method=="spring"){
measure = "spring" #associations between taxa
measurePar = list(nlambda=10,
rep.num=10)
}
net_spring <- netConstruct(dat,
filtTax = "highestFreq",
filtTaxPar = list(highestFreq = 50),
filtSamp = "totalReads",
filtSampPar = list(totalReads = 0.01),# my data is abundance
measure = measure,#associations between taxa
measurePar = measurePar,
normMethod = "none",
zeroMethod = "none",
sparsMethod = "none",
dissFunc = "signed",
verbose = 2,
seed = 123456)
# analyze it
props_spring <- netAnalyze(net_spring,
centrLCC = TRUE,
gcmHeat = FALSE, # not to plot automatically
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
# plot manually
# plot the matrix
png(paste(pathout,'/GCM.cluster.',method,'.png',sep=""),width=700,height=600)
plotHeat(mat = props_spring$graphletLCC$gcm1,
pmat = props_spring$graphletLCC$pAdjust1,
type = "mixed",
title = "GCM",
#textCex = 0.5,
colorLim = c(-1, 1),
mar = c(2, 0, 2, 0))
# Add rectangles highlighting the four types of orbits
graphics::rect(xleft   = c( 0.5,  1.5, 4.5,  7.5),
ybottom = c(11.5,  7.5, 4.5,  0.5),
xright  = c( 1.5,  4.5, 7.5, 11.5),
ytop    = c(10.5, 10.5, 7.5,  4.5),
lwd = 2, xpd = NA)
text(6, -0.2, xpd = NA,
"Significance codes:  ***: 0.001;  **: 0.01;  *: 0.05")
dev.off()
# summary
sink(paste(pathout,'/network.summary.',method,'.txt'))
print(summary(props_spring, numbNodes = 5L))
sink()  # returns output to the console
# viz the network
png(paste(pathout,'/network_',method,'.png',sep=""),width=700,height=600)
p <- plot(props_spring,
nodeColor = "cluster",
nodeSize = "eigenvector",
title1 = paste("Network on OTU level with",method,"  associations"),
showTitle = TRUE,
cexNodes = 6,
cexTitle = 0.8)
legend(0.5, 1.1, cex = 0.8, title = "estimated association:",
legend = c("+","-"), lty = 1, lwd = 3, col = c("#009900","red"),
bty = "n", horiz = TRUE)
dev.off()
}
main <- function(pathin,pathout,method){
if (!dir.exists(pathout)){
dir.create(pathout,recursive = TRUE)
}
dat <- get.dat(pathin)
get.network(dat,pathout,method)}
# Dongqi HRSD Data
pathin = "../data/Dongqi/HRSD/abundance/genus.tsv"
pathout = "../output/Dongqi/HRSD"
main(pathin,pathout,"spearman")
get.dat <- function(path){
# load data n x d (samples x OTUs)
dat <- read.table(path,sep='\t',header = TRUE,row.names = 1)
dat[is.na(dat)] <- 0
return (dat)
}
# calculate network
get.network <- function(dat,pathout,method){
if (method=="spearman"){
measure="spearman"
measurePar=list(na.rm=TRUE)
} else if (method=="spring"){
measure = "spring" #associations between taxa
measurePar = list(nlambda=10,
rep.num=10)
}
net_spring <- netConstruct(dat,
filtTax = "highestFreq",
filtTaxPar = list(highestFreq = 50),
filtSamp = "totalReads",
filtSampPar = list(totalReads = 0.01),# my data is abundance
measure = measure,#associations between taxa
measurePar = measurePar,
normMethod = "none",
zeroMethod = "none",
sparsMethod = "none",
dissFunc = "signed",
verbose = 2,
seed = 123456)
# analyze it
props_spring <- netAnalyze(net_spring,
centrLCC = TRUE,
gcmHeat = FALSE, # not to plot automatically
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
# plot manually
# plot the matrix
png(paste(pathout,'/GCM.cluster.',method,'.png',sep=""),width=700,height=600)
plotHeat(mat = props_spring$graphletLCC$gcm1,
pmat = props_spring$graphletLCC$pAdjust1,
type = "mixed",
title = "GCM",
#textCex = 0.5,
colorLim = c(-1, 1),
mar = c(2, 0, 2, 0))
# Add rectangles highlighting the four types of orbits
graphics::rect(xleft   = c( 0.5,  1.5, 4.5,  7.5),
ybottom = c(11.5,  7.5, 4.5,  0.5),
xright  = c( 1.5,  4.5, 7.5, 11.5),
ytop    = c(10.5, 10.5, 7.5,  4.5),
lwd = 2, xpd = NA)
text(6, -0.2, xpd = NA,
"Significance codes:  ***: 0.001;  **: 0.01;  *: 0.05")
dev.off()
# summary
sink(paste(pathout,'/network.summary.',method,'.txt',sep=""))
print(summary(props_spring, numbNodes = 5L))
sink()  # returns output to the console
# viz the network
png(paste(pathout,'/network_',method,'.png',sep=""),width=700,height=600)
p <- plot(props_spring,
nodeColor = "cluster",
nodeSize = "eigenvector",
title1 = paste("Network on OTU level with",method,"  associations"),
showTitle = TRUE,
cexNodes = 6,
cexTitle = 0.8)
legend(0.5, 1.1, cex = 0.8, title = "estimated association:",
legend = c("+","-"), lty = 1, lwd = 3, col = c("#009900","red"),
bty = "n", horiz = TRUE)
dev.off()
}
main <- function(pathin,pathout,method){
if (!dir.exists(pathout)){
dir.create(pathout,recursive = TRUE)
}
dat <- get.dat(pathin)
get.network(dat,pathout,method)}
# Dongqi HRSD Data
pathin = "../data/Dongqi/HRSD/abundance/genus.tsv"
pathout = "../output/Dongqi/HRSD"
main(pathin,pathout,"spearman")
?netConstruct
pathin = "../data/Dongqi/HRSD/abundance/genus.tsv" dat <- get.dat(pathin)
pathin = "../data/Dongqi/HRSD/abundance/genus.tsv"
dat <- get.dat(pathin)
View(dat)
colnames(dat)
grep(colnames(dat),"Accumuli")
?grep
grep("accumu",colnames(dat))
grep("Accumu",colnames(dat))
colnames(dat)[15]
dat$Ca_Accumulibacter
View(dat)
get.dat <- function(path){
# load data n x d (samples x OTUs)
dat <- read.table(path,sep='\t',header = TRUE,row.names = 1)
dat[is.na(dat)] <- 0
return (dat)
}
# calculate network
get.network <- function(dat,pathout,method){
if (method=="spearman"){
measure="spearman"
measurePar=list(na.rm=TRUE)
} else if (method=="spring"){
measure = "spring" #associations between taxa
measurePar = list(nlambda=10,
rep.num=10)
}
net_spring <- netConstruct(dat,
filtTax = "highestFreq",
filtTaxPar = list(highestFreq = 50),
filtSamp = "totalReads",
filtSampPar = list(totalReads = 0.001),# my data is abundance
measure = measure,#associations between taxa
measurePar = measurePar,
normMethod = "none",
zeroMethod = "none",
sparsMethod = "none",
dissFunc = "signed",
verbose = 2,
seed = 123456)
# analyze it
props_spring <- netAnalyze(net_spring,
centrLCC = TRUE,
gcmHeat = FALSE, # not to plot automatically
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
# plot manually
# plot the matrix
png(paste(pathout,'/GCM.cluster.',method,'.png',sep=""),width=700,height=600)
plotHeat(mat = props_spring$graphletLCC$gcm1,
pmat = props_spring$graphletLCC$pAdjust1,
type = "mixed",
title = "GCM",
#textCex = 0.5,
colorLim = c(-1, 1),
mar = c(2, 0, 2, 0))
# Add rectangles highlighting the four types of orbits
graphics::rect(xleft   = c( 0.5,  1.5, 4.5,  7.5),
ybottom = c(11.5,  7.5, 4.5,  0.5),
xright  = c( 1.5,  4.5, 7.5, 11.5),
ytop    = c(10.5, 10.5, 7.5,  4.5),
lwd = 2, xpd = NA)
text(6, -0.2, xpd = NA,
"Significance codes:  ***: 0.001;  **: 0.01;  *: 0.05")
dev.off()
# summary
sink(paste(pathout,'/network.summary.',method,'.txt',sep=""))
print(summary(props_spring, numbNodes = 5L))
sink()  # returns output to the console
# viz the network
png(paste(pathout,'/network_',method,'.png',sep=""),width=700,height=600)
p <- plot(props_spring,
nodeColor = "cluster",
nodeSize = "eigenvector",
title1 = paste("Network on OTU level with",method,"  associations"),
showTitle = TRUE,
cexNodes = 6,
cexTitle = 0.8)
legend(0.5, 1.1, cex = 0.8, title = "estimated association:",
legend = c("+","-"), lty = 1, lwd = 3, col = c("#009900","red"),
bty = "n", horiz = TRUE)
dev.off()
}
main <- function(pathin,pathout,method){
if (!dir.exists(pathout)){
dir.create(pathout,recursive = TRUE)
}
dat <- get.dat(pathin)
get.network(dat,pathout,method)}
# Dongqi HRSD Data
pathin = "../data/Dongqi/HRSD/abundance/genus.tsv"
pathout = "../output/Dongqi/HRSD"
main(pathin,pathout,"spearman")
?netConstruct
get.dat <- function(path){
# load data n x d (samples x OTUs)
dat <- read.table(path,sep='\t',header = TRUE,row.names = 1)
dat[is.na(dat)] <- 0
return (dat)
}
# calculate network
get.network <- function(dat,pathout,method){
if (method=="spearman"){
measure="spearman"
measurePar=list(na.rm=TRUE)
} else if (method=="spring"){
measure = "spring" #associations between taxa
measurePar = list(nlambda=10,
rep.num=10)
} else if (method=="sparcc"){
measure = "sparcc" #associations between taxa
measurePar = list(iter=20,inner_iter=15)
}
net_spring <- netConstruct(dat,
filtTax = "highestFreq",
filtTaxPar = list(highestFreq = 50),
filtSamp = "totalReads",
filtSampPar = list(totalReads = 0.001),# my data is abundance
measure = measure,#associations between taxa
measurePar = measurePar,
normMethod = "none",
zeroMethod = "none",
sparsMethod = "none",
dissFunc = "signed",
verbose = 2,
seed = 123456)
# analyze it
props_spring <- netAnalyze(net_spring,
centrLCC = TRUE,
gcmHeat = FALSE, # not to plot automatically
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
# plot manually
# plot the matrix
png(paste(pathout,'/GCM.cluster.',method,'.png',sep=""),width=700,height=600)
plotHeat(mat = props_spring$graphletLCC$gcm1,
pmat = props_spring$graphletLCC$pAdjust1,
type = "mixed",
title = "GCM",
#textCex = 0.5,
colorLim = c(-1, 1),
mar = c(2, 0, 2, 0))
# Add rectangles highlighting the four types of orbits
graphics::rect(xleft   = c( 0.5,  1.5, 4.5,  7.5),
ybottom = c(11.5,  7.5, 4.5,  0.5),
xright  = c( 1.5,  4.5, 7.5, 11.5),
ytop    = c(10.5, 10.5, 7.5,  4.5),
lwd = 2, xpd = NA)
text(6, -0.2, xpd = NA,
"Significance codes:  ***: 0.001;  **: 0.01;  *: 0.05")
dev.off()
# summary
sink(paste(pathout,'/network.summary.',method,'.txt',sep=""))
print(summary(props_spring, numbNodes = 5L))
sink()  # returns output to the console
# viz the network
png(paste(pathout,'/network_',method,'.png',sep=""),width=700,height=600)
p <- plot(props_spring,
nodeColor = "cluster",
nodeSize = "eigenvector",
title1 = paste("Network on OTU level with",method,"  associations"),
showTitle = TRUE,
cexNodes = 6,
cexTitle = 0.8)
legend(0.5, 1.1, cex = 0.8, title = "estimated association:",
legend = c("+","-"), lty = 1, lwd = 3, col = c("#009900","red"),
bty = "n", horiz = TRUE)
dev.off()
}
main <- function(pathin,pathout,method){
if (!dir.exists(pathout)){
dir.create(pathout,recursive = TRUE)
}
dat <- get.dat(pathin)
get.network(dat,pathout,method)}
# Dongqi HRSD Data
pathin = "../data/Dongqi/HRSD/abundance/genus.tsv"
pathout = "../output/Dongqi/HRSD"
# main(pathin,pathout,"spearman")
main(pathin,pathout,"sparcc")
# Dongqi HRSD Data
pathin = "../data/Dongqi/HRSD/abundance/genus.tsv"
pathout = "../output/Dongqi/HRSD"
# main(pathin,pathout,"spearman")
# main(pathin,pathout,"sparcc")
main(pathin,pathout,"spring")
