Linux version

Using ReadLine,Boost,HDF5,GSL
mothur v.1.45.2
Last updated: 4/9/21
by
Patrick D. Schloss

Department of Microbiology & Immunology

University of Michigan
http://www.mothur.org

When using, please cite:
Schloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.

Distributed under the GNU General Public License

Type 'help()' for information on the commands that are available

For questions and analysis support, please visit our forum at https://forum.mothur.org

Type 'quit()' to exit program

[NOTE]: Setting random seed to 19760620.

Batch Mode


mothur > set.dir(input=., output=mothur.output)
Mothur's directories:
outputDir=mothur.output/
inputDir=/scratch/li.gua/PROJECTS/AMPLICON_HRSD/

mothur > set.logfile(name=mothur.output/mothur.log)

Setting logfile name to mothur.output/mothur.log


mothur > make.contigs(file=mothur.input.list, processors=12)

Using 12 processors.

>>>>>	Processing file pair mothur.input.fastq/190703_R1.fastq - mothur.input.fastq/190703_R2.fastq (files 1 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
2000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
3000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
6000
6000
6000
6000
4000
6198
6200
6215
6197
6209
6000
6000
6000
6000
6000
6000
6216
6230
6239
6246
6228
6239
5000
6000
6211
Done.

It took 11 secs to assemble 74628 reads.


>>>>>	Processing file pair mothur.input.fastq/190802_R1.fastq - mothur.input.fastq/190802_R2.fastq (files 2 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
2000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
3000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
6000
6000
6000
6000
6000
6000
4000
6000
6000
6000
6000
7000
7000
7000
7000
7000
7000
7000
7000
7000
7000
8000
5000
7000
8000
8000
8000
8000
8000
8000
8000
8000
9000
8000
9000
8000
9000
9000
9000
9000
9000
6000
9000
9000
10000
9000
10000
10000
10000
10000
10000
9000
10000
11000
10000
10000
7000
11000
10000
11000
11000
11000
11000
11396
11000
11332
11177
11163
11164
10000
11171
11353
11000
11000
11000
8000
11389
11375
11000
11362
11184
9000
10000
11000
11175
Done.

It took 18 secs to assemble 135241 reads.


>>>>>	Processing file pair mothur.input.fastq/190830_R1.fastq - mothur.input.fastq/190830_R2.fastq (files 3 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
3000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
6000
4000
6000
6000
6000
6000
6000
6000
6000
6000
6000
7000
7000
7000
7000
7000
7000
7000
7348
7351
7351
7336
7328
7349
7000
7000
7000
7000
7369
5000
7337
7337
7321
7323
6000
7000
7326
Done.

It took 12 secs to assemble 88076 reads.


>>>>>	Processing file pair mothur.input.fastq/190913_R1.fastq - mothur.input.fastq/190913_R2.fastq (files 4 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
2000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
3000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
6000
6000
6000
4000
6000
6000
6000
6000
6000
6000
6000
7000
7000
7000
7000
7000
7000
7000
7000
7000
5000
7000
7000
8000
8000
8000
8000
8000
8000
8000
8000
8000
8000
8000
9000
9000
9000
9000
9000
6000
9000
9000
9000
9000
10000
9000
9000
10000
10000
10000
10000
10000
10000
7000
10000
10000
11000
10000
11000
11000
10000
11000
11000
11000
11000
12000
11000
11000
12000
12000
11000
12000
12000
12000
11000
8000
12000
13000
12000
13000
12000
13000
13000
13000
13000
12000
13000
12000
9000
14000
14000
14000
13000
13000
14000
14000
14000
14407
14000
13000
14150
13000
14369
14457
14353
14393
14366
10000
14000
14000
14136
14139
14000
14000
14172
14165
11000
12000
13000
14000
14185
Done.

It took 23 secs to assemble 171292 reads.


>>>>>	Processing file pair mothur.input.fastq/191004_R1.fastq - mothur.input.fastq/191004_R2.fastq (files 5 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
2000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
5000
5000
5000
5000
5000
5000
5000
3000
5000
5000
5000
5000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
7000
7000
7000
7000
7000
7000
7000
4000
7000
7000
7000
7000
8000
8000
8000
8000
8000
8000
8000
8000
8000
9000
8000
9000
8000
9000
9000
9000
9000
9000
5000
10000
10000
10000
9000
10000
9000
10000
10000
9000
9000
10000
11000
11000
11000
11000
11000
11000
10000
10000
10000
10000
11000
6000
12000
12000
12000
12000
12000
12000
12197
12210
12193
12212
12232
12193
11000
11000
11000
11000
12000
12210
7000
12000
12000
12000
12000
12161
12166
12154
12157
8000
9000
10000
11000
12000
12175
Done.

It took 22 secs to assemble 146260 reads.


>>>>>	Processing file pair mothur.input.fastq/191019_R1.fastq - mothur.input.fastq/191019_R2.fastq (files 6 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
2000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
3000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
4000
7000
7000
7000
7000
7000
7000
7000
7000
7000
7000
7000
5000
8000
8000
8000
8000
8000
8000
8000
8000
8000
8000
8000
9000
9000
9000
9000
9000
6000
9000
9000
9000
9000
9000
9000
10000
10000
10000
10000
10000
10000
10000
10000
10000
10000
7000
10000
11000
11000
11000
11000
11000
11000
11000
11000
11000
11000
12000
11000
12000
12000
12000
12000
8000
12000
12000
12000
13000
12000
13000
12000
13000
12000
13000
13000
13000
9000
13000
13000
14000
14000
13000
13000
13000
14000
14000
14000
14000
14000
15000
15000
14000
15000
14000
14000
14000
15000
10000
15000
16000
16000
15000
15000
15000
16000
15000
15000
16000
15000
16000
11000
17000
17000
16000
17000
16000
16000
17000
17000
16000
16000
16000
18000
18000
18000
17000
17000
18000
18000
12000
17000
17000
17000
17000
19000
19000
19000
19000
18000
18000
19000
18000
18000
18000
18000
13000
20000
20000
20000
20000
20000
19000
19000
19000
19000
19000
19000
21000
21000
21000
21000
14000
21000
20000
20000
20000
20000
22000
22000
20000
20000
22000
22000
22000
21000
21000
15000
21000
23000
23000
21000
23000
23000
21000
21000
23000
22000
22000
24000
24000
22000
24000
24000
22000
22000
24000
22000
16000
25000
25000
23000
23000
25000
25000
23000
25000
23000
23000
23000
26000
26000
26000
24000
26000
24000
24000
26000
24000
24000
24000
27000
27000
17000
27000
27000
25000
25000
25000
27000
25000
25000
28000
28000
25000
28000
26000
28000
26000
28000
26000
29000
29000
26000
26000
29000
26000
18000
29000
29000
27000
27000
27000
30000
30000
30000
27000
27000
27000
30000
30000
28000
31000
28000
28000
31000
31000
28000
28000
31000
31000
19000
28000
32000
29000
32000
29000
29000
32000
32000
32000
29000
29000
33000
29000
33000
30000
30000
30000
33000
33000
33000
34000
30000
30000
20000
34000
30000
31000
34000
31000
31000
34000
34000
35000
35000
31000
31000
31000
35000
32000
35000
32000
32000
35000
36000
36000
21000
32000
32000
36000
32000
36000
36000
33000
37000
33000
33000
37000
33000
33000
37000
37000
37000
38000
33000
34000
34000
34000
38000
22000
38000
34000
34000
38000
38000
39000
39000
34000
35000
35000
35000
39000
39000
39000
40000
35000
35000
40000
36000
35000
36000
36000
40000
40000
41000
40000
23000
36000
41000
36000
41083
41600
37000
37000
36000
37000
41000
41047
41000
40961
41092
37000
37000
24000
38000
38000
37000
38000
38000
38000
39000
39000
38000
39000
25000
39000
39000
40000
40000
39000
40000
26000
40000
40000
41000
41000
41000
40000
27000
41789
41730
41778
41000
41000
41000
41123
41562
41615
28000
29000
30000
31000
32000
33000
34000
35000
36000
37000
38000
39000
40000
41000
41100
Done.

It took 69 secs to assemble 496480 reads.


>>>>>	Processing file pair mothur.input.fastq/191025_R1.fastq - mothur.input.fastq/191025_R2.fastq (files 7 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
2000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
5000
5000
5000
5000
5000
3000
5000
5000
5000
5000
5000
5000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
4000
7000
7000
7000
7000
7000
7422
7394
7414
7425
7000
7447
7000
7000
7000
7000
7000
7432
7402
5000
7392
7425
7453
7468
6000
7000
7399
Done.

It took 12 secs to assemble 89073 reads.


>>>>>	Processing file pair mothur.input.fastq/191108_R1.fastq - mothur.input.fastq/191108_R2.fastq (files 8 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
3000
4000
4000
4000
4000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
4000
5000
6000
6000
6000
6000
6000
6294
6283
6299
6303
6000
6000
6000
6311
6000
6000
6338
6326
6302
6284
6332
6000
5000
6288
6000
6294
Done.

It took 11 secs to assemble 75654 reads.


>>>>>	Processing file pair mothur.input.fastq/191111_R1.fastq - mothur.input.fastq/191111_R2.fastq (files 9 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
3000
4000
4000
4000
4000
4000
5000
5000
5000
5000
5000
5000
5000
5000
5000
4000
5000
5000
6000
6000
6000
6000
6000
6000
6000
6000
6000
7000
6000
7000
6000
7000
7000
5000
7000
7349
7348
7369
7348
7344
7000
7000
7000
7000
7000
7000
7362
7374
7365
7355
7371
6000
7381
7000
7381
Done.

It took 12 secs to assemble 88347 reads.


>>>>>	Processing file pair mothur.input.fastq/191115_R1.fastq - mothur.input.fastq/191115_R2.fastq (files 10 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
2000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
5000
5000
5000
5000
5000
5000
5000
3000
5000
5000
5000
5000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
7000
7069
7000
7000
7000
7078
7000
7084
7073
7143
4000
7000
7000
7056
7000
7000
7120
7000
7111
7055
7091
7000
7088
5000
6000
7000
7082
Done.

It took 12 secs to assemble 85050 reads.


>>>>>	Processing file pair mothur.input.fastq/191122_R1.fastq - mothur.input.fastq/191122_R2.fastq (files 11 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
1000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
2000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
3000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6949
6000
6886
6888
6892
6895
6876
6950
6891
6922
6901
4000
6891
5000
6000
6889
Done.

It took 13 secs to assemble 82830 reads.


>>>>>	Processing file pair mothur.input.fastq/191129_R1.fastq - mothur.input.fastq/191129_R2.fastq (files 12 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
1000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4142
4000
4130
4158
4161
4000
4000
4000
4000
4145
4000
4135
4000
4000
2000
4140
4167
4145
4155
4165
3000
4000
4140
Done.

It took 8 secs to assemble 49783 reads.


>>>>>	Processing file pair mothur.input.fastq/191206_R1.fastq - mothur.input.fastq/191206_R2.fastq (files 13 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
1000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
2000
4000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5792
5803
5787
5000
5845
5800
5781
5839
5799
5851
5806
3000
5787
4000
5000
5800
Done.

It took 10 secs to assemble 69690 reads.


>>>>>	Processing file pair mothur.input.fastq/191213_R1.fastq - mothur.input.fastq/191213_R2.fastq (files 14 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
1000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
2000
4000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
5000
6000
6000
6000
6000
6000
6000
6000
7000
6000
7090
6000
7000
7000
7025
7042
3000
6000
7000
7023
7000
7022
7000
7022
7000
7061
7000
7000
7085
7080
7000
7037
7000
7040
4000
5000
6000
7000
7031
Done.

It took 14 secs to assemble 84558 reads.


>>>>>	Processing file pair mothur.input.fastq/191220_R1.fastq - mothur.input.fastq/191220_R2.fastq (files 15 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
2000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
5000
5000
5097
5102
5000
5000
5000
5087
5000
5093
5000
5138
5000
5122
5104
5000
5000
5000
5070
5114
5081
3000
5100
4000
5000
5086
Done.

It took 9 secs to assemble 61194 reads.


>>>>>	Processing file pair mothur.input.fastq/200103_R1.fastq - mothur.input.fastq/200103_R2.fastq (files 16 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
1000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
2000
4000
4000
4000
4000
4000
4000
4000
4000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
5000
6000
3000
6000
6000
6000
6000
6000
6000
7000
6000
6000
7000
6000
7000
7000
7000
7000
7964
7000
7000
7918
7000
7924
7000
7899
7918
4000
7000
7914
7911
7980
7887
7897
7990
5000
6000
7000
7901
Done.

It took 15 secs to assemble 95103 reads.


>>>>>	Processing file pair mothur.input.fastq/200110_R1.fastq - mothur.input.fastq/200110_R2.fastq (files 17 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
1000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
2000
4000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
5000
6000
6000
6000
6000
6000
6000
3000
6000
6000
7000
6000
7000
7279
6000
7000
7000
7000
7219
7302
7218
7241
7000
7000
7000
7206
7000
7294
7000
7228
7235
4000
7000
7233
7236
5000
6000
7000
7224
Done.

It took 14 secs to assemble 86915 reads.


>>>>>	Processing file pair mothur.input.fastq/200117_R1.fastq - mothur.input.fastq/200117_R2.fastq (files 18 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
2000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
3000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
6000
6000
6000
6000
4000
6000
6000
6000
6000
6000
6000
6871
6863
6884
6922
6904
6895
6885
6846
6918
5000
6876
6962
6000
6874
Done.

It took 11 secs to assemble 82700 reads.


>>>>>	Processing file pair mothur.input.fastq/200124_R1.fastq - mothur.input.fastq/200124_R2.fastq (files 19 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
3000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
4000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
7000
7000
7000
7000
7000
7000
7000
5000
7000
7000
7000
7000
7968
7932
7935
7917
7921
7949
7919
7985
7902
7992
7903
6000
7000
7927
Done.

It took 13 secs to assemble 95250 reads.


>>>>>	Processing file pair mothur.input.fastq/200131_R1.fastq - mothur.input.fastq/200131_R2.fastq (files 20 of 21)	<<<<<
Making contigs...
2
1
1
1
1
1
1
2
1
1
1
1
Done.

It took 1 secs to assemble 14 reads.


>>>>>	Processing file pair mothur.input.fastq/200205_R1.fastq - mothur.input.fastq/200205_R2.fastq (files 21 of 21)	<<<<<
Making contigs...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
3000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
6000
6000
4000
6000
6000
6000
6000
6000
6000
6000
6000
7000
7000
7000
7000
7000
7000
7000
7000
5000
7000
7000
8000
7000
8095
8000
8000
8063
8000
8161
8104
8000
8083
8000
8000
8127
8000
8171
8090
8000
8000
8000
8114
8182
6000
8102
7000
8000
8080
Done.

It took 13 secs to assemble 97372 reads.


Group count: 
190703	74628
190802	135241
190830	88076
190913	171292
191004	146260
191019	496480
191025	89073
191108	75654
191111	88347
191115	85050
191122	82830
191129	49783
191206	69690
191213	84558
191220	61194
200103	95103
200110	86915
200117	82700
200124	95250
200131	14
200205	97372

Total of all groups is 2255510

It took 326 secs to process 2255510 sequences.

Output File Names: 
mothur.output/mothur.input.trim.contigs.fasta
mothur.output/mothur.input.scrap.contigs.fasta
mothur.output/mothur.input.contigs.report
mothur.output/mothur.input.contigs.groups


mothur > summary.seqs(fasta=current)
Using mothur.output/mothur.input.trim.contigs.fasta as input file for the fasta parameter.

Using 12 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	25	25	0	2	1
2.5%-tile:	1	251	251	0	4	56388
25%-tile:	1	253	253	0	4	563878
Median: 	1	253	253	0	4	1127756
75%-tile:	1	253	253	0	5	1691633
97.5%-tile:	1	254	254	5	6	2199123
Maximum:	1	502	502	80	251	2255510
Mean:	1	252	252	0	4
# of Seqs:	2255510

It took 17 secs to summarize 2255510 sequences.

Output File Names:
mothur.output/mothur.input.trim.contigs.summary


mothur > screen.seqs(fasta=current, group=current, summary=current, maxambig=0, maxlength=275)
Using mothur.output/mothur.input.trim.contigs.fasta as input file for the fasta parameter.
Using mothur.output/mothur.input.contigs.groups as input file for the group parameter.
Using mothur.output/mothur.input.trim.contigs.summary as input file for the summary parameter.

Using 12 processors.
1000
2000
3000
4000
5000
6000
7000
8000
9000
10000
11000
12000
13000
14000
15000
16000
17000
18000
19000
20000
21000
22000
23000
24000
25000
26000
27000
28000
29000
30000
31000
32000
33000
34000
35000
1000
2000
36000
3000
4000
37000
5000
38000
6000
39000
7000
8000
40000
9000
41000
10000
42000
11000
43000
12000
44000
13000
45000
14000
46000
15000
47000
16000
48000
17000
49000
18000
50000
19000
51000
20000
52000
21000
53000
22000
54000
23000
55000
24000
56000
25000
57000
26000
58000
27000
59000
28000
60000
29000
61000
30000
62000
31000
63000
32000
64000
33000
65000
34000
66000
35000
67000
36000
68000
37000
1000
69000
38000
70000
2000
39000
71000
40000
3000
72000
41000
73000
4000
42000
74000
5000
43000
75000
6000
44000
76000
7000
45000
77000
8000
46000
78000
9000
47000
79000
10000
48000
80000
11000
49000
81000
12000
50000
82000
13000
51000
83000
14000
52000
84000
15000
53000
85000
16000
54000
86000
17000
55000
87000
18000
56000
88000
19000
57000
89000
20000
58000
90000
21000
59000
91000
22000
60000
92000
23000
61000
93000
24000
62000
94000
25000
63000
95000
26000
64000
96000
27000
65000
97000
28000
66000
98000
29000
67000
99000
30000
68000
100000
31000
69000
101000
32000
70000
102000
33000
71000
103000
34000
72000
104000
1000
35000
73000
105000
36000
74000
2000
106000
37000
75000
107000
3000
38000
76000
108000
39000
4000
77000
109000
40000
5000
78000
110000
41000
6000
79000
111000
42000
7000
80000
112000
43000
81000
8000
113000
44000
82000
9000
114000
45000
83000
10000
115000
46000
84000
11000
116000
47000
85000
12000
117000
48000
86000
13000
118000
49000
87000
14000
119000
50000
88000
15000
51000
120000
89000
16000
52000
121000
90000
17000
53000
122000
91000
18000
54000
123000
92000
19000
55000
124000
93000
20000
56000
125000
94000
21000
57000
126000
95000
22000
127000
58000
96000
23000
128000
59000
97000
24000
129000
60000
98000
25000
130000
61000
99000
26000
131000
62000
100000
132000
27000
63000
101000
133000
28000
64000
102000
134000
29000
65000
103000
135000
30000
66000
104000
136000
31000
67000
105000
137000
32000
106000
68000
1000
138000
33000
107000
69000
139000
2000
34000
108000
70000
140000
109000
35000
71000
3000
141000
110000
36000
72000
4000
142000
111000
37000
73000
5000
143000
112000
38000
74000
6000
144000
113000
39000
75000
7000
145000
114000
40000
76000
8000
146000
115000
41000
77000
9000
147000
116000
42000
78000
10000
148000
117000
43000
79000
11000
149000
118000
44000
80000
12000
150000
119000
45000
81000
13000
151000
120000
46000
82000
14000
152000
121000
47000
83000
15000
153000
122000
48000
84000
16000
154000
123000
49000
85000
17000
155000
124000
50000
18000
86000
156000
125000
19000
51000
87000
157000
126000
20000
52000
88000
158000
127000
21000
53000
159000
89000
128000
22000
54000
160000
90000
129000
23000
55000
161000
91000
130000
24000
162000
56000
92000
131000
25000
163000
57000
93000
132000
26000
164000
58000
94000
133000
27000
165000
59000
95000
134000
28000
166000
60000
96000
135000
29000
167000
61000
97000
136000
30000
168000
62000
98000
137000
31000
169000
63000
99000
138000
32000
170000
1000
64000
100000
139000
33000
171000
101000
65000
140000
2000
34000
172000
102000
66000
141000
3000
35000
173000
103000
67000
142000
36000
4000
174000
143000
68000
104000
37000
5000
175000
144000
69000
105000
38000
6000
176000
145000
70000
106000
39000
7000
177000
146000
71000
107000
40000
8000
178000
147000
72000
108000
41000
9000
179000
148000
73000
109000
42000
10000
180000
149000
74000
110000
43000
11000
181000
150000
111000
75000
44000
12000
182000
151000
112000
76000
45000
13000
183000
152000
77000
113000
46000
14000
184000
153000
114000
78000
47000
15000
185000
154000
115000
79000
48000
16000
186000
155000
116000
80000
49000
17000
187000
156000
117000
81000
50000
18000
187989
157000
82000
118000
51000
19000
158000
119000
83000
52000
20000
159000
120000
84000
53000
21000
160000
85000
121000
54000
22000
161000
86000
122000
55000
23000
162000
87000
123000
56000
24000
163000
88000
124000
57000
25000
164000
1000
89000
125000
58000
26000
165000
90000
126000
59000
2000
27000
166000
91000
127000
60000
28000
3000
167000
92000
128000
61000
29000
4000
168000
93000
62000
129000
30000
5000
169000
94000
63000
130000
31000
6000
170000
95000
64000
131000
32000
7000
171000
96000
65000
132000
8000
33000
172000
97000
66000
133000
9000
173000
34000
98000
67000
134000
10000
174000
99000
68000
135000
35000
11000
175000
100000
69000
136000
12000
176000
36000
101000
70000
137000
13000
177000
37000
102000
71000
138000
14000
178000
38000
103000
72000
139000
15000
179000
39000
104000
73000
140000
16000
180000
40000
105000
74000
141000
17000
181000
41000
106000
75000
142000
18000
182000
42000
76000
143000
107000
19000
183000
43000
77000
144000
20000
184000
108000
44000
78000
145000
21000
185000
79000
45000
109000
146000
22000
186000
80000
46000
110000
147000
23000
187000
47000
81000
187668
111000
148000
24000
82000
48000
1000
112000
149000
25000
83000
49000
113000
150000
26000
2000
84000
50000
114000
151000
3000
27000
85000
51000
115000
152000
4000
28000
86000
52000
116000
153000
5000
29000
87000
53000
117000
154000
6000
30000
88000
54000
118000
155000
7000
31000
89000
55000
119000
156000
8000
32000
90000
56000
120000
157000
9000
33000
91000
57000
121000
158000
10000
34000
92000
58000
122000
159000
11000
35000
93000
59000
123000
160000
12000
36000
94000
60000
124000
161000
13000
37000
95000
61000
125000
162000
38000
14000
96000
62000
126000
163000
39000
97000
63000
127000
15000
164000
40000
98000
128000
64000
165000
41000
16000
99000
129000
65000
42000
166000
17000
100000
130000
66000
43000
167000
18000
101000
131000
67000
44000
168000
102000
19000
132000
68000
45000
169000
103000
20000
69000
133000
46000
170000
104000
21000
134000
70000
47000
171000
105000
22000
1000
71000
135000
48000
172000
106000
23000
72000
136000
49000
173000
2000
107000
24000
73000
137000
50000
174000
3000
108000
25000
74000
138000
51000
175000
4000
109000
26000
75000
139000
52000
176000
5000
110000
27000
76000
140000
53000
177000
6000
111000
28000
77000
141000
178000
54000
7000
112000
29000
78000
142000
179000
55000
8000
113000
30000
79000
143000
180000
56000
9000
114000
31000
80000
144000
181000
57000
10000
115000
32000
145000
81000
182000
58000
11000
116000
33000
146000
82000
183000
59000
12000
117000
34000
147000
83000
184000
60000
13000
118000
35000
148000
84000
185000
61000
14000
119000
36000
149000
85000
186000
62000
15000
120000
37000
150000
86000
187000
16000
63000
121000
38000
151000
187857
87000
64000
17000
122000
39000
152000
88000
18000
65000
123000
40000
153000
89000
19000
66000
124000
154000
41000
90000
20000
67000
125000
155000
42000
91000
21000
68000
126000
156000
43000
92000
22000
69000
157000
127000
44000
1000
93000
23000
70000
158000
128000
45000
94000
24000
2000
71000
159000
129000
46000
95000
25000
72000
3000
160000
130000
47000
96000
26000
73000
4000
161000
131000
48000
97000
27000
74000
5000
162000
132000
49000
98000
28000
75000
6000
133000
163000
50000
99000
29000
76000
7000
134000
164000
51000
100000
30000
77000
8000
135000
165000
52000
101000
31000
78000
9000
136000
166000
53000
102000
32000
79000
10000
137000
167000
54000
103000
33000
80000
11000
138000
168000
55000
104000
34000
81000
12000
139000
169000
56000
105000
35000
82000
13000
140000
170000
57000
106000
36000
14000
83000
141000
171000
58000
107000
37000
15000
84000
142000
172000
59000
108000
38000
16000
85000
143000
173000
60000
109000
39000
17000
86000
144000
174000
61000
110000
40000
18000
87000
145000
175000
62000
111000
41000
19000
88000
146000
176000
63000
112000
42000
20000
147000
89000
177000
64000
113000
43000
21000
90000
148000
178000
65000
114000
44000
22000
149000
91000
66000
179000
115000
45000
23000
1000
150000
92000
67000
180000
116000
46000
24000
68000
93000
151000
181000
2000
117000
47000
25000
69000
152000
182000
94000
3000
118000
48000
26000
70000
153000
183000
95000
4000
119000
49000
27000
71000
154000
184000
96000
5000
120000
50000
28000
72000
155000
185000
97000
6000
121000
51000
29000
73000
156000
186000
98000
7000
122000
52000
30000
74000
157000
187000
99000
8000
123000
53000
31000
75000
158000
188000
188067
100000
9000
124000
54000
32000
76000
159000
101000
10000
125000
55000
33000
77000
102000
160000
11000
126000
56000
34000
78000
103000
12000
127000
57000
161000
35000
79000
104000
13000
128000
58000
36000
80000
162000
105000
14000
129000
59000
81000
37000
106000
163000
15000
130000
60000
82000
38000
107000
164000
16000
131000
61000
83000
39000
165000
108000
17000
132000
62000
84000
40000
166000
109000
18000
133000
63000
85000
41000
167000
110000
19000
134000
64000
86000
42000
168000
111000
20000
135000
65000
87000
43000
169000
112000
21000
136000
88000
66000
44000
170000
113000
1000
22000
137000
89000
67000
45000
171000
114000
23000
2000
138000
90000
68000
46000
172000
115000
24000
3000
139000
91000
69000
47000
173000
116000
25000
4000
140000
92000
70000
48000
174000
117000
26000
93000
141000
5000
71000
49000
175000
118000
27000
94000
142000
6000
72000
50000
176000
28000
119000
95000
143000
73000
51000
7000
177000
120000
29000
96000
144000
74000
52000
178000
8000
121000
30000
97000
145000
53000
75000
179000
9000
31000
122000
98000
146000
54000
76000
180000
10000
32000
123000
99000
147000
55000
77000
181000
33000
11000
124000
100000
148000
56000
78000
182000
34000
125000
12000
101000
149000
57000
79000
183000
35000
126000
102000
13000
150000
58000
80000
184000
36000
127000
103000
14000
151000
59000
81000
185000
37000
128000
104000
152000
15000
60000
82000
186000
38000
105000
129000
153000
61000
16000
83000
187000
39000
106000
130000
154000
62000
84000
17000
188000
188074
40000
107000
131000
155000
63000
85000
18000
41000
108000
132000
156000
64000
86000
19000
42000
109000
133000
157000
65000
87000
43000
20000
110000
134000
158000
66000
88000
44000
111000
21000
135000
159000
67000
89000
45000
112000
160000
136000
22000
68000
90000
46000
113000
161000
137000
23000
69000
91000
47000
114000
162000
138000
24000
70000
92000
115000
48000
163000
139000
71000
25000
93000
116000
49000
164000
140000
72000
94000
26000
117000
50000
165000
141000
73000
95000
27000
118000
51000
166000
142000
74000
96000
119000
52000
167000
28000
143000
75000
97000
120000
53000
168000
144000
29000
76000
98000
169000
121000
54000
145000
30000
77000
99000
170000
55000
122000
146000
78000
31000
100000
171000
56000
123000
147000
79000
101000
172000
32000
124000
148000
57000
80000
102000
173000
125000
33000
149000
81000
103000
174000
58000
126000
34000
150000
82000
104000
175000
127000
59000
151000
35000
83000
176000
128000
105000
152000
60000
36000
84000
177000
106000
129000
153000
61000
178000
85000
37000
107000
130000
154000
62000
179000
86000
131000
108000
38000
155000
63000
180000
87000
132000
109000
39000
64000
156000
181000
88000
133000
110000
40000
182000
65000
157000
89000
134000
111000
183000
41000
66000
158000
90000
135000
112000
184000
67000
159000
91000
42000
136000
113000
185000
68000
160000
92000
137000
114000
43000
186000
69000
161000
93000
138000
115000
44000
187000
70000
162000
94000
139000
116000
45000
187926
71000
95000
163000
140000
117000
46000
72000
96000
164000
141000
118000
73000
47000
97000
165000
142000
119000
74000
98000
166000
48000
143000
120000
75000
99000
167000
144000
121000
49000
76000
100000
168000
145000
122000
50000
77000
101000
169000
146000
123000
51000
78000
102000
170000
147000
124000
79000
103000
52000
148000
171000
125000
80000
104000
149000
172000
53000
126000
81000
105000
150000
173000
127000
54000
82000
106000
151000
174000
128000
55000
83000
107000
152000
175000
129000
56000
84000
108000
153000
176000
130000
85000
109000
57000
154000
177000
131000
86000
110000
155000
58000
178000
132000
87000
111000
156000
179000
59000
133000
88000
112000
157000
180000
134000
60000
89000
113000
158000
181000
135000
61000
90000
114000
159000
182000
136000
91000
115000
62000
160000
183000
137000
92000
116000
161000
63000
184000
138000
93000
117000
162000
64000
185000
139000
94000
118000
163000
186000
140000
65000
95000
119000
164000
187000
141000
66000
96000
120000
165000
187826
142000
67000
97000
121000
166000
143000
98000
122000
68000
167000
144000
99000
123000
168000
69000
145000
100000
124000
169000
70000
146000
101000
125000
170000
71000
147000
102000
126000
171000
148000
72000
103000
127000
172000
149000
73000
104000
128000
173000
150000
105000
74000
129000
174000
151000
106000
130000
175000
75000
152000
107000
131000
176000
153000
76000
108000
132000
177000
154000
109000
77000
133000
178000
155000
110000
134000
179000
78000
156000
111000
135000
180000
79000
157000
112000
136000
181000
158000
80000
113000
137000
182000
159000
114000
81000
138000
183000
160000
115000
139000
82000
184000
161000
116000
140000
185000
83000
162000
117000
141000
186000
84000
163000
118000
142000
187000
164000
85000
119000
143000
188000
188117
165000
120000
86000
144000
166000
121000
145000
87000
167000
122000
146000
88000
168000
123000
147000
89000
169000
124000
148000
90000
170000
125000
149000
91000
171000
126000
150000
172000
92000
127000
151000
173000
128000
93000
152000
174000
129000
153000
94000
175000
130000
154000
95000
131000
176000
155000
96000
132000
177000
156000
97000
133000
178000
157000
98000
134000
179000
158000
99000
135000
180000
159000
136000
181000
100000
160000
137000
182000
161000
101000
138000
183000
162000
102000
139000
184000
163000
103000
140000
185000
164000
104000
141000
186000
165000
105000
142000
187000
166000
106000
143000
188000
188028
167000
144000
107000
168000
145000
108000
169000
146000
109000
170000
147000
171000
110000
148000
172000
111000
149000
173000
112000
150000
174000
113000
151000
175000
114000
152000
176000
115000
153000
177000
116000
154000
178000
117000
155000
179000
118000
156000
180000
157000
119000
181000
158000
120000
182000
159000
183000
121000
160000
184000
122000
161000
185000
123000
162000
186000
124000
163000
187000
125000
164000
188000
188050
126000
165000
127000
166000
128000
167000
129000
168000
130000
169000
131000
170000
132000
171000
172000
133000
173000
134000
174000
135000
175000
136000
176000
137000
177000
138000
178000
139000
179000
140000
180000
141000
181000
142000
182000
143000
183000
144000
184000
145000
185000
146000
186000
147000
187000
148000
188000
188037
149000
150000
151000
152000
153000
154000
155000
156000
157000
158000
159000
160000
161000
162000
163000
164000
165000
166000
167000
168000
169000
170000
171000
172000
173000
174000
175000
176000
177000
178000
179000
180000
181000
182000
183000
184000
185000
186000
187000
187871

It took 14 secs to screen 2255510 sequences, removed 527891.

/******************************************/
Running command: remove.seqs(accnos=mothur.output/mothur.input.trim.contigs.bad.accnos.temp, group=mothur.output/mothur.input.contigs.groups)
Removed 527891 sequences from your group file.

Output File Names:
mothur.output/mothur.input.contigs.pick.groups

/******************************************/

Output File Names:
mothur.output/mothur.input.trim.contigs.good.summary
mothur.output/mothur.input.trim.contigs.good.fasta
mothur.output/mothur.input.trim.contigs.bad.accnos
mothur.output/mothur.input.contigs.good.groups


It took 26 secs to screen 2255510 sequences.

mothur > unique.seqs(fasta=current)
Using mothur.output/mothur.input.trim.contigs.good.fasta as input file for the fasta parameter.
1000	797
2000	1489
3000	2125
4000	2698
5000	3296
6000	3872
7000	4474
8000	5032
9000	5592
10000	6131
11000	6635
12000	7175
13000	7709
14000	8223
15000	8720
16000	9210
17000	9668
18000	10109
19000	10556
20000	10980
21000	11381
22000	11768
23000	12169
24000	12570
25000	12943
26000	13344
27000	13722
28000	14144
29000	14579
30000	15002
31000	15390
32000	15780
33000	16160
34000	16546
35000	16931
36000	17320
37000	17693
38000	18068
39000	18457
40000	18855
41000	19243
42000	19620
43000	19984
44000	20381
45000	20767
46000	21142
47000	21521
48000	21900
49000	22300
50000	22678
51000	23048
52000	23414
53000	23799
54000	24153
55000	24506
56000	24867
57000	25215
58000	25579
59000	25958
60000	26351
61000	26674
62000	27011
63000	27376
64000	27737
65000	28072
66000	28426
67000	28783
68000	29107
69000	29448
70000	29762
71000	30112
72000	30462
73000	30812
74000	31154
75000	31491
76000	31870
77000	32225
78000	32551
79000	32894
80000	33230
81000	33598
82000	33937
83000	34258
84000	34630
85000	34951
86000	35275
87000	35601
88000	35947
89000	36307
90000	36616
91000	36942
92000	37255
93000	37612
94000	37930
95000	38255
96000	38583
97000	38886
98000	39222
99000	39536
100000	39836
101000	40165
102000	40484
103000	40788
104000	41106
105000	41402
106000	41718
107000	42013
108000	42330
109000	42659
110000	42966
111000	43264
112000	43586
113000	43893
114000	44214
115000	44526
116000	44849
117000	45155
118000	45462
119000	45777
120000	46115
121000	46442
122000	46779
123000	47107
124000	47419
125000	47711
126000	48021
127000	48343
128000	48668
129000	48977
130000	49269
131000	49505
132000	49797
133000	50088
134000	50366
135000	50670
136000	50969
137000	51266
138000	51557
139000	51848
140000	52142
141000	52461
142000	52750
143000	53026
144000	53340
145000	53648
146000	53947
147000	54228
148000	54506
149000	54813
150000	55110
151000	55409
152000	55702
153000	55972
154000	56224
155000	56497
156000	56767
157000	57046
158000	57342
159000	57643
160000	57919
161000	58248
162000	58526
163000	58799
164000	59084
165000	59354
166000	59642
167000	59921
168000	60213
169000	60516
170000	60821
171000	61116
172000	61405
173000	61711
174000	61995
175000	62284
176000	62569
177000	62863
178000	63172
179000	63472
180000	63773
181000	64072
182000	64384
183000	64713
184000	64983
185000	65277
186000	65574
187000	65863
188000	66156
189000	66453
190000	66754
191000	67088
192000	67385
193000	67733
194000	68034
195000	68335
196000	68656
197000	68935
198000	69264
199000	69611
200000	69928
201000	70252
202000	70581
203000	70909
204000	71220
205000	71539
206000	71838
207000	72125
208000	72437
209000	72770
210000	73086
211000	73381
212000	73684
213000	74005
214000	74317
215000	74628
216000	74946
217000	75258
218000	75567
219000	75866
220000	76162
221000	76477
222000	76773
223000	77082
224000	77389
225000	77703
226000	78041
227000	78384
228000	78702
229000	79055
230000	79383
231000	79717
232000	80067
233000	80410
234000	80745
235000	81057
236000	81382
237000	81702
238000	82027
239000	82322
240000	82645
241000	82971
242000	83314
243000	83629
244000	83936
245000	84249
246000	84552
247000	84874
248000	85177
249000	85455
250000	85752
251000	86037
252000	86307
253000	86618
254000	86943
255000	87245
256000	87543
257000	87851
258000	88173
259000	88476
260000	88782
261000	89089
262000	89406
263000	89727
264000	90003
265000	90330
266000	90617
267000	90889
268000	91200
269000	91502
270000	91798
271000	92113
272000	92393
273000	92698
274000	92982
275000	93315
276000	93641
277000	93945
278000	94272
279000	94568
280000	94884
281000	95175
282000	95484
283000	95792
284000	96122
285000	96406
286000	96686
287000	96972
288000	97293
289000	97554
290000	97860
291000	98184
292000	98493
293000	98783
294000	99079
295000	99387
296000	99711
297000	100009
298000	100314
299000	100590
300000	100903
301000	101215
302000	101530
303000	101821
304000	102118
305000	102425
306000	102733
307000	103042
308000	103313
309000	103614
310000	103923
311000	104214
312000	104521
313000	104817
314000	105111
315000	105413
316000	105719
317000	106026
318000	106323
319000	106621
320000	106939
321000	107227
322000	107520
323000	107811
324000	108101
325000	108390
326000	108682
327000	108974
328000	109251
329000	109544
330000	109837
331000	110124
332000	110437
333000	110736
334000	111013
335000	111308
336000	111631
337000	111935
338000	112242
339000	112547
340000	112845
341000	113129
342000	113441
343000	113724
344000	114039
345000	114329
346000	114610
347000	114908
348000	115182
349000	115470
350000	115755
351000	116056
352000	116348
353000	116645
354000	116965
355000	117273
356000	117552
357000	117838
358000	118111
359000	118384
360000	118683
361000	118986
362000	119255
363000	119531
364000	119847
365000	120115
366000	120383
367000	120635
368000	120925
369000	121196
370000	121462
371000	121726
372000	122007
373000	122296
374000	122598
375000	122891
376000	123167
377000	123467
378000	123734
379000	124009
380000	124311
381000	124575
382000	124861
383000	125130
384000	125420
385000	125710
386000	126009
387000	126270
388000	126560
389000	126824
390000	127086
391000	127385
392000	127675
393000	127977
394000	128265
395000	128544
396000	128849
397000	129128
398000	129426
399000	129715
400000	130016
401000	130270
402000	130561
403000	130843
404000	131132
405000	131436
406000	131750
407000	132028
408000	132290
409000	132585
410000	132887
411000	133172
412000	133424
413000	133725
414000	134001
415000	134256
416000	134552
417000	134845
418000	135144
419000	135452
420000	135714
421000	136014
422000	136306
423000	136575
424000	136838
425000	137098
426000	137380
427000	137627
428000	137944
429000	138238
430000	138545
431000	138823
432000	139079
433000	139340
434000	139601
435000	139877
436000	140148
437000	140430
438000	140695
439000	140970
440000	141247
441000	141507
442000	141791
443000	142065
444000	142329
445000	142609
446000	142898
447000	143215
448000	143516
449000	143812
450000	144093
451000	144380
452000	144676
453000	144932
454000	145210
455000	145478
456000	145745
457000	146025
458000	146312
459000	146579
460000	146841
461000	147118
462000	147384
463000	147661
464000	147949
465000	148207
466000	148480
467000	148764
468000	149059
469000	149321
470000	149583
471000	149846
472000	150132
473000	150422
474000	150685
475000	150952
476000	151222
477000	151510
478000	151806
479000	152057
480000	152346
481000	152609
482000	152883
483000	153159
484000	153433
485000	153721
486000	153996
487000	154265
488000	154532
489000	154809
490000	155094
491000	155362
492000	155638
493000	155914
494000	156180
495000	156441
496000	156690
497000	156975
498000	157217
499000	157491
500000	157764
501000	158010
502000	158278
503000	158539
504000	158787
505000	159050
506000	159312
507000	159548
508000	159807
509000	160071
510000	160317
511000	160550
512000	160817
513000	161067
514000	161351
515000	161626
516000	161870
517000	162127
518000	162391
519000	162652
520000	162919
521000	163171
522000	163435
523000	163702
524000	163971
525000	164232
526000	164499
527000	164729
528000	165007
529000	165271
530000	165528
531000	165766
532000	166021
533000	166266
534000	166519
535000	166789
536000	167046
537000	167327
538000	167576
539000	167825
540000	168079
541000	168356
542000	168619
543000	168869
544000	169130
545000	169397
546000	169661
547000	169922
548000	170192
549000	170459
550000	170735
551000	170987
552000	171257
553000	171508
554000	171765
555000	172012
556000	172267
557000	172496
558000	172761
559000	172994
560000	173244
561000	173487
562000	173751
563000	174021
564000	174287
565000	174545
566000	174785
567000	175066
568000	175342
569000	175574
570000	175801
571000	176027
572000	176265
573000	176501
574000	176749
575000	176975
576000	177224
577000	177481
578000	177726
579000	177992
580000	178280
581000	178524
582000	178785
583000	179025
584000	179288
585000	179529
586000	179779
587000	180032
588000	180266
589000	180510
590000	180752
591000	180992
592000	181227
593000	181474
594000	181711
595000	181954
596000	182189
597000	182408
598000	182664
599000	182894
600000	183127
601000	183384
602000	183637
603000	183882
604000	184108
605000	184339
606000	184573
607000	184832
608000	185081
609000	185333
610000	185532
611000	185790
612000	186042
613000	186277
614000	186522
615000	186758
616000	187016
617000	187275
618000	187533
619000	187785
620000	188024
621000	188257
622000	188487
623000	188733
624000	188975
625000	189222
626000	189460
627000	189700
628000	189958
629000	190219
630000	190472
631000	190731
632000	190978
633000	191208
634000	191465
635000	191726
636000	191963
637000	192230
638000	192488
639000	192718
640000	192935
641000	193178
642000	193419
643000	193655
644000	193923
645000	194189
646000	194420
647000	194656
648000	194898
649000	195127
650000	195394
651000	195643
652000	195882
653000	196145
654000	196382
655000	196637
656000	196904
657000	197154
658000	197395
659000	197626
660000	197870
661000	198124
662000	198378
663000	198626
664000	198868
665000	199089
666000	199336
667000	199570
668000	199813
669000	200061
670000	200320
671000	200588
672000	200819
673000	201064
674000	201302
675000	201557
676000	201796
677000	202036
678000	202263
679000	202512
680000	202769
681000	203022
682000	203252
683000	203480
684000	203701
685000	203939
686000	204169
687000	204396
688000	204646
689000	204893
690000	205118
691000	205371
692000	205619
693000	205861
694000	206129
695000	206379
696000	206633
697000	206887
698000	207114
699000	207355
700000	207584
701000	207804
702000	208056
703000	208311
704000	208557
705000	208804
706000	209058
707000	209307
708000	209534
709000	209763
710000	210022
711000	210260
712000	210498
713000	210741
714000	211005
715000	211208
716000	211457
717000	211711
718000	211952
719000	212185
720000	212439
721000	212670
722000	212920
723000	213139
724000	213369
725000	213634
726000	213860
727000	214088
728000	214300
729000	214548
730000	214802
731000	215037
732000	215281
733000	215518
734000	215767
735000	215983
736000	216226
737000	216451
738000	216690
739000	216926
740000	217147
741000	217365
742000	217623
743000	217893
744000	218136
745000	218392
746000	218638
747000	218866
748000	219092
749000	219333
750000	219568
751000	219806
752000	220016
753000	220237
754000	220489
755000	220724
756000	220944
757000	221178
758000	221410
759000	221656
760000	221878
761000	222103
762000	222342
763000	222575
764000	222798
765000	223048
766000	223301
767000	223534
768000	223756
769000	223993
770000	224229
771000	224450
772000	224666
773000	224899
774000	225122
775000	225361
776000	225593
777000	225836
778000	226064
779000	226303
780000	226532
781000	226757
782000	226983
783000	227195
784000	227429
785000	227676
786000	227890
787000	228105
788000	228328
789000	228540
790000	228788
791000	229000
792000	229242
793000	229465
794000	229690
795000	229929
796000	230172
797000	230400
798000	230621
799000	230829
800000	231050
801000	231265
802000	231484
803000	231702
804000	231925
805000	232170
806000	232379
807000	232596
808000	232832
809000	233075
810000	233332
811000	233539
812000	233758
813000	234000
814000	234219
815000	234446
816000	234669
817000	234879
818000	235089
819000	235299
820000	235525
821000	235724
822000	235948
823000	236187
824000	236422
825000	236642
826000	236853
827000	237067
828000	237290
829000	237504
830000	237733
831000	237933
832000	238167
833000	238382
834000	238592
835000	238791
836000	239018
837000	239226
838000	239445
839000	239664
840000	239888
841000	240108
842000	240317
843000	240535
844000	240745
845000	240952
846000	241170
847000	241393
848000	241597
849000	241804
850000	242032
851000	242260
852000	242482
853000	242724
854000	242942
855000	243128
856000	243351
857000	243591
858000	243801
859000	244025
860000	244264
861000	244472
862000	244684
863000	244901
864000	245123
865000	245364
866000	245596
867000	245838
868000	246048
869000	246278
870000	246479
871000	246686
872000	246886
873000	247115
874000	247343
875000	247553
876000	247780
877000	247968
878000	248210
879000	248411
880000	248614
881000	248824
882000	249034
883000	249236
884000	249446
885000	249673
886000	249885
887000	250087
888000	250322
889000	250522
890000	250722
891000	250945
892000	251159
893000	251390
894000	251580
895000	251813
896000	252024
897000	252264
898000	252485
899000	252689
900000	252893
901000	253098
902000	253294
903000	253510
904000	253731
905000	253936
906000	254165
907000	254394
908000	254601
909000	254814
910000	255029
911000	255234
912000	255483
913000	255682
914000	255894
915000	256101
916000	256312
917000	256529
918000	256741
919000	256958
920000	257194
921000	257413
922000	257636
923000	257877
924000	258077
925000	258310
926000	258548
927000	258742
928000	258943
929000	259163
930000	259384
931000	259588
932000	259806
933000	260001
934000	260222
935000	260440
936000	260662
937000	260885
938000	261076
939000	261279
940000	261507
941000	261725
942000	261934
943000	262113
944000	262326
945000	262532
946000	262742
947000	262942
948000	263155
949000	263377
950000	263597
951000	263807
952000	264008
953000	264245
954000	264473
955000	264688
956000	264914
957000	265117
958000	265332
959000	265553
960000	265790
961000	266010
962000	266217
963000	266451
964000	266682
965000	266903
966000	267129
967000	267338
968000	267554
969000	267774
970000	267990
971000	268190
972000	268410
973000	268641
974000	268856
975000	269071
976000	269284
977000	269496
978000	269684
979000	269905
980000	270119
981000	270341
982000	270531
983000	270752
984000	270978
985000	271173
986000	271378
987000	271593
988000	271815
989000	272012
990000	272224
991000	272457
992000	272664
993000	272860
994000	273101
995000	273317
996000	273527
997000	273759
998000	273974
999000	274182
1000000	274380
1001000	274570
1002000	274786
1003000	274987
1004000	275190
1005000	275385
1006000	275598
1007000	275756
1008000	275951
1009000	276156
1010000	276347
1011000	276547
1012000	276742
1013000	276949
1014000	277163
1015000	277358
1016000	277534
1017000	277729
1018000	277937
1019000	278152
1020000	278340
1021000	278509
1022000	278727
1023000	278935
1024000	279147
1025000	279352
1026000	279543
1027000	279731
1028000	279940
1029000	280144
1030000	280374
1031000	280581
1032000	280772
1033000	280971
1034000	281196
1035000	281400
1036000	281605
1037000	281814
1038000	282027
1039000	282232
1040000	282428
1041000	282629
1042000	282835
1043000	283041
1044000	283231
1045000	283441
1046000	283645
1047000	283853
1048000	284070
1049000	284265
1050000	284466
1051000	284672
1052000	284867
1053000	285073
1054000	285299
1055000	285492
1056000	285707
1057000	285916
1058000	286130
1059000	286330
1060000	286549
1061000	286761
1062000	286955
1063000	287175
1064000	287405
1065000	287616
1066000	287825
1067000	288006
1068000	288200
1069000	288430
1070000	288624
1071000	288823
1072000	289033
1073000	289217
1074000	289427
1075000	289642
1076000	289831
1077000	290039
1078000	290231
1079000	290447
1080000	290672
1081000	290890
1082000	291087
1083000	291297
1084000	291548
1085000	291738
1086000	291925
1087000	292127
1088000	292332
1089000	292537
1090000	292724
1091000	292925
1092000	293138
1093000	293352
1094000	293556
1095000	293765
1096000	293971
1097000	294187
1098000	294383
1099000	294592
1100000	294797
1101000	294999
1102000	295193
1103000	295399
1104000	295617
1105000	295826
1106000	296020
1107000	296212
1108000	296408
1109000	296613
1110000	296822
1111000	297042
1112000	297246
1113000	297449
1114000	297651
1115000	297866
1116000	298051
1117000	298261
1118000	298446
1119000	298651
1120000	298847
1121000	299060
1122000	299258
1123000	299454
1124000	299668
1125000	299881
1126000	300075
1127000	300249
1128000	300451
1129000	300658
1130000	300871
1131000	301070
1132000	301263
1133000	301451
1134000	301634
1135000	301841
1136000	302046
1137000	302242
1138000	302450
1139000	302632
1140000	302822
1141000	303027
1142000	303225
1143000	303435
1144000	303633
1145000	303830
1146000	303996
1147000	304190
1148000	304391
1149000	304584
1150000	304757
1151000	304953
1152000	305166
1153000	305337
1154000	305536
1155000	305737
1156000	305926
1157000	306137
1158000	306346
1159000	306533
1160000	306712
1161000	306927
1162000	307126
1163000	307319
1164000	307517
1165000	307697
1166000	307910
1167000	308129
1168000	308324
1169000	308527
1170000	308723
1171000	308932
1172000	309132
1173000	309311
1174000	309503
1175000	309702
1176000	309893
1177000	310065
1178000	310257
1179000	310423
1180000	310592
1181000	310806
1182000	310987
1183000	311190
1184000	311385
1185000	311581
1186000	311768
1187000	311929
1188000	312107
1189000	312287
1190000	312467
1191000	312669
1192000	312873
1193000	313073
1194000	313248
1195000	313415
1196000	313600
1197000	313795
1198000	313975
1199000	314157
1200000	314353
1201000	314539
1202000	314734
1203000	314945
1204000	315147
1205000	315344
1206000	315551
1207000	315720
1208000	315902
1209000	316085
1210000	316262
1211000	316463
1212000	316644
1213000	316818
1214000	317006
1215000	317176
1216000	317368
1217000	317570
1218000	317760
1219000	317947
1220000	318133
1221000	318334
1222000	318524
1223000	318721
1224000	318900
1225000	319083
1226000	319259
1227000	319464
1228000	319667
1229000	319849
1230000	320052
1231000	320244
1232000	320445
1233000	320638
1234000	320820
1235000	321003
1236000	321197
1237000	321408
1238000	321615
1239000	321787
1240000	321983
1241000	322158
1242000	322350
1243000	322539
1244000	322721
1245000	322913
1246000	323091
1247000	323267
1248000	323470
1249000	323646
1250000	323849
1251000	324028
1252000	324204
1253000	324391
1254000	324576
1255000	324749
1256000	324923
1257000	325126
1258000	325318
1259000	325496
1260000	325690
1261000	325901
1262000	326084
1263000	326273
1264000	326441
1265000	326621
1266000	326804
1267000	326999
1268000	327172
1269000	327347
1270000	327497
1271000	327705
1272000	327899
1273000	328090
1274000	328273
1275000	328456
1276000	328650
1277000	328850
1278000	329042
1279000	329226
1280000	329421
1281000	329611
1282000	329818
1283000	330024
1284000	330209
1285000	330377
1286000	330567
1287000	330747
1288000	330937
1289000	331111
1290000	331310
1291000	331511
1292000	331712
1293000	331886
1294000	332072
1295000	332265
1296000	332446
1297000	332669
1298000	332838
1299000	333037
1300000	333238
1301000	333409
1302000	333578
1303000	333756
1304000	333934
1305000	334127
1306000	334317
1307000	334499
1308000	334692
1309000	334862
1310000	335054
1311000	335238
1312000	335439
1313000	335634
1314000	335803
1315000	335974
1316000	336166
1317000	336356
1318000	336543
1319000	336737
1320000	336920
1321000	337096
1322000	337284
1323000	337481
1324000	337679
1325000	337843
1326000	338030
1327000	338221
1328000	338398
1329000	338582
1330000	338769
1331000	338958
1332000	339145
1333000	339325
1334000	339494
1335000	339683
1336000	339876
1337000	340073
1338000	340263
1339000	340457
1340000	340651
1341000	340838
1342000	341043
1343000	341220
1344000	341401
1345000	341599
1346000	341781
1347000	341967
1348000	342164
1349000	342362
1350000	342551
1351000	342734
1352000	342907
1353000	343098
1354000	343295
1355000	343500
1356000	343697
1357000	343885
1358000	344081
1359000	344282
1360000	344468
1361000	344659
1362000	344839
1363000	345012
1364000	345194
1365000	345376
1366000	345557
1367000	345749
1368000	345924
1369000	346115
1370000	346287
1371000	346475
1372000	346674
1373000	346853
1374000	347055
1375000	347214
1376000	347386
1377000	347576
1378000	347767
1379000	347945
1380000	348129
1381000	348304
1382000	348497
1383000	348693
1384000	348884
1385000	349054
1386000	349254
1387000	349426
1388000	349619
1389000	349794
1390000	349990
1391000	350186
1392000	350383
1393000	350573
1394000	350745
1395000	350953
1396000	351143
1397000	351318
1398000	351489
1399000	351664
1400000	351830
1401000	352031
1402000	352209
1403000	352416
1404000	352596
1405000	352782
1406000	352970
1407000	353147
1408000	353329
1409000	353518
1410000	353721
1411000	353913
1412000	354084
1413000	354255
1414000	354421
1415000	354613
1416000	354803
1417000	354995
1418000	355158
1419000	355333
1420000	355505
1421000	355689
1422000	355866
1423000	356047
1424000	356237
1425000	356406
1426000	356597
1427000	356783
1428000	356958
1429000	357163
1430000	357345
1431000	357535
1432000	357708
1433000	357889
1434000	358090
1435000	358266
1436000	358441
1437000	358633
1438000	358819
1439000	358998
1440000	359188
1441000	359393
1442000	359571
1443000	359749
1444000	359929
1445000	360122
1446000	360293
1447000	360479
1448000	360657
1449000	360834
1450000	361014
1451000	361214
1452000	361398
1453000	361572
1454000	361743
1455000	361923
1456000	362120
1457000	362304
1458000	362485
1459000	362672
1460000	362852
1461000	363042
1462000	363221
1463000	363421
1464000	363588
1465000	363775
1466000	363977
1467000	364156
1468000	364348
1469000	364504
1470000	364676
1471000	364846
1472000	365026
1473000	365226
1474000	365412
1475000	365587
1476000	365767
1477000	365967
1478000	366141
1479000	366317
1480000	366511
1481000	366699
1482000	366867
1483000	367051
1484000	367236
1485000	367431
1486000	367616
1487000	367780
1488000	367957
1489000	368153
1490000	368335
1491000	368519
1492000	368707
1493000	368881
1494000	369065
1495000	369240
1496000	369417
1497000	369597
1498000	369787
1499000	369963
1500000	370152
1501000	370346
1502000	370497
1503000	370695
1504000	370877
1505000	371063
1506000	371277
1507000	371478
1508000	371680
1509000	371852
1510000	372029
1511000	372246
1512000	372444
1513000	372649
1514000	372843
1515000	373047
1516000	373251
1517000	373480
1518000	373681
1519000	373877
1520000	374067
1521000	374276
1522000	374477
1523000	374653
1524000	374849
1525000	375077
1526000	375292
1527000	375472
1528000	375654
1529000	375858
1530000	376059
1531000	376263
1532000	376475
1533000	376668
1534000	376866
1535000	377078
1536000	377277
1537000	377473
1538000	377657
1539000	377846
1540000	378038
1541000	378234
1542000	378425
1543000	378644
1544000	378857
1545000	379051
1546000	379241
1547000	379429
1548000	379626
1549000	379821
1550000	380031
1551000	380223
1552000	380424
1553000	380636
1554000	380837
1555000	381060
1556000	381274
1557000	381469
1558000	381691
1559000	381901
1560000	382108
1561000	382317
1562000	382527
1563000	382732
1564000	382943
1565000	383140
1566000	383334
1567000	383526
1568000	383713
1569000	383922
1570000	384143
1571000	384357
1572000	384566
1573000	384778
1574000	385000
1575000	385223
1576000	385451
1577000	385638
1578000	385854
1579000	386078
1580000	386267
1581000	386484
1582000	386700
1583000	386918
1584000	387136
1585000	387361
1586000	387575
1587000	387796
1588000	387997
1589000	388192
1590000	388408
1591000	388603
1592000	388807
1593000	389015
1594000	389208
1595000	389417
1596000	389634
1597000	389852
1598000	390076
1599000	390268
1600000	390450
1601000	390656
1602000	390893
1603000	391102
1604000	391314
1605000	391524
1606000	391733
1607000	391911
1608000	392127
1609000	392354
1610000	392564
1611000	392795
1612000	392995
1613000	393219
1614000	393423
1615000	393652
1616000	393878
1617000	394064
1618000	394272
1619000	394487
1620000	394685
1621000	394904
1622000	395126
1623000	395355
1624000	395587
1625000	395816
1626000	396052
1627000	396279
1628000	396496
1629000	396739
1630000	396965
1631000	397208
1632000	397436
1633000	397647
1634000	397873
1635000	398105
1636000	398336
1637000	398562
1638000	398786
1639000	399018
1640000	399245
1641000	399464
1642000	399697
1643000	399933
1644000	400155
1645000	400378
1646000	400601
1647000	400829
1648000	401071
1649000	401299
1650000	401530
1651000	401773
1652000	401996
1653000	402240
1654000	402465
1655000	402683
1656000	402895
1657000	403108
1658000	403316
1659000	403510
1660000	403720
1661000	403947
1662000	404170
1663000	404387
1664000	404593
1665000	404825
1666000	405043
1667000	405322
1668000	405582
1669000	405813
1670000	406053
1671000	406310
1672000	406560
1673000	406792
1674000	407068
1675000	407338
1676000	407598
1677000	407877
1678000	408126
1679000	408392
1680000	408624
1681000	408867
1682000	409120
1683000	409361
1684000	409621
1685000	409864
1686000	410136
1687000	410406
1688000	410644
1689000	410884
1690000	411119
1691000	411327
1692000	411593
1693000	411855
1694000	412110
1695000	412325
1696000	412588
1697000	412849
1698000	413094
1699000	413339
1700000	413593
1701000	413865
1702000	414216
1703000	414585
1704000	414953
1705000	415292
1706000	415642
1707000	415973
1708000	416316
1709000	416647
1710000	416998
1711000	417352
1712000	417713
1713000	418054
1714000	418419
1715000	418788
1716000	419160
1717000	419492
1718000	419851
1719000	420201
1720000	420540
1721000	420893
1722000	421202
1723000	421537
1724000	421885
1725000	422215
1726000	422517
1727000	422849
1727619	423075

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.names
mothur.output/mothur.input.trim.contigs.good.unique.fasta


mothur > count.seqs(name=current, group=current)
Using mothur.output/mothur.input.contigs.good.groups as input file for the group parameter.
Using mothur.output/mothur.input.trim.contigs.good.names as input file for the name parameter.

It took 14 secs to create a table for 1727619 sequences.

Total number of sequences: 1727619

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.count_table


mothur > summary.seqs(count=current)
Using mothur.output/mothur.input.trim.contigs.good.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.fasta as input file for the fasta parameter.

Using 12 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	33	33	0	3	1
2.5%-tile:	1	251	251	0	4	43191
25%-tile:	1	253	253	0	4	431905
Median: 	1	253	253	0	4	863810
75%-tile:	1	253	253	0	5	1295715
97.5%-tile:	1	254	254	0	6	1684429
Maximum:	1	275	275	0	84	1727619
Mean:	1	252	252	0	4
# of unique seqs:	423075
total # of seqs:	1727619

It took 8 secs to summarize 1727619 sequences.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.summary


mothur > align.seqs(fasta=current, template=ref_db/silva.seed.align.v4, flip=t)
Using mothur.output/mothur.input.trim.contigs.good.unique.fasta as input file for the fasta parameter.

Using 12 processors.

Reading in the ref_db/silva.seed.align.v4 template sequences...	DONE.
It took 4 to read  11180 sequences.

Aligning sequences from mothur.output/mothur.input.trim.contigs.good.unique.fasta ...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
7000
7000
7000
7000
7000
7000
7000
7000
7000
7000
7000
7000
8000
8000
8000
8000
8000
8000
8000
8000
8000
8000
8000
8000
9000
9000
9000
9000
9000
9000
9000
9000
9000
9000
9000
9000
10000
10000
10000
10000
10000
10000
10000
10000
10000
10000
10000
10000
11000
11000
11000
11000
11000
11000
11000
11000
11000
11000
11000
11000
12000
12000
12000
12000
12000
12000
12000
12000
12000
12000
12000
13000
13000
12000
13000
13000
13000
13000
13000
13000
13000
13000
13000
14000
14000
14000
14000
14000
14000
14000
13000
14000
14000
14000
14000
15000
15000
15000
15000
15000
15000
15000
15000
15000
15000
15000
14000
16000
16000
16000
16000
16000
16000
16000
16000
16000
16000
16000
15000
17000
17000
17000
17000
17000
17000
17000
17000
17000
17000
17000
16000
18000
18000
18000
18000
18000
18000
18000
18000
18000
18000
18000
17000
19000
19000
19000
19000
19000
19000
19000
19000
19000
19000
19000
18000
20000
20000
20000
20000
20000
20000
20000
20000
20000
20000
20000
19000
21000
21000
21000
21000
21000
21000
21000
21000
21000
21000
21000
20000
22000
22000
22000
22000
22000
22000
22000
22000
22000
22000
22000
21000
23000
23000
23000
23000
23000
23000
23000
23000
23000
23000
23000
22000
24000
24000
24000
24000
24000
24000
24000
24000
24000
24000
24000
23000
25000
25000
25000
25000
25000
25000
25000
25000
25000
25000
25000
26000
26000
24000
26000
26000
26000
26000
26000
26000
26000
26000
26000
27000
27000
25000
27000
27000
27000
27000
27000
27000
27000
27000
27000
28000
28000
28000
28000
28000
28000
28000
28000
28000
26000
28000
28000
29000
29000
29000
29000
29000
29000
29000
29000
29000
29000
29000
27000
30000
30000
30000
30000
30000
30000
30000
30000
30000
30000
30000
28000
31000
31000
31000
31000
31000
31000
31000
31000
31000
31000
31000
29000
32000
32000
32000
32000
32000
32000
32000
32000
32000
32000
32000
30000
33000
33000
33000
33000
33000
33000
33000
33000
33000
33000
33000
31000
34000
34000
34000
34000
34000
34000
34000
34000
34000
34000
34000
32000
35000
35000
35000
35000
35000
35000
35000
35000
35000
35228
35000
35219
35000
35211
35236
35237
35281
35292
35300
35278
35264
35273
33000
34000
35000
35256
It took 68 secs to align 423075 sequences.

[WARNING]: 1004 of your sequences generated alignments that eliminated too many bases, a list is provided in mothur.output/mothur.input.trim.contigs.good.unique.flip.accnos.
[NOTE]: 390 of your sequences were reversed to produce a better alignment.

It took 68 seconds to align 423075 sequences.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.align
mothur.output/mothur.input.trim.contigs.good.unique.align.report
mothur.output/mothur.input.trim.contigs.good.unique.flip.accnos


mothur > summary.seqs(fasta=current, count=current)
Using mothur.output/mothur.input.trim.contigs.good.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.align as input file for the fasta parameter.

Using 12 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	0	0	0	0	1	1
2.5%-tile:	1968	11546	251	0	4	43191
25%-tile:	1968	11550	253	0	4	431905
Median: 	1968	11550	253	0	4	863810
75%-tile:	1968	11550	253	0	5	1295715
97.5%-tile:	1976	11550	254	0	6	1684429
Maximum:	13425	13425	273	0	80	1727619
Mean:	1974	11542	252	0	4
# of unique seqs:	423075
total # of seqs:	1727619

It took 18 secs to summarize 1727619 sequences.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.summary


mothur > screen.seqs(fasta=current, count=current, summary=current, start=1968, end=11550, maxhomop=8)
Using mothur.output/mothur.input.trim.contigs.good.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.align as input file for the fasta parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.summary as input file for the summary parameter.

Using 12 processors.
1000
1000
1000
1000
1000
1000
2000
2000
1000
2000
1000
2000
1000
2000
2000
1000
3000
3000
2000
1000
3000
1000
2000
3000
2000
3000
3000
2000
4000
4000
3000
2000
4000
2000
3000
4000
3000
4000
4000
3000
5000
5000
4000
3000
5000
3000
4000
5000
4000
5000
5000
4000
6000
6000
5000
4000
6000
5000
4000
6000
5000
6000
6000
5000
7000
7000
6000
7000
5000
6000
5000
7000
6000
7000
7000
6000
8000
8000
7000
8000
6000
7000
6000
8000
7000
8000
8000
7000
9000
9000
8000
9000
7000
8000
7000
9000
8000
9000
9000
8000
10000
10000
9000
10000
8000
9000
8000
10000
9000
10000
10000
9000
11000
11000
10000
11000
9000
10000
11000
9000
10000
11000
11000
10000
12000
12000
11000
12000
10000
11000
12000
10000
11000
12000
12000
11000
13000
13000
12000
13000
11000
12000
13000
11000
12000
13000
13000
12000
14000
14000
13000
14000
12000
13000
14000
12000
13000
14000
14000
13000
15000
15000
14000
15000
13000
14000
15000
13000
14000
15000
15000
14000
16000
16000
15000
16000
14000
15000
16000
14000
15000
16000
16000
15000
17000
17000
16000
17000
15000
16000
17000
15000
16000
17000
17000
16000
18000
18000
17000
18000
16000
17000
18000
16000
17000
18000
18000
17000
19000
19000
18000
19000
17000
18000
19000
17000
18000
19000
19000
18000
20000
20000
19000
20000
18000
19000
20000
18000
19000
20000
20000
21000
21000
19000
20000
21000
19000
20000
21000
20000
19000
22000
22000
20000
21000
21000
21000
22000
20000
21000
22000
23000
23000
20000
22000
22000
23000
21000
21000
21000
22000
22000
23000
24000
24000
24000
23000
22000
21000
23000
23000
22000
23000
22000
24000
25000
25000
25000
24000
23000
24000
24000
23000
22000
24000
23000
26000
26000
25000
25000
26000
24000
25000
25000
24000
27000
23000
27000
25000
24000
27000
26000
25000
26000
26000
26000
28000
25000
28000
26000
28000
26000
24000
27000
25000
27000
27000
27000
29000
26000
29000
27000
29000
27000
25000
28000
26000
28000
28000
28000
30000
27000
30000
28000
30000
28000
29000
26000
27000
29000
29000
29000
31000
28000
31000
29000
31000
29000
30000
27000
28000
30000
30000
30000
32000
32000
29000
30000
32000
30000
31000
28000
29000
31000
31000
31000
33000
33000
30000
31000
33000
31000
32000
29000
30000
32000
32000
32000
34000
34000
31000
32000
34000
32000
33000
31000
30000
33000
33000
33000
35000
35000
32000
33000
35000
35256
33000
35256
34000
32000
34000
34000
31000
35257
34000
33000
34000
34000
35000
35000
33000
35000
32000
35256
35256
35256
35000
35256
34000
35000
35000
35257
34000
33000
35256
35000
35256
35000
34000
35256
35000
35257

It took 13 secs to screen 423075 sequences, removed 90176.

/******************************************/
Running command: remove.seqs(accnos=mothur.output/mothur.input.trim.contigs.good.unique.bad.accnos.temp, count=mothur.output/mothur.input.trim.contigs.good.count_table)
Removed 199951 sequences from your count file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.pick.count_table

/******************************************/

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.summary
mothur.output/mothur.input.trim.contigs.good.unique.good.align
mothur.output/mothur.input.trim.contigs.good.unique.bad.accnos
mothur.output/mothur.input.trim.contigs.good.good.count_table


It took 24 secs to screen 423075 sequences.

mothur > summary.seqs(fasta=current, count=current)
Using mothur.output/mothur.input.trim.contigs.good.good.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.align as input file for the fasta parameter.

Using 12 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	11550	230	0	3	1
2.5%-tile:	1968	11550	253	0	4	38192
25%-tile:	1968	11550	253	0	4	381918
Median: 	1968	11550	253	0	4	763835
75%-tile:	1968	11550	253	0	5	1145752
97.5%-tile:	1968	11550	254	0	6	1489477
Maximum:	1968	13425	273	0	8	1527668
Mean:	1967	11550	253	0	4
# of unique seqs:	332899
total # of seqs:	1527668

It took 13 secs to summarize 1527668 sequences.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.summary


mothur > filter.seqs(fasta=current, vertical=T, trump=.)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.align as input file for the fasta parameter.

Using 12 processors.
Creating Filter...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
4000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
5000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
6000
7000
7000
7000
7000
7000
7000
7000
7000
7000
7000
7000
7000
8000
8000
8000
8000
8000
8000
8000
8000
8000
8000
8000
8000
9000
9000
9000
9000
9000
9000
9000
9000
9000
9000
9000
9000
10000
10000
10000
10000
10000
10000
10000
10000
10000
10000
10000
10000
11000
11000
11000
11000
11000
11000
11000
11000
11000
11000
11000
11000
12000
12000
12000
12000
12000
12000
12000
12000
12000
12000
12000
12000
13000
13000
13000
13000
13000
13000
13000
13000
13000
13000
13000
13000
14000
14000
14000
14000
14000
14000
14000
14000
14000
14000
14000
14000
15000
15000
15000
15000
15000
15000
15000
15000
15000
15000
15000
15000
16000
16000
16000
16000
16000
16000
16000
16000
16000
16000
16000
16000
17000
17000
17000
17000
17000
17000
17000
17000
17000
17000
17000
17000
18000
18000
18000
18000
18000
18000
18000
18000
18000
18000
18000
18000
19000
19000
19000
19000
19000
19000
19000
19000
19000
19000
19000
19000
20000
20000
20000
20000
20000
20000
20000
20000
20000
20000
20000
20000
21000
21000
21000
21000
21000
21000
21000
21000
21000
21000
21000
21000
22000
22000
22000
22000
22000
22000
22000
22000
22000
22000
22000
22000
23000
23000
23000
23000
23000
23000
23000
23000
23000
23000
23000
23000
24000
24000
24000
24000
24000
24000
24000
24000
24000
24000
24000
24000
25000
25000
25000
25000
25000
25000
25000
25000
25000
25000
25000
25000
26000
26000
26000
26000
26000
26000
26000
26000
26000
26000
26000
26000
27000
27000
27000
27000
27000
27000
27000
27000
27000
27000
27000
27000
27741
27742
27742
27742
27741
27741
27742
27742
27741
27742
27741
27742
It took 11 secs to create filter for 332899 sequences.


Running Filter...
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
1000
2000
2000
2000
2000
1000
2000
2000
2000
2000
2000
2000
2000
3000
3000
3000
3000
3000
3000
3000
3000
3000
3000
2000
4000
4000
4000
4000
3000
4000
4000
4000
4000
4000
4000
3000
5000
5000
5000
5000
4000
5000
5000
5000
5000
4000
5000
6000
6000
6000
6000
5000
6000
6000
6000
6000
5000
5000
6000
7000
7000
7000
7000
7000
6000
7000
6000
6000
7000
7000
8000
8000
8000
8000
7000
8000
7000
8000
7000
8000
7000
9000
9000
9000
9000
8000
9000
8000
8000
8000
9000
10000
10000
10000
10000
9000
9000
8000
10000
9000
9000
9000
10000
11000
11000
10000
10000
9000
11000
10000
10000
11000
11000
10000
11000
12000
12000
11000
10000
11000
12000
11000
12000
12000
11000
13000
11000
13000
12000
12000
11000
12000
12000
13000
13000
13000
14000
12000
14000
13000
13000
12000
13000
12000
13000
14000
14000
15000
13000
15000
14000
14000
13000
14000
14000
13000
14000
15000
15000
16000
14000
16000
15000
15000
14000
15000
15000
14000
15000
16000
16000
17000
17000
15000
16000
16000
15000
16000
16000
15000
16000
17000
17000
18000
18000
16000
17000
17000
16000
17000
17000
16000
17000
18000
18000
19000
19000
17000
18000
18000
17000
18000
18000
17000
18000
19000
19000
20000
20000
18000
19000
19000
18000
19000
19000
18000
19000
20000
20000
21000
21000
19000
20000
20000
19000
20000
20000
19000
20000
21000
21000
22000
22000
20000
21000
21000
20000
21000
20000
21000
21000
22000
22000
23000
23000
21000
22000
22000
21000
22000
21000
22000
22000
23000
23000
24000
24000
22000
23000
23000
22000
23000
22000
23000
24000
23000
24000
25000
25000
23000
24000
24000
23000
24000
23000
24000
25000
24000
25000
26000
26000
24000
25000
25000
24000
25000
24000
25000
26000
25000
26000
27000
27000
25000
26000
26000
25000
26000
25000
26000
27000
27742
27742
27000
26000
26000
27000
27000
26000
27742
27000
27741
26000
27000
27742
27000
27742
27000
27000
27741
27741
27000
27742
27742
27741
27741
It took 9 secs to filter 332899 sequences.



Length of filtered alignment: 525
Number of columns removed: 12900
Length of the original alignment: 13425
Number of sequences used to construct filter: 332899

Output File Names: 
mothur.output/mothur.filter
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.fasta


mothur > unique.seqs(fasta=current, count=current)
Using mothur.output/mothur.input.trim.contigs.good.good.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.fasta as input file for the fasta parameter.
1000	1000
2000	2000
3000	3000
4000	4000
5000	5000
6000	6000
7000	7000
8000	8000
9000	9000
10000	10000
11000	11000
12000	12000
13000	13000
14000	14000
15000	15000
16000	16000
17000	17000
18000	18000
19000	19000
20000	20000
21000	21000
22000	22000
23000	23000
24000	24000
25000	25000
26000	26000
27000	27000
28000	28000
29000	28999
30000	29999
31000	30999
32000	31999
33000	32999
34000	33999
35000	34999
36000	35999
37000	36999
38000	37999
39000	38999
40000	39999
41000	40999
42000	41999
43000	42999
44000	43999
45000	44999
46000	45999
47000	46999
48000	47999
49000	48999
50000	49999
51000	50999
52000	51999
53000	52999
54000	53999
55000	54999
56000	55999
57000	56999
58000	57999
59000	58999
60000	59999
61000	60999
62000	61999
63000	62999
64000	63999
65000	64999
66000	65999
67000	66999
68000	67999
69000	68999
70000	69999
71000	70999
72000	71999
73000	72999
74000	73999
75000	74999
76000	75999
77000	76998
78000	77998
79000	78998
80000	79998
81000	80998
82000	81998
83000	82998
84000	83998
85000	84998
86000	85998
87000	86998
88000	87998
89000	88998
90000	89998
91000	90998
92000	91998
93000	92998
94000	93998
95000	94998
96000	95998
97000	96996
98000	97996
99000	98996
100000	99996
101000	100996
102000	101996
103000	102996
104000	103996
105000	104996
106000	105996
107000	106996
108000	107996
109000	108996
110000	109996
111000	110996
112000	111996
113000	112996
114000	113996
115000	114996
116000	115996
117000	116996
118000	117995
119000	118995
120000	119995
121000	120995
122000	121994
123000	122994
124000	123993
125000	124993
126000	125993
127000	126993
128000	127993
129000	128993
130000	129992
131000	130992
132000	131992
133000	132992
134000	133992
135000	134992
136000	135992
137000	136992
138000	137992
139000	138992
140000	139992
141000	140992
142000	141992
143000	142991
144000	143991
145000	144991
146000	145991
147000	146991
148000	147991
149000	148991
150000	149991
151000	150990
152000	151990
153000	152990
154000	153989
155000	154989
156000	155989
157000	156989
158000	157989
159000	158989
160000	159989
161000	160989
162000	161989
163000	162989
164000	163989
165000	164989
166000	165989
167000	166989
168000	167989
169000	168989
170000	169989
171000	170989
172000	171989
173000	172989
174000	173989
175000	174989
176000	175989
177000	176989
178000	177989
179000	178989
180000	179989
181000	180989
182000	181989
183000	182989
184000	183989
185000	184989
186000	185989
187000	186989
188000	187989
189000	188989
190000	189989
191000	190989
192000	191989
193000	192989
194000	193989
195000	194988
196000	195988
197000	196988
198000	197988
199000	198988
200000	199988
201000	200987
202000	201987
203000	202987
204000	203987
205000	204986
206000	205985
207000	206985
208000	207985
209000	208985
210000	209985
211000	210985
212000	211984
213000	212984
214000	213984
215000	214984
216000	215984
217000	216984
218000	217984
219000	218984
220000	219984
221000	220984
222000	221984
223000	222984
224000	223983
225000	224983
226000	225983
227000	226983
228000	227983
229000	228983
230000	229982
231000	230982
232000	231982
233000	232982
234000	233982
235000	234982
236000	235982
237000	236982
238000	237982
239000	238982
240000	239982
241000	240982
242000	241982
243000	242982
244000	243982
245000	244982
246000	245982
247000	246982
248000	247981
249000	248981
250000	249981
251000	250981
252000	251981
253000	252981
254000	253981
255000	254981
256000	255981
257000	256981
258000	257981
259000	258981
260000	259981
261000	260981
262000	261980
263000	262980
264000	263980
265000	264980
266000	265980
267000	266980
268000	267980
269000	268980
270000	269980
271000	270980
272000	271980
273000	272979
274000	273979
275000	274979
276000	275979
277000	276979
278000	277979
279000	278979
280000	279979
281000	280979
282000	281979
283000	282979
284000	283979
285000	284979
286000	285979
287000	286979
288000	287979
289000	288979
290000	289979
291000	290979
292000	291979
293000	292978
294000	293978
295000	294978
296000	295978
297000	296978
298000	297977
299000	298976
300000	299976
301000	300976
302000	301976
303000	302976
304000	303976
305000	304976
306000	305976
307000	306976
308000	307974
309000	308974
310000	309974
311000	310974
312000	311974
313000	312974
314000	313974
315000	314974
316000	315974
317000	316974
318000	317974
319000	318974
320000	319974
321000	320974
322000	321974
323000	322973
324000	323973
325000	324973
326000	325973
327000	326973
328000	327973
329000	328973
330000	329973
331000	330973
332000	331973
332899	332872

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta


mothur > summary.seqs(fasta=current, count=current)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta as input file for the fasta parameter.

Using 12 processors.

		Start	End	NBases	Ambigs	Polymer	NumSeqs
Minimum:	1	524	222	0	3	1
2.5%-tile:	1	525	253	0	4	38192
25%-tile:	1	525	253	0	4	381918
Median: 	1	525	253	0	4	763835
75%-tile:	1	525	253	0	5	1145752
97.5%-tile:	1	525	254	0	6	1489477
Maximum:	1	525	265	0	8	1527668
Mean:	1	524	253	0	4
# of unique seqs:	332872
total # of seqs:	1527668

It took 7 secs to summarize 1527668 sequences.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.summary


mothur > pre.cluster(fasta=current, count=current, diffs=2)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta as input file for the fasta parameter.

Using 12 processors.

/******************************************/
Running command: split.groups(groups=190703-190802-190830-190913-191004-191019-191025-191108-191111-191115-191122-191129-191206-191213-191220-200103-200110-200117-200124-200131-200205, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta, count=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.count_table)

Using 12 processors.
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200131.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta200131)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.190830.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta190830)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200103.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta200103)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191108.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191108)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200117.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta200117)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191129.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191129)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191213.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191213)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.190703.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta190703)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191115.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191115)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.190802.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta190802)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.190913.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta190913)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191019.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191019)
Selected 9 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta200131

/******************************************/
Done.
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200205.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta200205)
Selected 16629 sequences from your fasta file.
Selected 11315 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191129

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191108


Selected 19523 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta200103

/******************************************/
Done.
/******************************************/
Done.
/******************************************/
Done.
Selected 21209 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta190830

/******************************************/
Done.
Selected 17054 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta200117

/******************************************/
Done.
Selected 17028 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191213

/******************************************/
Done.
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191206.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191206)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200110.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta200110)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200124.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta200124)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191111.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191111)
Selected 19742 sequences from your fasta file.
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191220.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191220)

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191115

Selected 32187 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta190802

/******************************************/
Done.
/******************************************/
Done.
Selected 40497 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta190913

/******************************************/
Done.
Selected 96387 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191019

/******************************************/
Done.
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191122.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191122)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191004.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191004)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191025.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta191025)
Selected 18941 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta190703

/******************************************/
Done.
Selected 20150 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta200205

/******************************************/
Done.
Selected 13912 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191206

/******************************************/
Done.
Selected 18322 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta200110

Selected 21378 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191111

Selected 12450 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191220

/******************************************/
Done.
Selected 19803 sequences from your fasta file.
/******************************************/
Done.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta200124

/******************************************/
Done.
/******************************************/
Done.
Selected 18080 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191122

/******************************************/
Done.
Selected 31438 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191004

/******************************************/
Done.
Selected 20688 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta191025

/******************************************/
Done.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.190703.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.190703.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.190802.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.190802.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.190830.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.190830.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.190913.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.190913.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191004.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191004.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191019.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191019.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191025.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191025.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191108.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191108.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191111.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191111.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191115.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191115.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191122.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191122.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191129.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191129.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191206.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191206.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191213.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191213.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.191220.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.191220.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200103.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.200103.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200110.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.200110.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200117.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.200117.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200124.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.200124.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200131.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.200131.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.200205.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.200205.fasta

/******************************************/

Processing group 190802:

Processing group 190830:

Processing group 190913:

Processing group 191019:

Processing group 191108:

Processing group 191115:

Processing group 191129:

Processing group 191213:

Processing group 200103:

Processing group 200117:

Processing group 200131:

Processing group 190703:
200131	0	9	0
200131	9	9	0
Total number of sequences before pre.cluster was 9.
pre.cluster removed 0 sequences.

It took 0 secs to cluster 9 sequences.

Processing group 200205:
191129	0	10480	835
191108	0	15730	899
191129	100	5978	5337
200117	0	16298	756
191213	0	15846	1182
191115	0	18712	1030
190830	0	20850	359
200103	0	18452	1071
200205	0	19236	914
191129	200	4882	6433
191129	300	4537	6778
191129	400	4268	7047
191129	500	4008	7307
191129	600	3864	7451
191108	100	9695	6934
191129	700	3750	7565
190703	0	18612	329
190802	0	31721	466
191129	800	3599	7716
191213	100	9989	7039
200117	100	9761	7293
191129	900	3502	7813
191129	1000	3434	7881
191129	1100	3388	7927
191129	1200	3344	7971
190913	0	39769	728
200103	100	11319	8204
191129	1300	3265	8050
191108	200	8439	8190
191129	1400	3232	8083
191129	1500	3215	8100
200205	100	11223	8927
191129	1600	3205	8110
191213	200	8863	8165
191129	1700	3167	8148
191129	1800	3146	8169
190830	100	11853	9356
200117	200	8639	8415
191129	1900	3135	8180
191115	100	12026	7716
191129	2000	3098	8217
191129	2100	3068	8247
191108	300	7781	8848
191129	2200	3055	8260
191129	2300	3031	8284
191129	2400	3007	8308
191129	2500	2986	8329
191129	2600	2978	8337
191129	2700	2978	8337
191129	2800	2978	8337
191129	2900	2978	8337
191129	3000	2978	8337
191129	3100	2978	8337
191129	3200	2978	8337
191129	3300	2978	8337
191129	3400	2978	8337
191129	3500	2978	8337
191129	3600	2978	8337
191129	3700	2978	8337
191129	3800	2978	8337
191129	3900	2978	8337
191129	4000	2978	8337
191129	4100	2978	8337
191129	4200	2978	8337
191129	4300	2978	8337
191129	4400	2978	8337
191129	4500	2978	8337
191129	4600	2978	8337
191129	4700	2978	8337
191129	4800	2978	8337
191129	4900	2978	8337
191129	5000	2978	8337
191129	5100	2978	8337
191129	5200	2978	8337
191129	5300	2978	8337
191129	5400	2978	8337
191129	5500	2978	8337
191129	5600	2978	8337
191129	5700	2978	8337
191129	5800	2978	8337
191129	5900	2978	8337
191129	6000	2978	8337
191129	6100	2978	8337
191129	6200	2978	8337
191129	6300	2978	8337
191129	6400	2978	8337
191129	6500	2978	8337
191129	6600	2978	8337
191129	6700	2978	8337
191129	6800	2978	8337
191129	6900	2978	8337
191129	7000	2978	8337
191129	7100	2978	8337
191129	7200	2978	8337
191129	7300	2978	8337
191129	7400	2978	8337
191129	7500	2978	8337
191129	7600	2978	8337
191129	7700	2978	8337
191129	7800	2978	8337
191129	7900	2978	8337
191129	8000	2978	8337
191129	8100	2978	8337
191129	8200	2978	8337
191129	8300	2978	8337
191129	8400	2978	8337
191129	8500	2978	8337
191129	8600	2978	8337
191129	8700	2978	8337
191129	8800	2978	8337
191129	8900	2978	8337
191129	9000	2978	8337
191129	9100	2978	8337
191129	9200	2978	8337
191129	9300	2978	8337
191129	9400	2978	8337
191129	9500	2978	8337
191129	9600	2978	8337
191129	9700	2978	8337
191129	9800	2978	8337
191129	9900	2978	8337
191129	10000	2978	8337
191129	10100	2978	8337
191129	10200	2978	8337
191129	10300	2978	8337
191129	10400	2978	8337
191129	10500	2978	8337
191129	10600	2978	8337
191129	10700	2978	8337
191129	10800	2978	8337
191129	10900	2978	8337
191129	11000	2978	8337
191129	11100	2978	8337
191129	11200	2978	8337
191129	11300	2978	8337
191129	11315	2978	8337
191213	300	8228	8800
Total number of sequences before pre.cluster was 11315.
pre.cluster removed 8337 sequences.

It took 3 secs to cluster 11315 sequences.

Processing group 191206:
200103	200	9884	9639
200117	300	8002	9052
191108	400	7367	9262
191213	400	7872	9156
200205	200	9581	10569
200117	400	7711	9343
191108	500	7073	9556
190830	200	8964	12245
200103	300	9319	10204
191213	500	7599	9429
191115	200	10535	9207
200117	500	7513	9541
191108	600	6858	9771
191206	0	13012	900
200117	600	7349	9705
200205	300	8855	11295
191213	600	7338	9690
191108	700	6630	9999
200103	400	8862	10661
190703	100	12159	6782
200117	700	7147	9907
191115	300	9793	9949
191108	800	6458	10171
191213	700	7119	9909
190830	300	7447	13762
200117	800	7045	10009
200103	500	8583	10940
200205	400	8463	11687
191108	900	6340	10289
191213	800	6980	10048
190802	100	25611	6576
200117	900	6935	10119
200103	600	8349	11174
191206	100	8137	5775
200205	500	8250	11900
191108	1000	6253	10376
200117	1000	6844	10210
191115	400	9315	10427
190830	400	6336	14873
191213	900	6859	10169
191108	1100	6153	10476
200117	1100	6752	10302
200103	700	8149	11374
200205	600	8034	12116
191213	1000	6714	10314
191108	1200	6106	10523
190830	500	5627	15582
200117	1200	6678	10376
191108	1300	6051	10578
191206	200	6973	6939
191115	500	8999	10743
191213	1100	6645	10383
200103	800	7993	11530
200205	700	7869	12281
200117	1300	6629	10425
191108	1400	5992	10637
190830	600	5078	16131
191213	1200	6576	10452
191108	1500	5947	10682
200117	1400	6586	10468
200205	800	7754	12396
191206	300	6509	7403
191213	1300	6515	10513
200103	900	7809	11714
190830	700	4674	16535
200117	1500	6554	10500
191108	1600	5892	10737
200205	900	7664	12486
190703	200	10171	8770
191108	1700	5865	10764
191213	1400	6402	10626
191019	0	95262	1125
190830	800	4394	16815
200117	1600	6486	10568
191115	600	8690	11052
191206	400	6242	7670
200103	1000	7723	11800
191108	1800	5852	10777
190913	100	30044	10453
190830	900	4223	16986
191108	1900	5835	10794
200205	1000	7566	12584
191213	1500	6362	10666
200117	1700	6432	10622
190830	1000	4102	17107
191108	2000	5815	10814
191206	500	6028	7884
200117	1800	6371	10683
200103	1100	7563	11960
190830	1100	3980	17229
191213	1600	6280	10748
191108	2100	5774	10855
200205	1100	7385	12765
190830	1200	3907	17302
191108	2200	5756	10873
190830	1300	3821	17388
200117	1900	6325	10729
191213	1700	6252	10776
190830	1400	3777	17432
200103	1200	7478	12045
190830	1500	3747	17462
200205	1200	7325	12825
191108	2300	5735	10894
190830	1600	3701	17508
191115	700	8459	11283
191206	600	5826	8086
190830	1700	3680	17529
191213	1800	6232	10796
190830	1800	3661	17548
200117	2000	6300	10754
190830	1900	3640	17569
191108	2400	5707	10922
190830	2000	3569	17640
190830	2100	3545	17664
190830	2200	3522	17687
200205	1300	7241	12909
191213	1900	6163	10865
190830	2300	3507	17702
191108	2500	5665	10964
190830	2400	3487	17722
200103	1300	7388	12135
191206	700	5690	8222
190830	2500	3476	17733
190830	2600	3463	17746
200117	2100	6262	10792
190830	2700	3445	17764
190830	2800	3431	17778
190830	2900	3416	17793
191108	2600	5610	11019
191213	2000	6140	10888
190830	3000	3403	17806
191115	800	8195	11547
190830	3100	3380	17829
200205	1400	7187	12963
190830	3200	3374	17835
190830	3300	3369	17840
190830	3400	3353	17856
200117	2200	6232	10822
190830	3500	3333	17876
200103	1400	7288	12235
191108	2700	5592	11037
190830	3600	3328	17881
191213	2100	6124	10904
190830	3700	3307	17902
191206	800	5549	8363
190830	3800	3301	17908
190830	3900	3283	17926
190830	4000	3272	17937
190830	4100	3267	17942
191108	2800	5566	11063
190830	4200	3260	17949
200205	1500	7129	13021
191213	2200	6067	10961
190830	4300	3239	17970
190802	200	24136	8051
190830	4400	3227	17982
200117	2300	6216	10838
190830	4500	3210	17999
190830	4600	3206	18003
190830	4700	3206	18003
190830	4800	3206	18003
190830	4900	3206	18003
190830	5000	3206	18003
190830	5100	3206	18003
190830	5200	3206	18003
190830	5300	3206	18003
190830	5400	3206	18003
190830	5500	3206	18003
190830	5600	3206	18003
190830	5700	3206	18003
190830	5800	3206	18003
190830	5900	3206	18003
190830	6000	3206	18003
190830	6100	3206	18003
190830	6200	3206	18003
190830	6300	3206	18003
190830	6400	3206	18003
190830	6500	3206	18003
190830	6600	3206	18003
190830	6700	3206	18003
190830	6800	3206	18003
190830	6900	3206	18003
190830	7000	3206	18003
190830	7100	3206	18003
190830	7200	3206	18003
190830	7300	3206	18003
190830	7400	3206	18003
190830	7500	3206	18003
200103	1500	7245	12278
190830	7600	3206	18003
190830	7700	3206	18003
190830	7800	3206	18003
190830	7900	3206	18003
190830	8000	3206	18003
190830	8100	3206	18003
190830	8200	3206	18003
190830	8300	3206	18003
190830	8400	3206	18003
190830	8500	3206	18003
190830	8600	3206	18003
190830	8700	3206	18003
190830	8800	3206	18003
190830	8900	3206	18003
190830	9000	3206	18003
190830	9100	3206	18003
190830	9200	3206	18003
190830	9300	3206	18003
190830	9400	3206	18003
190830	9500	3206	18003
190830	9600	3206	18003
190830	9700	3206	18003
190830	9800	3206	18003
190830	9900	3206	18003
190830	10000	3206	18003
190830	10100	3206	18003
190830	10200	3206	18003
190830	10300	3206	18003
190830	10400	3206	18003
190830	10500	3206	18003
190830	10600	3206	18003
190830	10700	3206	18003
190830	10800	3206	18003
190830	10900	3206	18003
190830	11000	3206	18003
190830	11100	3206	18003
190830	11200	3206	18003
190830	11300	3206	18003
190830	11400	3206	18003
190830	11500	3206	18003
190830	11600	3206	18003
190830	11700	3206	18003
190830	11800	3206	18003
190830	11900	3206	18003
190830	12000	3206	18003
190830	12100	3206	18003
190830	12200	3206	18003
190830	12300	3206	18003
190830	12400	3206	18003
190830	12500	3206	18003
190830	12600	3206	18003
190830	12700	3206	18003
190830	12800	3206	18003
190830	12900	3206	18003
190830	13000	3206	18003
190830	13100	3206	18003
190830	13200	3206	18003
190830	13300	3206	18003
190830	13400	3206	18003
190830	13500	3206	18003
190703	300	9025	9916
190830	13600	3206	18003
190830	13700	3206	18003
190830	13800	3206	18003
190830	13900	3206	18003
190830	14000	3206	18003
190830	14100	3206	18003
190830	14200	3206	18003
190830	14300	3206	18003
190830	14400	3206	18003
190830	14500	3206	18003
190830	14600	3206	18003
190830	14700	3206	18003
190830	14800	3206	18003
190830	14900	3206	18003
190830	15000	3206	18003
190830	15100	3206	18003
190830	15200	3206	18003
190830	15300	3206	18003
190830	15400	3206	18003
190830	15500	3206	18003
190830	15600	3206	18003
190830	15700	3206	18003
190830	15800	3206	18003
190830	15900	3206	18003
190830	16000	3206	18003
190830	16100	3206	18003
190830	16200	3206	18003
190830	16300	3206	18003
190830	16400	3206	18003
190830	16500	3206	18003
190830	16600	3206	18003
190830	16700	3206	18003
190830	16800	3206	18003
190830	16900	3206	18003
190830	17000	3206	18003
190830	17100	3206	18003
190830	17200	3206	18003
190830	17300	3206	18003
190830	17400	3206	18003
190830	17500	3206	18003
190830	17600	3206	18003
190830	17700	3206	18003
190830	17800	3206	18003
190830	17900	3206	18003
190830	18000	3206	18003
190830	18100	3206	18003
190830	18200	3206	18003
190830	18300	3206	18003
190830	18400	3206	18003
190830	18500	3206	18003
190830	18600	3206	18003
190830	18700	3206	18003
190830	18800	3206	18003
190830	18900	3206	18003
190830	19000	3206	18003
190830	19100	3206	18003
190830	19200	3206	18003
190830	19300	3206	18003
190830	19400	3206	18003
190830	19500	3206	18003
190830	19600	3206	18003
190830	19700	3206	18003
190830	19800	3206	18003
190830	19900	3206	18003
190830	20000	3206	18003
190830	20100	3206	18003
190830	20200	3206	18003
190830	20300	3206	18003
190830	20400	3206	18003
190830	20500	3206	18003
190830	20600	3206	18003
190830	20700	3206	18003
190830	20800	3206	18003
190830	20900	3206	18003
190830	21000	3206	18003
190830	21100	3206	18003
190830	21200	3206	18003
190830	21209	3206	18003
191108	2900	5549	11080
191206	900	5476	8436
Total number of sequences before pre.cluster was 21209.
pre.cluster removed 18003 sequences.

It took 6 secs to cluster 21209 sequences.
191213	2300	6044	10984
200205	1600	7047	13103
200117	2400	6198	10856
191115	900	8038	11704
191108	3000	5520	11109
200103	1600	7133	12390
200205	1700	7024	13126
191213	2400	6021	11007
191206	1000	5394	8518
191108	3100	5496	11133
200117	2500	6174	10880
191213	2500	6012	11016
200205	1800	6966	13184
200103	1700	7073	12450
191108	3200	5470	11159
191206	1100	5327	8585
200117	2600	6152	10902
200205	1900	6939	13211
191213	2600	5971	11057
191115	1000	7937	11805
200103	1800	7033	12490
191108	3300	5451	11178
191108	3400	5451	11178
191108	3500	5451	11178
191108	3600	5451	11178
191108	3700	5451	11178
191108	3800	5451	11178
191108	3900	5451	11178
191108	4000	5451	11178
191108	4100	5451	11178
191108	4200	5451	11178
191108	4300	5451	11178
191108	4400	5451	11178
191108	4500	5451	11178
191108	4600	5451	11178
191108	4700	5451	11178
191108	4800	5451	11178
191108	4900	5451	11178
191108	5000	5451	11178
191108	5100	5451	11178
191108	5200	5451	11178
191108	5300	5451	11178
191108	5400	5451	11178
191108	5500	5451	11178
191108	5600	5451	11178
191108	5700	5451	11178
191108	5800	5451	11178
191108	5900	5451	11178
191108	6000	5451	11178
191108	6100	5451	11178
191108	6200	5451	11178
191108	6300	5451	11178
191108	6400	5451	11178
191108	6500	5451	11178
191108	6600	5451	11178
191108	6700	5451	11178
191108	6800	5451	11178
191108	6900	5451	11178
191108	7000	5451	11178
191108	7100	5451	11178
191108	7200	5451	11178
191108	7300	5451	11178
191108	7400	5451	11178
191108	7500	5451	11178
191108	7600	5451	11178
191108	7700	5451	11178
191108	7800	5451	11178
191108	7900	5451	11178
191108	8000	5451	11178
191206	1200	5247	8665
191108	8100	5451	11178
191108	8200	5451	11178
191108	8300	5451	11178
191108	8400	5451	11178
191108	8500	5451	11178
191108	8600	5451	11178
191108	8700	5451	11178
191108	8800	5451	11178
191108	8900	5451	11178
191108	9000	5451	11178
191108	9100	5451	11178
191108	9200	5451	11178
191108	9300	5451	11178
191108	9400	5451	11178
191108	9500	5451	11178
191108	9600	5451	11178
191108	9700	5451	11178
191108	9800	5451	11178
191108	9900	5451	11178
191108	10000	5451	11178
191108	10100	5451	11178
191108	10200	5451	11178
191108	10300	5451	11178
191108	10400	5451	11178
191108	10500	5451	11178
191108	10600	5451	11178
191108	10700	5451	11178
191108	10800	5451	11178
191108	10900	5451	11178
191108	11000	5451	11178
191108	11100	5451	11178
191108	11200	5451	11178
191108	11300	5451	11178
191108	11400	5451	11178
191108	11500	5451	11178
191108	11600	5451	11178
191108	11700	5451	11178
191108	11800	5451	11178
191108	11900	5451	11178
191108	12000	5451	11178
191108	12100	5451	11178
191108	12200	5451	11178
191108	12300	5451	11178
191108	12400	5451	11178
191108	12500	5451	11178
191108	12600	5451	11178
191108	12700	5451	11178
191108	12800	5451	11178
191108	12900	5451	11178
191108	13000	5451	11178
191108	13100	5451	11178
191108	13200	5451	11178
191108	13300	5451	11178
191108	13400	5451	11178
191108	13500	5451	11178
200117	2700	6125	10929
191108	13600	5451	11178
191108	13700	5451	11178
191108	13800	5451	11178
191108	13900	5451	11178
191108	14000	5451	11178
191108	14100	5451	11178
191108	14200	5451	11178
191108	14300	5451	11178
191108	14400	5451	11178
191108	14500	5451	11178
191108	14600	5451	11178
191108	14700	5451	11178
191108	14800	5451	11178
191108	14900	5451	11178
191108	15000	5451	11178
191108	15100	5451	11178
191108	15200	5451	11178
191108	15300	5451	11178
191108	15400	5451	11178
191108	15500	5451	11178
191108	15600	5451	11178
191108	15700	5451	11178
191108	15800	5451	11178
191108	15900	5451	11178
191108	16000	5451	11178
191108	16100	5451	11178
191108	16200	5451	11178
191108	16300	5451	11178
191108	16400	5451	11178
191108	16500	5451	11178
191108	16600	5451	11178
191108	16629	5451	11178
191213	2700	5940	11088
Total number of sequences before pre.cluster was 16629.
pre.cluster removed 11178 sequences.

200205	2000	6891	13259
It took 6 secs to cluster 16629 sequences.

Processing group 191111:
191213	2800	5913	11115
200103	1900	6985	12538
200117	2800	6101	10953
191206	1300	5173	8739
200205	2100	6869	13281
191213	2900	5889	11139
200117	2900	6083	10971
191206	1400	5120	8792
200205	2200	6802	13348
191115	1100	7802	11940
200103	2000	6881	12642
191213	3000	5872	11156
191206	1500	5089	8823
200103	2100	6864	12659
200205	2300	6731	13419
200117	3000	6041	11013
191213	3100	5848	11180
190703	400	8270	10671
191115	1200	7726	12016
191206	1600	5074	8838
200103	2200	6851	12672
191213	3200	5832	11196
200205	2400	6698	13452
200117	3100	6021	11033
191206	1700	5035	8877
191213	3300	5820	11208
200103	2300	6827	12696
200205	2500	6630	13520
191206	1800	5015	8897
200117	3200	6004	11050
200103	2400	6789	12734
191213	3400	5806	11222
200205	2600	6599	13551
191115	1300	7622	12120
191206	1900	4993	8919
200103	2500	6763	12760
191213	3500	5778	11250
200117	3300	5982	11072
200205	2700	6565	13585
200117	3400	5968	11086
200117	3500	5968	11086
200117	3600	5968	11086
200117	3700	5968	11086
200117	3800	5968	11086
200117	3900	5968	11086
200117	4000	5968	11086
200117	4100	5968	11086
200117	4200	5968	11086
200117	4300	5968	11086
200117	4400	5968	11086
200117	4500	5968	11086
200117	4600	5968	11086
200117	4700	5968	11086
200117	4800	5968	11086
200117	4900	5968	11086
200117	5000	5968	11086
200117	5100	5968	11086
200117	5200	5968	11086
200117	5300	5968	11086
200117	5400	5968	11086
191206	2000	4978	8934
200117	5500	5968	11086
200117	5600	5968	11086
200117	5700	5968	11086
200117	5800	5968	11086
200117	5900	5968	11086
200117	6000	5968	11086
200117	6100	5968	11086
191213	3600	5771	11257
200117	6200	5968	11086
191213	3700	5771	11257
200117	6300	5968	11086
200117	6400	5968	11086
191213	3800	5771	11257
200117	6500	5968	11086
191213	3900	5771	11257
200117	6600	5968	11086
200117	6700	5968	11086
191213	4000	5771	11257
200117	6800	5968	11086
191213	4100	5771	11257
200117	6900	5968	11086
191213	4200	5771	11257
191213	4300	5771	11257
200117	7000	5968	11086
200117	7100	5968	11086
191213	4400	5771	11257
200117	7200	5968	11086
191213	4500	5771	11257
200117	7300	5968	11086
191213	4600	5771	11257
200117	7400	5968	11086
191213	4700	5771	11257
200117	7500	5968	11086
191213	4800	5771	11257
200117	7600	5968	11086
191213	4900	5771	11257
200117	7700	5968	11086
191213	5000	5771	11257
200117	7800	5968	11086
200117	7900	5968	11086
191213	5100	5771	11257
200117	8000	5968	11086
191213	5200	5771	11257
200117	8100	5968	11086
191213	5300	5771	11257
200117	8200	5968	11086
191213	5400	5771	11257
200117	8300	5968	11086
191213	5500	5771	11257
200117	8400	5968	11086
191213	5600	5771	11257
200117	8500	5968	11086
200117	8600	5968	11086
191213	5700	5771	11257
200117	8700	5968	11086
191213	5800	5771	11257
200117	8800	5968	11086
191213	5900	5771	11257
200117	8900	5968	11086
200117	9000	5968	11086
191213	6000	5771	11257
200117	9100	5968	11086
191213	6100	5771	11257
200117	9200	5968	11086
200117	9300	5968	11086
191213	6200	5771	11257
200117	9400	5968	11086
191213	6300	5771	11257
200117	9500	5968	11086
191213	6400	5771	11257
200117	9600	5968	11086
191213	6500	5771	11257
200117	9700	5968	11086
191213	6600	5771	11257
200117	9800	5968	11086
191213	6700	5771	11257
200117	9900	5968	11086
200117	10000	5968	11086
191213	6800	5771	11257
200117	10100	5968	11086
191213	6900	5771	11257
200117	10200	5968	11086
191213	7000	5771	11257
200117	10300	5968	11086
200103	2600	6729	12794
191213	7100	5771	11257
200117	10400	5968	11086
191213	7200	5771	11257
200117	10500	5968	11086
200117	10600	5968	11086
191213	7300	5771	11257
200117	10700	5968	11086
191213	7400	5771	11257
200117	10800	5968	11086
191213	7500	5771	11257
200117	10900	5968	11086
191213	7600	5771	11257
200117	11000	5968	11086
200117	11100	5968	11086
191213	7700	5771	11257
200117	11200	5968	11086
200117	11300	5968	11086
191213	7800	5771	11257
200117	11400	5968	11086
200117	11500	5968	11086
191213	7900	5771	11257
200117	11600	5968	11086
191213	8000	5771	11257
200117	11700	5968	11086
191213	8100	5771	11257
200117	11800	5968	11086
200117	11900	5968	11086
191213	8200	5771	11257
200117	12000	5968	11086
191213	8300	5771	11257
200117	12100	5968	11086
200117	12200	5968	11086
191213	8400	5771	11257
200117	12300	5968	11086
191213	8500	5771	11257
200117	12400	5968	11086
200117	12500	5968	11086
191213	8600	5771	11257
200117	12600	5968	11086
191213	8700	5771	11257
200117	12700	5968	11086
200117	12800	5968	11086
191213	8800	5771	11257
200117	12900	5968	11086
200117	13000	5968	11086
191213	8900	5771	11257
200117	13100	5968	11086
191213	9000	5771	11257
200117	13200	5968	11086
200117	13300	5968	11086
191213	9100	5771	11257
200117	13400	5968	11086
200117	13500	5968	11086
191213	9200	5771	11257
200117	13600	5968	11086
191213	9300	5771	11257
200117	13700	5968	11086
200117	13800	5968	11086
191213	9400	5771	11257
200117	13900	5968	11086
191213	9500	5771	11257
200117	14000	5968	11086
191213	9600	5771	11257
200117	14100	5968	11086
200117	14200	5968	11086
191213	9700	5771	11257
200117	14300	5968	11086
200117	14400	5968	11086
191213	9800	5771	11257
200117	14500	5968	11086
200117	14600	5968	11086
191213	9900	5771	11257
200117	14700	5968	11086
200117	14800	5968	11086
191213	10000	5771	11257
200117	14900	5968	11086
191213	10100	5771	11257
200117	15000	5968	11086
200117	15100	5968	11086
191213	10200	5771	11257
200117	15200	5968	11086
200117	15300	5968	11086
191213	10300	5771	11257
200117	15400	5968	11086
200117	15500	5968	11086
191213	10400	5771	11257
200117	15600	5968	11086
191213	10500	5771	11257
200117	15700	5968	11086
200117	15800	5968	11086
191213	10600	5771	11257
200117	15900	5968	11086
200117	16000	5968	11086
191213	10700	5771	11257
200117	16100	5968	11086
200117	16200	5968	11086
191213	10800	5771	11257
200117	16300	5968	11086
200117	16400	5968	11086
191213	10900	5771	11257
200117	16500	5968	11086
200117	16600	5968	11086
200117	16700	5968	11086
191213	11000	5771	11257
200117	16800	5968	11086
200117	16900	5968	11086
191213	11100	5771	11257
200117	17000	5968	11086
200117	17054	5968	11086
191213	11200	5771	11257
191213	11300	5771	11257
191213	11400	5771	11257
191213	11500	5771	11257
191213	11600	5771	11257
191213	11700	5771	11257
191213	11800	5771	11257
191213	11900	5771	11257
191213	12000	5771	11257
191213	12100	5771	11257
191213	12200	5771	11257
191213	12300	5771	11257
191213	12400	5771	11257
191213	12500	5771	11257
191213	12600	5771	11257
191213	12700	5771	11257
191213	12800	5771	11257
191213	12900	5771	11257
191213	13000	5771	11257
191213	13100	5771	11257
191213	13200	5771	11257
191213	13300	5771	11257
191213	13400	5771	11257
191213	13500	5771	11257
191213	13600	5771	11257
191213	13700	5771	11257
191213	13800	5771	11257
191213	13900	5771	11257
191213	14000	5771	11257
191213	14100	5771	11257
191213	14200	5771	11257
191213	14300	5771	11257
191213	14400	5771	11257
191213	14500	5771	11257
191213	14600	5771	11257
191213	14700	5771	11257
191213	14800	5771	11257
191213	14900	5771	11257
191213	15000	5771	11257
191213	15100	5771	11257
191213	15200	5771	11257
191213	15300	5771	11257
191213	15400	5771	11257
191213	15500	5771	11257
191213	15600	5771	11257
191213	15700	5771	11257
191213	15800	5771	11257
191213	15900	5771	11257
191213	16000	5771	11257
191213	16100	5771	11257
191213	16200	5771	11257
191213	16300	5771	11257
191213	16400	5771	11257
191213	16500	5771	11257
191213	16600	5771	11257
191213	16700	5771	11257
191213	16800	5771	11257
191213	16900	5771	11257
Total number of sequences before pre.cluster was 17054.
pre.cluster removed 11086 sequences.

191213	17000	5771	11257
191213	17028	5771	11257
200205	2800	6546	13604
Total number of sequences before pre.cluster was 17028.
pre.cluster removed 11257 sequences.

It took 7 secs to cluster 17054 sequences.

Processing group 200124:
200103	2700	6722	12801
191115	1400	7569	12173
191206	2100	4955	8957
It took 7 secs to cluster 17028 sequences.

Processing group 191220:
200205	2900	6531	13619
200103	2800	6686	12837
191206	2200	4921	8991
200205	3000	6511	13639
200103	2900	6677	12846
191115	1500	7508	12234
191206	2300	4896	9016
191111	0	20679	699
200205	3100	6493	13657
191206	2400	4882	9030
190703	500	7689	11252
200103	3000	6645	12878
191206	2500	4853	9059
200205	3200	6468	13682
200103	3100	6625	12898
190802	300	23239	8948
191115	1600	7445	12297
191206	2600	4835	9077
191206	2700	4835	9077
191206	2800	4835	9077
191206	2900	4835	9077
191206	3000	4835	9077
191206	3100	4835	9077
191206	3200	4835	9077
191206	3300	4835	9077
191206	3400	4835	9077
191206	3500	4835	9077
191206	3600	4835	9077
191206	3700	4835	9077
191206	3800	4835	9077
191206	3900	4835	9077
191206	4000	4835	9077
191206	4100	4835	9077
191206	4200	4835	9077
191206	4300	4835	9077
191206	4400	4835	9077
191206	4500	4835	9077
191206	4600	4835	9077
191206	4700	4835	9077
191206	4800	4835	9077
191206	4900	4835	9077
191206	5000	4835	9077
191206	5100	4835	9077
191206	5200	4835	9077
191206	5300	4835	9077
191206	5400	4835	9077
191206	5500	4835	9077
191206	5600	4835	9077
191206	5700	4835	9077
191206	5800	4835	9077
191206	5900	4835	9077
191206	6000	4835	9077
191206	6100	4835	9077
191206	6200	4835	9077
191206	6300	4835	9077
191206	6400	4835	9077
191206	6500	4835	9077
191206	6600	4835	9077
191206	6700	4835	9077
191206	6800	4835	9077
191206	6900	4835	9077
191206	7000	4835	9077
191206	7100	4835	9077
191206	7200	4835	9077
191206	7300	4835	9077
191206	7400	4835	9077
191206	7500	4835	9077
191206	7600	4835	9077
191206	7700	4835	9077
191206	7800	4835	9077
191206	7900	4835	9077
191206	8000	4835	9077
191206	8100	4835	9077
191206	8200	4835	9077
191206	8300	4835	9077
191206	8400	4835	9077
191206	8500	4835	9077
191206	8600	4835	9077
191206	8700	4835	9077
191206	8800	4835	9077
191206	8900	4835	9077
191206	9000	4835	9077
191206	9100	4835	9077
191206	9200	4835	9077
191206	9300	4835	9077
191206	9400	4835	9077
191206	9500	4835	9077
191206	9600	4835	9077
191206	9700	4835	9077
191206	9800	4835	9077
191206	9900	4835	9077
191206	10000	4835	9077
191206	10100	4835	9077
191206	10200	4835	9077
191206	10300	4835	9077
191206	10400	4835	9077
191206	10500	4835	9077
191206	10600	4835	9077
200205	3300	6424	13726
191206	10700	4835	9077
191206	10800	4835	9077
191206	10900	4835	9077
191206	11000	4835	9077
191206	11100	4835	9077
191206	11200	4835	9077
191206	11300	4835	9077
191206	11400	4835	9077
191206	11500	4835	9077
191206	11600	4835	9077
191206	11700	4835	9077
191206	11800	4835	9077
191206	11900	4835	9077
191206	12000	4835	9077
191206	12100	4835	9077
191206	12200	4835	9077
191206	12300	4835	9077
191206	12400	4835	9077
191206	12500	4835	9077
191206	12600	4835	9077
191206	12700	4835	9077
191206	12800	4835	9077
191206	12900	4835	9077
191206	13000	4835	9077
191206	13100	4835	9077
191206	13200	4835	9077
191206	13300	4835	9077
191206	13400	4835	9077
191206	13500	4835	9077
191206	13600	4835	9077
191206	13700	4835	9077
191206	13800	4835	9077
191206	13900	4835	9077
191206	13912	4835	9077
200103	3200	6605	12918
Total number of sequences before pre.cluster was 13912.
pre.cluster removed 9077 sequences.

It took 5 secs to cluster 13912 sequences.
191115	1700	7403	12339
200205	3400	6415	13735
200103	3300	6579	12944
200205	3500	6395	13755
200103	3400	6551	12972
191220	0	11757	693
191115	1800	7355	12387
200205	3600	6377	13773
200103	3500	6514	13009
200205	3700	6350	13800
190703	600	7181	11760
191115	1900	7306	12436
190913	200	27317	13180
200103	3600	6495	13028
200205	3800	6322	13828
200124	0	18854	949
200103	3700	6474	13049
200205	3900	6305	13845
191115	2000	7255	12487
200205	4000	6288	13862
200103	3800	6460	13063
191115	2100	7239	12503
200205	4100	6265	13885
200103	3900	6442	13081
200205	4200	6245	13905
190703	700	6825	12116
191115	2200	7209	12533
200205	4300	6241	13909
200205	4400	6241	13909
200205	4500	6241	13909
200205	4600	6241	13909
200205	4700	6241	13909
200205	4800	6241	13909
200205	4900	6241	13909
200205	5000	6241	13909
200205	5100	6241	13909
200205	5200	6241	13909
200205	5300	6241	13909
200205	5400	6241	13909
200205	5500	6241	13909
200205	5600	6241	13909
200205	5700	6241	13909
200205	5800	6241	13909
200205	5900	6241	13909
200205	6000	6241	13909
200205	6100	6241	13909
200205	6200	6241	13909
200205	6300	6241	13909
200103	4000	6422	13101
200205	6400	6241	13909
200205	6500	6241	13909
200205	6600	6241	13909
200205	6700	6241	13909
200205	6800	6241	13909
200205	6900	6241	13909
200205	7000	6241	13909
200205	7100	6241	13909
200205	7200	6241	13909
200205	7300	6241	13909
200205	7400	6241	13909
200205	7500	6241	13909
200205	7600	6241	13909
200205	7700	6241	13909
200205	7800	6241	13909
200205	7900	6241	13909
200205	8000	6241	13909
200205	8100	6241	13909
200205	8200	6241	13909
200205	8300	6241	13909
200205	8400	6241	13909
200205	8500	6241	13909
200205	8600	6241	13909
200205	8700	6241	13909
200205	8800	6241	13909
200205	8900	6241	13909
200205	9000	6241	13909
200205	9100	6241	13909
200205	9200	6241	13909
200205	9300	6241	13909
200205	9400	6241	13909
200205	9500	6241	13909
200205	9600	6241	13909
200205	9700	6241	13909
200205	9800	6241	13909
200205	9900	6241	13909
200205	10000	6241	13909
200205	10100	6241	13909
200205	10200	6241	13909
200205	10300	6241	13909
200205	10400	6241	13909
200205	10500	6241	13909
200205	10600	6241	13909
200205	10700	6241	13909
200205	10800	6241	13909
200205	10900	6241	13909
200205	11000	6241	13909
191220	100	6958	5492
200205	11100	6241	13909
200205	11200	6241	13909
200205	11300	6241	13909
200205	11400	6241	13909
200205	11500	6241	13909
200205	11600	6241	13909
200205	11700	6241	13909
200103	4100	6404	13119
200205	11800	6241	13909
200205	11900	6241	13909
200103	4200	6404	13119
200205	12000	6241	13909
200103	4300	6404	13119
200205	12100	6241	13909
200205	12200	6241	13909
200103	4400	6404	13119
200205	12300	6241	13909
200103	4500	6404	13119
200205	12400	6241	13909
200205	12500	6241	13909
200103	4600	6404	13119
200205	12600	6241	13909
200205	12700	6241	13909
200103	4700	6404	13119
200205	12800	6241	13909
200103	4800	6404	13119
200205	12900	6241	13909
200205	13000	6241	13909
200103	4900	6404	13119
200205	13100	6241	13909
200103	5000	6404	13119
200205	13200	6241	13909
200205	13300	6241	13909
200103	5100	6404	13119
200205	13400	6241	13909
200205	13500	6241	13909
200103	5200	6404	13119
200205	13600	6241	13909
200205	13700	6241	13909
200103	5300	6404	13119
200205	13800	6241	13909
200205	13900	6241	13909
200103	5400	6404	13119
200205	14000	6241	13909
200205	14100	6241	13909
200103	5500	6404	13119
200205	14200	6241	13909
200205	14300	6241	13909
200103	5600	6404	13119
200205	14400	6241	13909
200205	14500	6241	13909
200103	5700	6404	13119
200205	14600	6241	13909
200205	14700	6241	13909
200103	5800	6404	13119
200205	14800	6241	13909
200205	14900	6241	13909
200103	5900	6404	13119
200205	15000	6241	13909
200205	15100	6241	13909
200103	6000	6404	13119
200205	15200	6241	13909
200205	15300	6241	13909
200103	6100	6404	13119
200205	15400	6241	13909
200103	6200	6404	13119
200205	15500	6241	13909
200205	15600	6241	13909
200103	6300	6404	13119
200205	15700	6241	13909
200205	15800	6241	13909
200205	15900	6241	13909
200103	6400	6404	13119
200205	16000	6241	13909
200205	16100	6241	13909
200103	6500	6404	13119
200205	16200	6241	13909
200205	16300	6241	13909
200103	6600	6404	13119
200205	16400	6241	13909
200205	16500	6241	13909
200205	16600	6241	13909
200205	16700	6241	13909
200103	6700	6404	13119
200205	16800	6241	13909
200205	16900	6241	13909
200103	6800	6404	13119
200205	17000	6241	13909
200205	17100	6241	13909
200103	6900	6404	13119
200205	17200	6241	13909
200205	17300	6241	13909
200205	17400	6241	13909
200103	7000	6404	13119
200205	17500	6241	13909
200205	17600	6241	13909
200103	7100	6404	13119
200205	17700	6241	13909
200205	17800	6241	13909
200205	17900	6241	13909
200205	18000	6241	13909
200103	7200	6404	13119
200205	18100	6241	13909
200205	18200	6241	13909
200103	7300	6404	13119
200205	18300	6241	13909
200205	18400	6241	13909
200205	18500	6241	13909
200103	7400	6404	13119
200205	18600	6241	13909
200205	18700	6241	13909
200205	18800	6241	13909
200103	7500	6404	13119
200205	18900	6241	13909
200205	19000	6241	13909
200103	7600	6404	13119
200205	19100	6241	13909
200205	19200	6241	13909
200205	19300	6241	13909
200103	7700	6404	13119
200205	19400	6241	13909
200205	19500	6241	13909
200205	19600	6241	13909
200103	7800	6404	13119
200205	19700	6241	13909
200205	19800	6241	13909
200205	19900	6241	13909
200205	20000	6241	13909
200103	7900	6404	13119
200205	20100	6241	13909
200205	20150	6241	13909
200103	8000	6404	13119
200103	8100	6404	13119
200103	8200	6404	13119
200103	8300	6404	13119
200103	8400	6404	13119
200103	8500	6404	13119
200103	8600	6404	13119
200103	8700	6404	13119
200103	8800	6404	13119
200103	8900	6404	13119
200103	9000	6404	13119
200103	9100	6404	13119
200103	9200	6404	13119
200103	9300	6404	13119
200103	9400	6404	13119
200103	9500	6404	13119
200103	9600	6404	13119
200103	9700	6404	13119
200103	9800	6404	13119
200103	9900	6404	13119
200103	10000	6404	13119
200103	10100	6404	13119
200103	10200	6404	13119
200103	10300	6404	13119
200103	10400	6404	13119
200103	10500	6404	13119
200103	10600	6404	13119
200103	10700	6404	13119
200103	10800	6404	13119
200103	10900	6404	13119
Total number of sequences before pre.cluster was 20150.
pre.cluster removed 13909 sequences.

200103	11000	6404	13119
200103	11100	6404	13119
200103	11200	6404	13119
200103	11300	6404	13119
200103	11400	6404	13119
200103	11500	6404	13119
200103	11600	6404	13119
200103	11700	6404	13119
200103	11800	6404	13119
200103	11900	6404	13119
200103	12000	6404	13119
200103	12100	6404	13119
200103	12200	6404	13119
200103	12300	6404	13119
200103	12400	6404	13119
200103	12500	6404	13119
200103	12600	6404	13119
200103	12700	6404	13119
200103	12800	6404	13119
200103	12900	6404	13119
200103	13000	6404	13119
200103	13100	6404	13119
200103	13200	6404	13119
200103	13300	6404	13119
200103	13400	6404	13119
200103	13500	6404	13119
200103	13600	6404	13119
200103	13700	6404	13119
200103	13800	6404	13119
200103	13900	6404	13119
200103	14000	6404	13119
200103	14100	6404	13119
200103	14200	6404	13119
200103	14300	6404	13119
200103	14400	6404	13119
200103	14500	6404	13119
200103	14600	6404	13119
200103	14700	6404	13119
200103	14800	6404	13119
200103	14900	6404	13119
200103	15000	6404	13119
200103	15100	6404	13119
200103	15200	6404	13119
200103	15300	6404	13119
200103	15400	6404	13119
200103	15500	6404	13119
200103	15600	6404	13119
200103	15700	6404	13119
200103	15800	6404	13119
200103	15900	6404	13119
200103	16000	6404	13119
200103	16100	6404	13119
200103	16200	6404	13119
200103	16300	6404	13119
200103	16400	6404	13119
200103	16500	6404	13119
200103	16600	6404	13119
200103	16700	6404	13119
200103	16800	6404	13119
200103	16900	6404	13119
200103	17000	6404	13119
200103	17100	6404	13119
200103	17200	6404	13119
200103	17300	6404	13119
200103	17400	6404	13119
200103	17500	6404	13119
200103	17600	6404	13119
200103	17700	6404	13119
It took 9 secs to cluster 20150 sequences.
200103	17800	6404	13119
200103	17900	6404	13119
200103	18000	6404	13119
200103	18100	6404	13119
200103	18200	6404	13119
200103	18300	6404	13119
200103	18400	6404	13119
200103	18500	6404	13119
200103	18600	6404	13119
200103	18700	6404	13119
200103	18800	6404	13119
200103	18900	6404	13119
200103	19000	6404	13119
200103	19100	6404	13119
200103	19200	6404	13119
200103	19300	6404	13119
200103	19400	6404	13119
200103	19500	6404	13119
200103	19523	6404	13119
191115	2300	7182	12560
Total number of sequences before pre.cluster was 19523.
pre.cluster removed 13119 sequences.

It took 9 secs to cluster 19523 sequences.

Processing group 200110:
191115	2400	7161	12581
191111	100	14035	7343
191115	2500	7117	12625
190703	800	6534	12407
191220	200	5762	6688
191115	2600	7098	12644
191115	2700	7078	12664
191220	300	5297	7153
200124	100	11492	8311
190802	400	22551	9636
190703	900	6308	12633
191115	2800	7043	12699
191220	400	5029	7421
191115	2900	7001	12741
200110	0	17452	870
191115	3000	6973	12769
190703	1000	6153	12788
191220	500	4777	7673
191115	3100	6955	12787
191220	600	4634	7816
191111	200	12405	8973
191115	3200	6925	12817
200124	200	10060	9743
191220	700	4511	7939
190703	1100	5995	12946
191115	3300	6906	12836
191220	800	4386	8064
191115	3400	6892	12850
191220	900	4318	8132
191115	3500	6885	12857
190703	1200	5858	13083
191220	1000	4261	8189
191115	3600	6873	12869
191220	1100	4202	8248
190913	300	25817	14680
200124	300	9192	10611
200110	100	10702	7620
190703	1300	5725	13216
191115	3700	6845	12897
191220	1200	4077	8373
191220	1300	4023	8427
191115	3800	6827	12915
191111	300	11523	9855
191220	1400	4003	8447
190703	1400	5632	13309
200124	400	8838	10965
191220	1500	3945	8505
191115	3900	6809	12933
191220	1600	3893	8557
190802	500	22044	10143
191220	1700	3868	8582
191115	4000	6792	12950
191115	4100	6792	12950
191115	4200	6792	12950
191115	4300	6792	12950
191115	4400	6792	12950
191115	4500	6792	12950
191115	4600	6792	12950
191115	4700	6792	12950
191115	4800	6792	12950
191220	1800	3842	8608
191115	4900	6792	12950
191115	5000	6792	12950
191115	5100	6792	12950
191115	5200	6792	12950
191115	5300	6792	12950
191115	5400	6792	12950
191115	5500	6792	12950
191115	5600	6792	12950
191115	5700	6792	12950
191115	5800	6792	12950
191115	5900	6792	12950
191115	6000	6792	12950
190703	1500	5573	13368
191115	6100	6792	12950
191115	6200	6792	12950
191115	6300	6792	12950
191115	6400	6792	12950
191115	6500	6792	12950
191115	6600	6792	12950
191115	6700	6792	12950
191115	6800	6792	12950
191115	6900	6792	12950
191115	7000	6792	12950
191115	7100	6792	12950
191115	7200	6792	12950
191115	7300	6792	12950
191115	7400	6792	12950
191115	7500	6792	12950
191115	7600	6792	12950
191115	7700	6792	12950
191115	7800	6792	12950
191115	7900	6792	12950
191115	8000	6792	12950
191115	8100	6792	12950
191115	8200	6792	12950
191115	8300	6792	12950
191115	8400	6792	12950
191115	8500	6792	12950
191115	8600	6792	12950
191115	8700	6792	12950
191115	8800	6792	12950
191115	8900	6792	12950
191115	9000	6792	12950
191115	9100	6792	12950
191115	9200	6792	12950
191115	9300	6792	12950
191115	9400	6792	12950
191115	9500	6792	12950
191115	9600	6792	12950
191115	9700	6792	12950
191115	9800	6792	12950
191115	9900	6792	12950
191115	10000	6792	12950
191115	10100	6792	12950
191115	10200	6792	12950
191115	10300	6792	12950
191115	10400	6792	12950
191115	10500	6792	12950
191115	10600	6792	12950
191115	10700	6792	12950
191115	10800	6792	12950
191115	10900	6792	12950
191115	11000	6792	12950
191115	11100	6792	12950
191115	11200	6792	12950
191115	11300	6792	12950
191115	11400	6792	12950
191115	11500	6792	12950
191115	11600	6792	12950
191115	11700	6792	12950
191115	11800	6792	12950
191115	11900	6792	12950
191115	12000	6792	12950
191115	12100	6792	12950
191115	12200	6792	12950
191115	12300	6792	12950
191115	12400	6792	12950
191115	12500	6792	12950
191220	1900	3833	8617
191115	12600	6792	12950
191115	12700	6792	12950
191115	12800	6792	12950
191115	12900	6792	12950
191115	13000	6792	12950
191115	13100	6792	12950
191115	13200	6792	12950
191115	13300	6792	12950
191115	13400	6792	12950
191115	13500	6792	12950
191115	13600	6792	12950
191115	13700	6792	12950
191115	13800	6792	12950
191115	13900	6792	12950
191115	14000	6792	12950
191115	14100	6792	12950
191115	14200	6792	12950
191115	14300	6792	12950
191115	14400	6792	12950
191115	14500	6792	12950
191115	14600	6792	12950
191115	14700	6792	12950
191115	14800	6792	12950
191115	14900	6792	12950
191115	15000	6792	12950
191115	15100	6792	12950
191115	15200	6792	12950
191115	15300	6792	12950
191115	15400	6792	12950
191115	15500	6792	12950
191115	15600	6792	12950
191115	15700	6792	12950
191115	15800	6792	12950
191115	15900	6792	12950
191115	16000	6792	12950
191115	16100	6792	12950
191115	16200	6792	12950
191115	16300	6792	12950
191115	16400	6792	12950
191115	16500	6792	12950
191115	16600	6792	12950
191115	16700	6792	12950
191115	16800	6792	12950
191115	16900	6792	12950
191115	17000	6792	12950
191115	17100	6792	12950
191115	17200	6792	12950
191115	17300	6792	12950
191115	17400	6792	12950
191115	17500	6792	12950
191115	17600	6792	12950
191115	17700	6792	12950
191115	17800	6792	12950
191115	17900	6792	12950
191115	18000	6792	12950
191115	18100	6792	12950
191115	18200	6792	12950
191115	18300	6792	12950
191115	18400	6792	12950
191115	18500	6792	12950
191115	18600	6792	12950
191115	18700	6792	12950
191115	18800	6792	12950
191115	18900	6792	12950
191115	19000	6792	12950
191115	19100	6792	12950
191115	19200	6792	12950
191115	19300	6792	12950
191115	19400	6792	12950
191115	19500	6792	12950
191115	19600	6792	12950
191115	19700	6792	12950
191115	19742	6792	12950
Total number of sequences before pre.cluster was 19742.
pre.cluster removed 12950 sequences.

It took 11 secs to cluster 19742 sequences.

Processing group 191122:
200124	500	8578	11225
191220	2000	3822	8628
191220	2100	3804	8646
190703	1600	5489	13452
191220	2200	3779	8671
200110	200	9456	8866
191220	2300	3761	8689
191220	2400	3747	8703
191220	2500	3747	8703
191220	2600	3747	8703
191220	2700	3747	8703
191220	2800	3747	8703
191220	2900	3747	8703
191220	3000	3747	8703
191220	3100	3747	8703
191220	3200	3747	8703
191220	3300	3747	8703
191220	3400	3747	8703
191220	3500	3747	8703
191220	3600	3747	8703
191220	3700	3747	8703
191220	3800	3747	8703
191220	3900	3747	8703
191220	4000	3747	8703
191220	4100	3747	8703
191220	4200	3747	8703
191220	4300	3747	8703
191220	4400	3747	8703
191220	4500	3747	8703
191220	4600	3747	8703
191220	4700	3747	8703
191220	4800	3747	8703
191220	4900	3747	8703
191220	5000	3747	8703
191220	5100	3747	8703
191220	5200	3747	8703
191220	5300	3747	8703
191220	5400	3747	8703
191220	5500	3747	8703
191220	5600	3747	8703
191220	5700	3747	8703
191220	5800	3747	8703
190703	1700	5441	13500
191220	5900	3747	8703
191220	6000	3747	8703
191220	6100	3747	8703
191220	6200	3747	8703
191220	6300	3747	8703
191220	6400	3747	8703
191220	6500	3747	8703
191220	6600	3747	8703
191220	6700	3747	8703
191220	6800	3747	8703
191220	6900	3747	8703
191220	7000	3747	8703
191220	7100	3747	8703
191220	7200	3747	8703
191220	7300	3747	8703
191220	7400	3747	8703
191220	7500	3747	8703
191220	7600	3747	8703
191220	7700	3747	8703
191220	7800	3747	8703
191220	7900	3747	8703
191220	8000	3747	8703
191220	8100	3747	8703
191220	8200	3747	8703
191220	8300	3747	8703
191220	8400	3747	8703
191220	8500	3747	8703
191220	8600	3747	8703
191220	8700	3747	8703
191220	8800	3747	8703
191220	8900	3747	8703
191220	9000	3747	8703
191220	9100	3747	8703
191220	9200	3747	8703
191220	9300	3747	8703
191220	9400	3747	8703
191220	9500	3747	8703
191220	9600	3747	8703
191220	9700	3747	8703
191220	9800	3747	8703
191220	9900	3747	8703
191220	10000	3747	8703
191220	10100	3747	8703
191220	10200	3747	8703
191220	10300	3747	8703
191220	10400	3747	8703
191220	10500	3747	8703
191220	10600	3747	8703
191220	10700	3747	8703
191220	10800	3747	8703
191220	10900	3747	8703
191220	11000	3747	8703
191220	11100	3747	8703
191220	11200	3747	8703
191220	11300	3747	8703
191220	11400	3747	8703
191220	11500	3747	8703
191220	11600	3747	8703
191220	11700	3747	8703
191220	11800	3747	8703
191220	11900	3747	8703
191220	12000	3747	8703
191220	12100	3747	8703
191220	12200	3747	8703
191220	12300	3747	8703
191220	12400	3747	8703
191220	12450	3747	8703
Total number of sequences before pre.cluster was 12450.
pre.cluster removed 8703 sequences.

It took 4 secs to cluster 12450 sequences.
200124	600	8349	11454
191111	400	10950	10428
190703	1800	5384	13557
200124	700	8181	11622
190703	1900	5340	13601
200110	300	8813	9509
190703	2000	5332	13609
190703	2100	5320	13621
200124	800	8035	11768
200110	400	8567	9755
190703	2200	5307	13634
190703	2300	5265	13676
191111	500	10526	10852
200124	900	7850	11953
191019	100	69314	27073
191122	0	17032	1048
190703	2400	5245	13696
200110	500	8344	9978
190703	2500	5234	13707
200124	1000	7751	12052
190703	2600	5222	13719
190802	600	21725	10462
200110	600	8143	10179
190703	2700	5215	13726
200124	1100	7645	12158
190703	2800	5203	13738
200110	700	8012	10310
191111	600	10145	11233
200124	1200	7582	12221
190703	2900	5181	13760
200124	1300	7510	12293
190913	400	24710	15787
200110	800	7866	10456
190703	3000	5156	13785
190703	3100	5138	13803
200124	1400	7430	12373
200110	900	7774	10548
190703	3200	5125	13816
200124	1500	7339	12464
191111	700	9897	11481
190703	3300	5111	13830
200110	1000	7660	10662
200124	1600	7251	12552
190703	3400	5101	13840
190703	3500	5092	13849
200124	1700	7192	12611
191122	100	10967	7113
200110	1100	7535	10787
190703	3600	5072	13869
200124	1800	7169	12634
190703	3700	5065	13876
191111	800	9708	11670
200124	1900	7136	12667
200110	1200	7440	10882
190703	3800	5044	13897
200124	2000	7080	12723
190703	3900	5025	13916
200110	1300	7347	10975
190703	4000	5024	13917
190703	4100	5024	13917
190703	4200	5024	13917
190703	4300	5024	13917
190703	4400	5024	13917
190703	4500	5024	13917
190703	4600	5024	13917
190703	4700	5024	13917
190703	4800	5024	13917
190703	4900	5024	13917
190703	5000	5024	13917
190703	5100	5024	13917
190703	5200	5024	13917
190802	700	21417	10770
190703	5300	5024	13917
190703	5400	5024	13917
190703	5500	5024	13917
190703	5600	5024	13917
190703	5700	5024	13917
190703	5800	5024	13917
190703	5900	5024	13917
190703	6000	5024	13917
190703	6100	5024	13917
190703	6200	5024	13917
190703	6300	5024	13917
190703	6400	5024	13917
190703	6500	5024	13917
190703	6600	5024	13917
190703	6700	5024	13917
190703	6800	5024	13917
190703	6900	5024	13917
190703	7000	5024	13917
190703	7100	5024	13917
190703	7200	5024	13917
190703	7300	5024	13917
190703	7400	5024	13917
190703	7500	5024	13917
190703	7600	5024	13917
190703	7700	5024	13917
190703	7800	5024	13917
190703	7900	5024	13917
190703	8000	5024	13917
190703	8100	5024	13917
190703	8200	5024	13917
190703	8300	5024	13917
190703	8400	5024	13917
190703	8500	5024	13917
190703	8600	5024	13917
190703	8700	5024	13917
200124	2100	7056	12747
190703	8800	5024	13917
190703	8900	5024	13917
190703	9000	5024	13917
190703	9100	5024	13917
190703	9200	5024	13917
190703	9300	5024	13917
190703	9400	5024	13917
190703	9500	5024	13917
190703	9600	5024	13917
190703	9700	5024	13917
190703	9800	5024	13917
190703	9900	5024	13917
190703	10000	5024	13917
190703	10100	5024	13917
190703	10200	5024	13917
190703	10300	5024	13917
190703	10400	5024	13917
190703	10500	5024	13917
190703	10600	5024	13917
190703	10700	5024	13917
190703	10800	5024	13917
190703	10900	5024	13917
190703	11000	5024	13917
190703	11100	5024	13917
190703	11200	5024	13917
190703	11300	5024	13917
190703	11400	5024	13917
190703	11500	5024	13917
190703	11600	5024	13917
190703	11700	5024	13917
190703	11800	5024	13917
190703	11900	5024	13917
190703	12000	5024	13917
190703	12100	5024	13917
190703	12200	5024	13917
190703	12300	5024	13917
190703	12400	5024	13917
190703	12500	5024	13917
190703	12600	5024	13917
190703	12700	5024	13917
190703	12800	5024	13917
190703	12900	5024	13917
190703	13000	5024	13917
190703	13100	5024	13917
190703	13200	5024	13917
190703	13300	5024	13917
190703	13400	5024	13917
190703	13500	5024	13917
190703	13600	5024	13917
190703	13700	5024	13917
190703	13800	5024	13917
190703	13900	5024	13917
190703	14000	5024	13917
190703	14100	5024	13917
190703	14200	5024	13917
190703	14300	5024	13917
190703	14400	5024	13917
190703	14500	5024	13917
190703	14600	5024	13917
190703	14700	5024	13917
190703	14800	5024	13917
190703	14900	5024	13917
190703	15000	5024	13917
190703	15100	5024	13917
190703	15200	5024	13917
190703	15300	5024	13917
190703	15400	5024	13917
190703	15500	5024	13917
190703	15600	5024	13917
190703	15700	5024	13917
190703	15800	5024	13917
190703	15900	5024	13917
190703	16000	5024	13917
190703	16100	5024	13917
190703	16200	5024	13917
190703	16300	5024	13917
190703	16400	5024	13917
190703	16500	5024	13917
190703	16600	5024	13917
190703	16700	5024	13917
190703	16800	5024	13917
190703	16900	5024	13917
190703	17000	5024	13917
190703	17100	5024	13917
190703	17200	5024	13917
190703	17300	5024	13917
190703	17400	5024	13917
190703	17500	5024	13917
190703	17600	5024	13917
190703	17700	5024	13917
190703	17800	5024	13917
190703	17900	5024	13917
190703	18000	5024	13917
190703	18100	5024	13917
190703	18200	5024	13917
190703	18300	5024	13917
190703	18400	5024	13917
190703	18500	5024	13917
190703	18600	5024	13917
190703	18700	5024	13917
190703	18800	5024	13917
190703	18900	5024	13917
190703	18941	5024	13917
191111	900	9596	11782
Total number of sequences before pre.cluster was 18941.
pre.cluster removed 13917 sequences.

200124	2200	7021	12782
200110	1400	7276	11046
It took 13 secs to cluster 18941 sequences.
200124	2300	6999	12804
191122	200	9694	8386
200110	1500	7189	11133
200124	2400	6946	12857
191111	1000	9481	11897
200110	1600	7108	11214
200124	2500	6919	12884
200110	1700	7069	11253
191122	300	9233	8847
200124	2600	6888	12915
200110	1800	7015	11307
200124	2700	6871	12932
191111	1100	9380	11998
200110	1900	6984	11338
200124	2800	6836	12967
191122	400	8847	9233
200110	2000	6927	11395
200124	2900	6811	12992
191111	1200	9290	12088
200124	3000	6800	13003
200110	2100	6909	11413
191122	500	8575	9505
200124	3100	6781	13022
200110	2200	6892	11430
200124	3200	6765	13038
190913	500	24022	16475
191111	1300	9195	12183
200124	3300	6729	13074
200110	2300	6861	11461
200124	3400	6706	13097
200110	2400	6824	11498
191122	600	8171	9909
200124	3500	6681	13122
190802	800	21158	11029
200110	2500	6787	11535
191111	1400	9104	12274
200124	3600	6660	13143
200110	2600	6766	11556
191122	700	8008	10072
200124	3700	6651	13152
200110	2700	6756	11566
200124	3800	6638	13165
200110	2800	6729	11593
191111	1500	9023	12355
191122	800	7855	10225
200124	3900	6633	13170
200110	2900	6711	11611
200124	4000	6613	13190
200110	3000	6695	11627
200124	4100	6590	13213
191111	1600	8974	12404
191122	900	7703	10377
200124	4200	6571	13232
200124	4300	6571	13232
200124	4400	6571	13232
200124	4500	6571	13232
200124	4600	6571	13232
200124	4700	6571	13232
200124	4800	6571	13232
200124	4900	6571	13232
200124	5000	6571	13232
200124	5100	6571	13232
200124	5200	6571	13232
200124	5300	6571	13232
200124	5400	6571	13232
200124	5500	6571	13232
200124	5600	6571	13232
200124	5700	6571	13232
200124	5800	6571	13232
200124	5900	6571	13232
200124	6000	6571	13232
200124	6100	6571	13232
200124	6200	6571	13232
200124	6300	6571	13232
200124	6400	6571	13232
200124	6500	6571	13232
200124	6600	6571	13232
200124	6700	6571	13232
200124	6800	6571	13232
200124	6900	6571	13232
200124	7000	6571	13232
200124	7100	6571	13232
200124	7200	6571	13232
200124	7300	6571	13232
200124	7400	6571	13232
200124	7500	6571	13232
200124	7600	6571	13232
200124	7700	6571	13232
200110	3100	6661	11661
200124	7800	6571	13232
200124	7900	6571	13232
200124	8000	6571	13232
200124	8100	6571	13232
200124	8200	6571	13232
200124	8300	6571	13232
200124	8400	6571	13232
200124	8500	6571	13232
200124	8600	6571	13232
200124	8700	6571	13232
200124	8800	6571	13232
200124	8900	6571	13232
200124	9000	6571	13232
200124	9100	6571	13232
200124	9200	6571	13232
200124	9300	6571	13232
200124	9400	6571	13232
200124	9500	6571	13232
200124	9600	6571	13232
200124	9700	6571	13232
200124	9800	6571	13232
200124	9900	6571	13232
200124	10000	6571	13232
200124	10100	6571	13232
200124	10200	6571	13232
200124	10300	6571	13232
200124	10400	6571	13232
200124	10500	6571	13232
200124	10600	6571	13232
200124	10700	6571	13232
200124	10800	6571	13232
200124	10900	6571	13232
200124	11000	6571	13232
200124	11100	6571	13232
200124	11200	6571	13232
200124	11300	6571	13232
200124	11400	6571	13232
200124	11500	6571	13232
200124	11600	6571	13232
200124	11700	6571	13232
200124	11800	6571	13232
200124	11900	6571	13232
200124	12000	6571	13232
200124	12100	6571	13232
200124	12200	6571	13232
200124	12300	6571	13232
200124	12400	6571	13232
200124	12500	6571	13232
200124	12600	6571	13232
200124	12700	6571	13232
200124	12800	6571	13232
200124	12900	6571	13232
200124	13000	6571	13232
200124	13100	6571	13232
200124	13200	6571	13232
200124	13300	6571	13232
200124	13400	6571	13232
200124	13500	6571	13232
200124	13600	6571	13232
200124	13700	6571	13232
200124	13800	6571	13232
200124	13900	6571	13232
200124	14000	6571	13232
200124	14100	6571	13232
200124	14200	6571	13232
200124	14300	6571	13232
200124	14400	6571	13232
200124	14500	6571	13232
200124	14600	6571	13232
200124	14700	6571	13232
200124	14800	6571	13232
200124	14900	6571	13232
200124	15000	6571	13232
200124	15100	6571	13232
200124	15200	6571	13232
200124	15300	6571	13232
200124	15400	6571	13232
200124	15500	6571	13232
200124	15600	6571	13232
200124	15700	6571	13232
200124	15800	6571	13232
200124	15900	6571	13232
200124	16000	6571	13232
200124	16100	6571	13232
200124	16200	6571	13232
200124	16300	6571	13232
200124	16400	6571	13232
200124	16500	6571	13232
200124	16600	6571	13232
200124	16700	6571	13232
200124	16800	6571	13232
200124	16900	6571	13232
200124	17000	6571	13232
200124	17100	6571	13232
200124	17200	6571	13232
200124	17300	6571	13232
200124	17400	6571	13232
200124	17500	6571	13232
200124	17600	6571	13232
200124	17700	6571	13232
200124	17800	6571	13232
200124	17900	6571	13232
200124	18000	6571	13232
200124	18100	6571	13232
200124	18200	6571	13232
200124	18300	6571	13232
200124	18400	6571	13232
200124	18500	6571	13232
200124	18600	6571	13232
200124	18700	6571	13232
200124	18800	6571	13232
200124	18900	6571	13232
200124	19000	6571	13232
200124	19100	6571	13232
200124	19200	6571	13232
200124	19300	6571	13232
200124	19400	6571	13232
200124	19500	6571	13232
200124	19600	6571	13232
200124	19700	6571	13232
200124	19800	6571	13232
200124	19803	6571	13232
191111	1700	8913	12465
Total number of sequences before pre.cluster was 19803.
pre.cluster removed 13232 sequences.

200110	3200	6644	11678
191122	1000	7538	10542
It took 8 secs to cluster 19803 sequences.
200110	3300	6627	11695
191122	1100	7473	10607
191111	1800	8829	12549
200110	3400	6613	11709
200110	3500	6590	11732
191122	1200	7384	10696
200110	3600	6570	11752
191111	1900	8731	12647
200110	3700	6552	11770
190802	900	20949	11238
200110	3800	6536	11786
200110	3900	6536	11786
191122	1300	7318	10762
200110	4000	6536	11786
200110	4100	6536	11786
200110	4200	6536	11786
200110	4300	6536	11786
200110	4400	6536	11786
200110	4500	6536	11786
200110	4600	6536	11786
200110	4700	6536	11786
200110	4800	6536	11786
200110	4900	6536	11786
200110	5000	6536	11786
200110	5100	6536	11786
200110	5200	6536	11786
200110	5300	6536	11786
200110	5400	6536	11786
200110	5500	6536	11786
200110	5600	6536	11786
200110	5700	6536	11786
200110	5800	6536	11786
200110	5900	6536	11786
200110	6000	6536	11786
200110	6100	6536	11786
200110	6200	6536	11786
200110	6300	6536	11786
200110	6400	6536	11786
200110	6500	6536	11786
200110	6600	6536	11786
200110	6700	6536	11786
190913	600	23431	17066
200110	6800	6536	11786
200110	6900	6536	11786
200110	7000	6536	11786
200110	7100	6536	11786
200110	7200	6536	11786
200110	7300	6536	11786
200110	7400	6536	11786
200110	7500	6536	11786
200110	7600	6536	11786
200110	7700	6536	11786
200110	7800	6536	11786
200110	7900	6536	11786
200110	8000	6536	11786
200110	8100	6536	11786
200110	8200	6536	11786
200110	8300	6536	11786
200110	8400	6536	11786
200110	8500	6536	11786
200110	8600	6536	11786
200110	8700	6536	11786
200110	8800	6536	11786
200110	8900	6536	11786
200110	9000	6536	11786
200110	9100	6536	11786
200110	9200	6536	11786
200110	9300	6536	11786
200110	9400	6536	11786
200110	9500	6536	11786
200110	9600	6536	11786
200110	9700	6536	11786
200110	9800	6536	11786
200110	9900	6536	11786
200110	10000	6536	11786
200110	10100	6536	11786
200110	10200	6536	11786
200110	10300	6536	11786
200110	10400	6536	11786
200110	10500	6536	11786
200110	10600	6536	11786
200110	10700	6536	11786
200110	10800	6536	11786
200110	10900	6536	11786
200110	11000	6536	11786
200110	11100	6536	11786
200110	11200	6536	11786
200110	11300	6536	11786
200110	11400	6536	11786
200110	11500	6536	11786
200110	11600	6536	11786
200110	11700	6536	11786
200110	11800	6536	11786
200110	11900	6536	11786
200110	12000	6536	11786
200110	12100	6536	11786
200110	12200	6536	11786
200110	12300	6536	11786
200110	12400	6536	11786
200110	12500	6536	11786
200110	12600	6536	11786
200110	12700	6536	11786
200110	12800	6536	11786
200110	12900	6536	11786
200110	13000	6536	11786
200110	13100	6536	11786
200110	13200	6536	11786
200110	13300	6536	11786
200110	13400	6536	11786
200110	13500	6536	11786
200110	13600	6536	11786
200110	13700	6536	11786
200110	13800	6536	11786
200110	13900	6536	11786
200110	14000	6536	11786
200110	14100	6536	11786
200110	14200	6536	11786
200110	14300	6536	11786
200110	14400	6536	11786
200110	14500	6536	11786
200110	14600	6536	11786
200110	14700	6536	11786
200110	14800	6536	11786
200110	14900	6536	11786
200110	15000	6536	11786
200110	15100	6536	11786
200110	15200	6536	11786
200110	15300	6536	11786
200110	15400	6536	11786
200110	15500	6536	11786
200110	15600	6536	11786
200110	15700	6536	11786
200110	15800	6536	11786
200110	15900	6536	11786
200110	16000	6536	11786
200110	16100	6536	11786
200110	16200	6536	11786
200110	16300	6536	11786
200110	16400	6536	11786
200110	16500	6536	11786
200110	16600	6536	11786
200110	16700	6536	11786
200110	16800	6536	11786
200110	16900	6536	11786
200110	17000	6536	11786
200110	17100	6536	11786
200110	17200	6536	11786
200110	17300	6536	11786
200110	17400	6536	11786
200110	17500	6536	11786
200110	17600	6536	11786
200110	17700	6536	11786
200110	17800	6536	11786
200110	17900	6536	11786
200110	18000	6536	11786
200110	18100	6536	11786
200110	18200	6536	11786
200110	18300	6536	11786
200110	18322	6536	11786
191111	2000	8691	12687
Total number of sequences before pre.cluster was 18322.
pre.cluster removed 11786 sequences.

191122	1400	7218	10862
It took 6 secs to cluster 18322 sequences.
191111	2100	8661	12717
191122	1500	7148	10932
191122	1600	7092	10988
191111	2200	8611	12767
191122	1700	7013	11067
191111	2300	8581	12797
191122	1800	6984	11096
191122	1900	6958	11122
191111	2400	8564	12814
191122	2000	6925	11155
191111	2500	8538	12840
191122	2100	6902	11178
191111	2600	8522	12856
191122	2200	6874	11206
191122	2300	6852	11228
191111	2700	8500	12878
191122	2400	6834	11246
190913	700	22929	17568
190802	1000	20725	11462
191111	2800	8471	12907
191122	2500	6813	11267
191122	2600	6786	11294
191111	2900	8450	12928
191122	2700	6760	11320
191111	3000	8397	12981
191122	2800	6737	11343
191122	2900	6722	11358
191111	3100	8374	13004
191122	3000	6670	11410
191111	3200	8360	13018
191122	3100	6636	11444
191019	200	61561	34826
191122	3200	6620	11460
191111	3300	8319	13059
190913	800	22609	17888
191122	3300	6585	11495
191111	3400	8280	13098
191122	3400	6558	11522
191122	3500	6547	11533
191122	3600	6547	11533
191122	3700	6547	11533
191122	3800	6547	11533
191122	3900	6547	11533
191122	4000	6547	11533
191122	4100	6547	11533
191122	4200	6547	11533
191122	4300	6547	11533
191122	4400	6547	11533
191122	4500	6547	11533
191122	4600	6547	11533
191122	4700	6547	11533
191122	4800	6547	11533
191122	4900	6547	11533
191122	5000	6547	11533
190802	1100	20527	11660
191122	5100	6547	11533
191122	5200	6547	11533
191122	5300	6547	11533
191122	5400	6547	11533
191122	5500	6547	11533
191122	5600	6547	11533
191122	5700	6547	11533
191122	5800	6547	11533
191122	5900	6547	11533
191122	6000	6547	11533
191122	6100	6547	11533
191122	6200	6547	11533
191122	6300	6547	11533
191122	6400	6547	11533
191122	6500	6547	11533
191122	6600	6547	11533
191122	6700	6547	11533
191122	6800	6547	11533
191122	6900	6547	11533
191122	7000	6547	11533
191122	7100	6547	11533
191122	7200	6547	11533
191122	7300	6547	11533
191122	7400	6547	11533
191122	7500	6547	11533
191122	7600	6547	11533
191122	7700	6547	11533
191122	7800	6547	11533
191122	7900	6547	11533
191122	8000	6547	11533
191122	8100	6547	11533
191122	8200	6547	11533
191122	8300	6547	11533
191122	8400	6547	11533
191122	8500	6547	11533
191122	8600	6547	11533
191122	8700	6547	11533
191122	8800	6547	11533
191122	8900	6547	11533
191122	9000	6547	11533
191122	9100	6547	11533
191122	9200	6547	11533
191122	9300	6547	11533
191122	9400	6547	11533
191122	9500	6547	11533
191122	9600	6547	11533
191122	9700	6547	11533
191122	9800	6547	11533
191122	9900	6547	11533
191122	10000	6547	11533
191122	10100	6547	11533
191122	10200	6547	11533
191122	10300	6547	11533
191122	10400	6547	11533
191122	10500	6547	11533
191122	10600	6547	11533
191122	10700	6547	11533
191122	10800	6547	11533
191122	10900	6547	11533
191122	11000	6547	11533
191122	11100	6547	11533
191122	11200	6547	11533
191122	11300	6547	11533
191111	3500	8265	13113
191122	11400	6547	11533
191122	11500	6547	11533
191122	11600	6547	11533
191122	11700	6547	11533
191122	11800	6547	11533
191122	11900	6547	11533
191122	12000	6547	11533
191122	12100	6547	11533
191122	12200	6547	11533
191122	12300	6547	11533
191122	12400	6547	11533
191122	12500	6547	11533
191122	12600	6547	11533
191122	12700	6547	11533
191122	12800	6547	11533
191122	12900	6547	11533
191122	13000	6547	11533
191122	13100	6547	11533
191122	13200	6547	11533
191122	13300	6547	11533
191122	13400	6547	11533
191122	13500	6547	11533
191122	13600	6547	11533
191122	13700	6547	11533
191122	13800	6547	11533
191122	13900	6547	11533
191122	14000	6547	11533
191122	14100	6547	11533
191122	14200	6547	11533
191122	14300	6547	11533
191122	14400	6547	11533
191122	14500	6547	11533
191122	14600	6547	11533
191122	14700	6547	11533
191122	14800	6547	11533
191122	14900	6547	11533
191122	15000	6547	11533
191122	15100	6547	11533
191122	15200	6547	11533
191122	15300	6547	11533
191122	15400	6547	11533
191122	15500	6547	11533
191122	15600	6547	11533
191122	15700	6547	11533
191122	15800	6547	11533
191122	15900	6547	11533
191122	16000	6547	11533
191122	16100	6547	11533
191122	16200	6547	11533
191122	16300	6547	11533
191122	16400	6547	11533
191122	16500	6547	11533
191122	16600	6547	11533
191122	16700	6547	11533
191122	16800	6547	11533
191122	16900	6547	11533
191122	17000	6547	11533
191122	17100	6547	11533
191122	17200	6547	11533
191122	17300	6547	11533
191122	17400	6547	11533
191122	17500	6547	11533
191122	17600	6547	11533
191122	17700	6547	11533
191122	17800	6547	11533
191122	17900	6547	11533
191122	18000	6547	11533
191122	18080	6547	11533
Total number of sequences before pre.cluster was 18080.
pre.cluster removed 11533 sequences.

It took 5 secs to cluster 18080 sequences.
191111	3600	8241	13137
191111	3700	8211	13167
191111	3800	8194	13184
191111	3900	8184	13194
190913	900	22320	18177
191111	4000	8175	13203
191111	4100	8154	13224
190802	1200	20392	11795
191111	4200	8143	13235
191111	4300	8126	13252
191111	4400	8113	13265
190913	1000	22070	18427
191111	4500	8094	13284
191111	4600	8080	13298
191111	4700	8080	13298
191111	4800	8080	13298
191111	4900	8080	13298
191111	5000	8080	13298
191111	5100	8080	13298
191111	5200	8080	13298
191111	5300	8080	13298
191111	5400	8080	13298
191111	5500	8080	13298
191111	5600	8080	13298
191111	5700	8080	13298
191111	5800	8080	13298
191111	5900	8080	13298
191111	6000	8080	13298
191111	6100	8080	13298
191111	6200	8080	13298
191111	6300	8080	13298
191111	6400	8080	13298
191111	6500	8080	13298
191111	6600	8080	13298
191111	6700	8080	13298
191111	6800	8080	13298
191111	6900	8080	13298
191111	7000	8080	13298
191111	7100	8080	13298
191111	7200	8080	13298
191111	7300	8080	13298
191111	7400	8080	13298
191111	7500	8080	13298
191111	7600	8080	13298
191111	7700	8080	13298
191111	7800	8080	13298
191111	7900	8080	13298
191111	8000	8080	13298
191111	8100	8080	13298
191111	8200	8080	13298
191111	8300	8080	13298
191111	8400	8080	13298
191111	8500	8080	13298
191111	8600	8080	13298
191111	8700	8080	13298
191111	8800	8080	13298
191111	8900	8080	13298
191111	9000	8080	13298
191111	9100	8080	13298
191111	9200	8080	13298
191111	9300	8080	13298
191111	9400	8080	13298
191111	9500	8080	13298
191111	9600	8080	13298
191111	9700	8080	13298
191111	9800	8080	13298
191111	9900	8080	13298
191111	10000	8080	13298
191111	10100	8080	13298
191111	10200	8080	13298
191111	10300	8080	13298
191111	10400	8080	13298
191111	10500	8080	13298
191111	10600	8080	13298
191111	10700	8080	13298
191111	10800	8080	13298
191111	10900	8080	13298
191111	11000	8080	13298
191111	11100	8080	13298
191111	11200	8080	13298
191111	11300	8080	13298
191111	11400	8080	13298
191111	11500	8080	13298
191111	11600	8080	13298
191111	11700	8080	13298
191111	11800	8080	13298
191111	11900	8080	13298
191111	12000	8080	13298
191111	12100	8080	13298
191111	12200	8080	13298
191111	12300	8080	13298
191111	12400	8080	13298
191111	12500	8080	13298
191111	12600	8080	13298
191111	12700	8080	13298
191111	12800	8080	13298
191111	12900	8080	13298
191111	13000	8080	13298
191111	13100	8080	13298
191111	13200	8080	13298
191111	13300	8080	13298
191111	13400	8080	13298
191111	13500	8080	13298
191111	13600	8080	13298
191111	13700	8080	13298
191111	13800	8080	13298
191111	13900	8080	13298
191111	14000	8080	13298
191111	14100	8080	13298
191111	14200	8080	13298
191111	14300	8080	13298
191111	14400	8080	13298
191111	14500	8080	13298
191111	14600	8080	13298
191111	14700	8080	13298
191111	14800	8080	13298
191111	14900	8080	13298
191111	15000	8080	13298
191111	15100	8080	13298
191111	15200	8080	13298
191111	15300	8080	13298
191111	15400	8080	13298
191111	15500	8080	13298
191111	15600	8080	13298
191111	15700	8080	13298
191111	15800	8080	13298
191111	15900	8080	13298
191111	16000	8080	13298
191111	16100	8080	13298
191111	16200	8080	13298
191111	16300	8080	13298
191111	16400	8080	13298
191111	16500	8080	13298
191111	16600	8080	13298
191111	16700	8080	13298
191111	16800	8080	13298
191111	16900	8080	13298
191111	17000	8080	13298
191111	17100	8080	13298
191111	17200	8080	13298
191111	17300	8080	13298
191111	17400	8080	13298
191111	17500	8080	13298
191111	17600	8080	13298
191111	17700	8080	13298
191111	17800	8080	13298
191111	17900	8080	13298
191111	18000	8080	13298
191111	18100	8080	13298
191111	18200	8080	13298
191111	18300	8080	13298
191111	18400	8080	13298
191111	18500	8080	13298
191111	18600	8080	13298
191111	18700	8080	13298
191111	18800	8080	13298
191111	18900	8080	13298
191111	19000	8080	13298
191111	19100	8080	13298
191111	19200	8080	13298
191111	19300	8080	13298
191111	19400	8080	13298
191111	19500	8080	13298
191111	19600	8080	13298
191111	19700	8080	13298
191111	19800	8080	13298
191111	19900	8080	13298
191111	20000	8080	13298
191111	20100	8080	13298
191111	20200	8080	13298
191111	20300	8080	13298
191111	20400	8080	13298
191111	20500	8080	13298
191111	20600	8080	13298
191111	20700	8080	13298
191111	20800	8080	13298
191111	20900	8080	13298
191111	21000	8080	13298
191111	21100	8080	13298
191111	21200	8080	13298
191111	21300	8080	13298
191111	21378	8080	13298
Total number of sequences before pre.cluster was 21378.
pre.cluster removed 13298 sequences.

It took 11 secs to cluster 21378 sequences.
190802	1300	20226	11961
190913	1100	21827	18670
190913	1200	21572	18925
190802	1400	20088	12099
190913	1300	21421	19076
190802	1500	19979	12208
190913	1400	21261	19236
190802	1600	19903	12284
190802	1700	19825	12362
190913	1500	21086	19411
190913	1600	20959	19538
191019	300	56883	39504
190802	1800	19737	12450
190913	1700	20816	19681
190802	1900	19647	12540
190913	1800	20718	19779
190802	2000	19538	12649
190913	1900	20637	19860
190913	2000	20555	19942
190802	2100	19466	12721
190913	2100	20413	20084
190802	2200	19425	12762
190913	2200	20339	20158
190802	2300	19380	12807
190913	2300	20255	20242
190913	2400	20215	20282
190802	2400	19340	12847
190913	2500	20157	20340
190802	2500	19295	12892
190913	2600	20108	20389
191019	400	54338	42049
190913	2700	20058	20439
190802	2600	19234	12953
190913	2800	20009	20488
190802	2700	19189	12998
190913	2900	19944	20553
190913	3000	19878	20619
190802	2800	19155	13032
190913	3100	19811	20686
190802	2900	19108	13079
190913	3200	19779	20718
190913	3300	19757	20740
190802	3000	19072	13115
190913	3400	19733	20764
190802	3100	19039	13148
190913	3500	19696	20801
190913	3600	19662	20835
190802	3200	18985	13202
190913	3700	19559	20938
190913	3800	19542	20955
190802	3300	18955	13232
190913	3900	19500	20997
191019	500	51884	44503
190913	4000	19477	21020
190802	3400	18900	13287
190913	4100	19426	21071
190802	3500	18861	13326
190913	4200	19381	21116
190913	4300	19345	21152
190802	3600	18818	13369
190913	4400	19317	21180
190802	3700	18786	13401
190913	4500	19288	21209
190802	3800	18756	13431
190913	4600	19263	21234
190913	4700	19232	21265
190802	3900	18687	13500
190913	4800	19218	21279
190913	4900	19165	21332
190802	4000	18656	13531
190913	5000	19132	21365
191019	600	50235	46152
190802	4100	18627	13560
190913	5100	19105	21392
190913	5200	19064	21433
190802	4200	18591	13596
190913	5300	19014	21483
190802	4300	18566	13621
190913	5400	18993	21504
190913	5500	18974	21523
190802	4400	18521	13666
190913	5600	18933	21564
190802	4500	18492	13695
190802	4600	18492	13695
190802	4700	18492	13695
190802	4800	18492	13695
190802	4900	18492	13695
190802	5000	18492	13695
190802	5100	18492	13695
190802	5200	18492	13695
190802	5300	18492	13695
190802	5400	18492	13695
190802	5500	18492	13695
190802	5600	18492	13695
190802	5700	18492	13695
190802	5800	18492	13695
190802	5900	18492	13695
190802	6000	18492	13695
190802	6100	18492	13695
190802	6200	18492	13695
190802	6300	18492	13695
190802	6400	18492	13695
190802	6500	18492	13695
190802	6600	18492	13695
190802	6700	18492	13695
190802	6800	18492	13695
190802	6900	18492	13695
190802	7000	18492	13695
190802	7100	18492	13695
190802	7200	18492	13695
190802	7300	18492	13695
190802	7400	18492	13695
190802	7500	18492	13695
190802	7600	18492	13695
190802	7700	18492	13695
190802	7800	18492	13695
190802	7900	18492	13695
190802	8000	18492	13695
190802	8100	18492	13695
190802	8200	18492	13695
190802	8300	18492	13695
190802	8400	18492	13695
190802	8500	18492	13695
190802	8600	18492	13695
190802	8700	18492	13695
190802	8800	18492	13695
190802	8900	18492	13695
190802	9000	18492	13695
190802	9100	18492	13695
190802	9200	18492	13695
190802	9300	18492	13695
190802	9400	18492	13695
190802	9500	18492	13695
190802	9600	18492	13695
190802	9700	18492	13695
190802	9800	18492	13695
190802	9900	18492	13695
190802	10000	18492	13695
190802	10100	18492	13695
190802	10200	18492	13695
190802	10300	18492	13695
190802	10400	18492	13695
190802	10500	18492	13695
190802	10600	18492	13695
190802	10700	18492	13695
190802	10800	18492	13695
190802	10900	18492	13695
190802	11000	18492	13695
190802	11100	18492	13695
190802	11200	18492	13695
190802	11300	18492	13695
190802	11400	18492	13695
190802	11500	18492	13695
190802	11600	18492	13695
190802	11700	18492	13695
190802	11800	18492	13695
190802	11900	18492	13695
190802	12000	18492	13695
190802	12100	18492	13695
190802	12200	18492	13695
190802	12300	18492	13695
190802	12400	18492	13695
190802	12500	18492	13695
190802	12600	18492	13695
190802	12700	18492	13695
190802	12800	18492	13695
190802	12900	18492	13695
190802	13000	18492	13695
190913	5700	18888	21609
190802	13100	18492	13695
190802	13200	18492	13695
190802	13300	18492	13695
190802	13400	18492	13695
190802	13500	18492	13695
190802	13600	18492	13695
190802	13700	18492	13695
190802	13800	18492	13695
190802	13900	18492	13695
190802	14000	18492	13695
190802	14100	18492	13695
190802	14200	18492	13695
190802	14300	18492	13695
190802	14400	18492	13695
190802	14500	18492	13695
190802	14600	18492	13695
190802	14700	18492	13695
190802	14800	18492	13695
190802	14900	18492	13695
190802	15000	18492	13695
190802	15100	18492	13695
190802	15200	18492	13695
190802	15300	18492	13695
190802	15400	18492	13695
190802	15500	18492	13695
190802	15600	18492	13695
190802	15700	18492	13695
190802	15800	18492	13695
190802	15900	18492	13695
190802	16000	18492	13695
190802	16100	18492	13695
190802	16200	18492	13695
190802	16300	18492	13695
190802	16400	18492	13695
190802	16500	18492	13695
190802	16600	18492	13695
190802	16700	18492	13695
190802	16800	18492	13695
190802	16900	18492	13695
190802	17000	18492	13695
190802	17100	18492	13695
190802	17200	18492	13695
190802	17300	18492	13695
190802	17400	18492	13695
190802	17500	18492	13695
190802	17600	18492	13695
190802	17700	18492	13695
190802	17800	18492	13695
190802	17900	18492	13695
190802	18000	18492	13695
190802	18100	18492	13695
190802	18200	18492	13695
190802	18300	18492	13695
190802	18400	18492	13695
190802	18500	18492	13695
190802	18600	18492	13695
190802	18700	18492	13695
190802	18800	18492	13695
190802	18900	18492	13695
190802	19000	18492	13695
190802	19100	18492	13695
190802	19200	18492	13695
190802	19300	18492	13695
190802	19400	18492	13695
190802	19500	18492	13695
190802	19600	18492	13695
190802	19700	18492	13695
190802	19800	18492	13695
190802	19900	18492	13695
190802	20000	18492	13695
190802	20100	18492	13695
190802	20200	18492	13695
190802	20300	18492	13695
190802	20400	18492	13695
190802	20500	18492	13695
190802	20600	18492	13695
190802	20700	18492	13695
190802	20800	18492	13695
190802	20900	18492	13695
190802	21000	18492	13695
190802	21100	18492	13695
190802	21200	18492	13695
190802	21300	18492	13695
190802	21400	18492	13695
190802	21500	18492	13695
190802	21600	18492	13695
190802	21700	18492	13695
190802	21800	18492	13695
190802	21900	18492	13695
190802	22000	18492	13695
190802	22100	18492	13695
190802	22200	18492	13695
190802	22300	18492	13695
190802	22400	18492	13695
190802	22500	18492	13695
190802	22600	18492	13695
190802	22700	18492	13695
190802	22800	18492	13695
190802	22900	18492	13695
190802	23000	18492	13695
190802	23100	18492	13695
190802	23200	18492	13695
190802	23300	18492	13695
190802	23400	18492	13695
190802	23500	18492	13695
190802	23600	18492	13695
190802	23700	18492	13695
190802	23800	18492	13695
190802	23900	18492	13695
190802	24000	18492	13695
190802	24100	18492	13695
190802	24200	18492	13695
190802	24300	18492	13695
190802	24400	18492	13695
190802	24500	18492	13695
190802	24600	18492	13695
190802	24700	18492	13695
190802	24800	18492	13695
190802	24900	18492	13695
190802	25000	18492	13695
190802	25100	18492	13695
190802	25200	18492	13695
190802	25300	18492	13695
190802	25400	18492	13695
190802	25500	18492	13695
190802	25600	18492	13695
190802	25700	18492	13695
190802	25800	18492	13695
190802	25900	18492	13695
190802	26000	18492	13695
190802	26100	18492	13695
190802	26200	18492	13695
190802	26300	18492	13695
190802	26400	18492	13695
190802	26500	18492	13695
190802	26600	18492	13695
190802	26700	18492	13695
190802	26800	18492	13695
190802	26900	18492	13695
190802	27000	18492	13695
190802	27100	18492	13695
190802	27200	18492	13695
190802	27300	18492	13695
190802	27400	18492	13695
190802	27500	18492	13695
190802	27600	18492	13695
190802	27700	18492	13695
190802	27800	18492	13695
190802	27900	18492	13695
190802	28000	18492	13695
190802	28100	18492	13695
190802	28200	18492	13695
190802	28300	18492	13695
190802	28400	18492	13695
190802	28500	18492	13695
190802	28600	18492	13695
190802	28700	18492	13695
190802	28800	18492	13695
190802	28900	18492	13695
190802	29000	18492	13695
190802	29100	18492	13695
190802	29200	18492	13695
190802	29300	18492	13695
190802	29400	18492	13695
190802	29500	18492	13695
190802	29600	18492	13695
190802	29700	18492	13695
190802	29800	18492	13695
190802	29900	18492	13695
190802	30000	18492	13695
190802	30100	18492	13695
190802	30200	18492	13695
190802	30300	18492	13695
190802	30400	18492	13695
190802	30500	18492	13695
190802	30600	18492	13695
190802	30700	18492	13695
190802	30800	18492	13695
190802	30900	18492	13695
190802	31000	18492	13695
190802	31100	18492	13695
190802	31200	18492	13695
190802	31300	18492	13695
190802	31400	18492	13695
190802	31500	18492	13695
190802	31600	18492	13695
190802	31700	18492	13695
190802	31800	18492	13695
190802	31900	18492	13695
190802	32000	18492	13695
190802	32100	18492	13695
190802	32187	18492	13695
Total number of sequences before pre.cluster was 32187.
pre.cluster removed 13695 sequences.

190913	5800	18861	21636
It took 27 secs to cluster 32187 sequences.
190913	5900	18835	21662
190913	6000	18803	21694
191019	700	48966	47421
190913	6100	18772	21725
190913	6200	18723	21774
190913	6300	18694	21803
190913	6400	18655	21842
190913	6500	18622	21875
190913	6600	18611	21886
190913	6700	18590	21907
190913	6800	18567	21930
190913	6900	18539	21958
190913	7000	18539	21958
190913	7100	18539	21958
190913	7200	18539	21958
190913	7300	18539	21958
190913	7400	18539	21958
190913	7500	18539	21958
190913	7600	18539	21958
190913	7700	18539	21958
190913	7800	18539	21958
190913	7900	18539	21958
190913	8000	18539	21958
190913	8100	18539	21958
190913	8200	18539	21958
190913	8300	18539	21958
190913	8400	18539	21958
190913	8500	18539	21958
190913	8600	18539	21958
190913	8700	18539	21958
190913	8800	18539	21958
190913	8900	18539	21958
190913	9000	18539	21958
190913	9100	18539	21958
190913	9200	18539	21958
190913	9300	18539	21958
190913	9400	18539	21958
190913	9500	18539	21958
190913	9600	18539	21958
190913	9700	18539	21958
190913	9800	18539	21958
190913	9900	18539	21958
190913	10000	18539	21958
190913	10100	18539	21958
190913	10200	18539	21958
190913	10300	18539	21958
190913	10400	18539	21958
190913	10500	18539	21958
190913	10600	18539	21958
190913	10700	18539	21958
190913	10800	18539	21958
190913	10900	18539	21958
190913	11000	18539	21958
190913	11100	18539	21958
190913	11200	18539	21958
190913	11300	18539	21958
190913	11400	18539	21958
190913	11500	18539	21958
190913	11600	18539	21958
190913	11700	18539	21958
190913	11800	18539	21958
190913	11900	18539	21958
190913	12000	18539	21958
190913	12100	18539	21958
190913	12200	18539	21958
190913	12300	18539	21958
190913	12400	18539	21958
190913	12500	18539	21958
190913	12600	18539	21958
190913	12700	18539	21958
190913	12800	18539	21958
190913	12900	18539	21958
190913	13000	18539	21958
190913	13100	18539	21958
190913	13200	18539	21958
190913	13300	18539	21958
190913	13400	18539	21958
190913	13500	18539	21958
190913	13600	18539	21958
190913	13700	18539	21958
190913	13800	18539	21958
190913	13900	18539	21958
190913	14000	18539	21958
190913	14100	18539	21958
190913	14200	18539	21958
190913	14300	18539	21958
190913	14400	18539	21958
190913	14500	18539	21958
190913	14600	18539	21958
190913	14700	18539	21958
190913	14800	18539	21958
190913	14900	18539	21958
190913	15000	18539	21958
190913	15100	18539	21958
190913	15200	18539	21958
190913	15300	18539	21958
190913	15400	18539	21958
190913	15500	18539	21958
190913	15600	18539	21958
190913	15700	18539	21958
190913	15800	18539	21958
190913	15900	18539	21958
190913	16000	18539	21958
190913	16100	18539	21958
190913	16200	18539	21958
190913	16300	18539	21958
190913	16400	18539	21958
190913	16500	18539	21958
190913	16600	18539	21958
190913	16700	18539	21958
190913	16800	18539	21958
190913	16900	18539	21958
190913	17000	18539	21958
190913	17100	18539	21958
190913	17200	18539	21958
190913	17300	18539	21958
190913	17400	18539	21958
190913	17500	18539	21958
190913	17600	18539	21958
190913	17700	18539	21958
190913	17800	18539	21958
190913	17900	18539	21958
190913	18000	18539	21958
190913	18100	18539	21958
190913	18200	18539	21958
190913	18300	18539	21958
190913	18400	18539	21958
190913	18500	18539	21958
190913	18600	18539	21958
190913	18700	18539	21958
190913	18800	18539	21958
190913	18900	18539	21958
190913	19000	18539	21958
190913	19100	18539	21958
190913	19200	18539	21958
190913	19300	18539	21958
190913	19400	18539	21958
190913	19500	18539	21958
190913	19600	18539	21958
190913	19700	18539	21958
190913	19800	18539	21958
190913	19900	18539	21958
190913	20000	18539	21958
190913	20100	18539	21958
190913	20200	18539	21958
190913	20300	18539	21958
190913	20400	18539	21958
190913	20500	18539	21958
190913	20600	18539	21958
190913	20700	18539	21958
190913	20800	18539	21958
190913	20900	18539	21958
190913	21000	18539	21958
190913	21100	18539	21958
190913	21200	18539	21958
190913	21300	18539	21958
190913	21400	18539	21958
190913	21500	18539	21958
190913	21600	18539	21958
190913	21700	18539	21958
190913	21800	18539	21958
190913	21900	18539	21958
190913	22000	18539	21958
190913	22100	18539	21958
190913	22200	18539	21958
190913	22300	18539	21958
190913	22400	18539	21958
190913	22500	18539	21958
190913	22600	18539	21958
190913	22700	18539	21958
190913	22800	18539	21958
190913	22900	18539	21958
190913	23000	18539	21958
190913	23100	18539	21958
190913	23200	18539	21958
190913	23300	18539	21958
190913	23400	18539	21958
190913	23500	18539	21958
190913	23600	18539	21958
190913	23700	18539	21958
190913	23800	18539	21958
190913	23900	18539	21958
190913	24000	18539	21958
190913	24100	18539	21958
190913	24200	18539	21958
190913	24300	18539	21958
190913	24400	18539	21958
190913	24500	18539	21958
190913	24600	18539	21958
190913	24700	18539	21958
190913	24800	18539	21958
190913	24900	18539	21958
190913	25000	18539	21958
190913	25100	18539	21958
190913	25200	18539	21958
190913	25300	18539	21958
190913	25400	18539	21958
190913	25500	18539	21958
190913	25600	18539	21958
190913	25700	18539	21958
190913	25800	18539	21958
190913	25900	18539	21958
190913	26000	18539	21958
190913	26100	18539	21958
190913	26200	18539	21958
190913	26300	18539	21958
190913	26400	18539	21958
190913	26500	18539	21958
190913	26600	18539	21958
190913	26700	18539	21958
190913	26800	18539	21958
190913	26900	18539	21958
190913	27000	18539	21958
190913	27100	18539	21958
190913	27200	18539	21958
190913	27300	18539	21958
190913	27400	18539	21958
190913	27500	18539	21958
190913	27600	18539	21958
190913	27700	18539	21958
190913	27800	18539	21958
190913	27900	18539	21958
190913	28000	18539	21958
190913	28100	18539	21958
190913	28200	18539	21958
190913	28300	18539	21958
190913	28400	18539	21958
190913	28500	18539	21958
190913	28600	18539	21958
190913	28700	18539	21958
190913	28800	18539	21958
190913	28900	18539	21958
190913	29000	18539	21958
190913	29100	18539	21958
190913	29200	18539	21958
190913	29300	18539	21958
190913	29400	18539	21958
190913	29500	18539	21958
190913	29600	18539	21958
190913	29700	18539	21958
190913	29800	18539	21958
190913	29900	18539	21958
190913	30000	18539	21958
190913	30100	18539	21958
190913	30200	18539	21958
190913	30300	18539	21958
190913	30400	18539	21958
190913	30500	18539	21958
190913	30600	18539	21958
190913	30700	18539	21958
190913	30800	18539	21958
190913	30900	18539	21958
190913	31000	18539	21958
190913	31100	18539	21958
190913	31200	18539	21958
190913	31300	18539	21958
190913	31400	18539	21958
190913	31500	18539	21958
190913	31600	18539	21958
190913	31700	18539	21958
190913	31800	18539	21958
190913	31900	18539	21958
191019	800	48013	48374
190913	32000	18539	21958
190913	32100	18539	21958
190913	32200	18539	21958
190913	32300	18539	21958
190913	32400	18539	21958
190913	32500	18539	21958
190913	32600	18539	21958
190913	32700	18539	21958
190913	32800	18539	21958
190913	32900	18539	21958
190913	33000	18539	21958
190913	33100	18539	21958
190913	33200	18539	21958
190913	33300	18539	21958
190913	33400	18539	21958
190913	33500	18539	21958
190913	33600	18539	21958
190913	33700	18539	21958
190913	33800	18539	21958
190913	33900	18539	21958
190913	34000	18539	21958
190913	34100	18539	21958
190913	34200	18539	21958
190913	34300	18539	21958
190913	34400	18539	21958
190913	34500	18539	21958
190913	34600	18539	21958
190913	34700	18539	21958
190913	34800	18539	21958
190913	34900	18539	21958
190913	35000	18539	21958
190913	35100	18539	21958
190913	35200	18539	21958
190913	35300	18539	21958
190913	35400	18539	21958
190913	35500	18539	21958
190913	35600	18539	21958
190913	35700	18539	21958
190913	35800	18539	21958
190913	35900	18539	21958
190913	36000	18539	21958
190913	36100	18539	21958
190913	36200	18539	21958
190913	36300	18539	21958
190913	36400	18539	21958
190913	36500	18539	21958
190913	36600	18539	21958
190913	36700	18539	21958
190913	36800	18539	21958
190913	36900	18539	21958
190913	37000	18539	21958
190913	37100	18539	21958
190913	37200	18539	21958
190913	37300	18539	21958
190913	37400	18539	21958
190913	37500	18539	21958
190913	37600	18539	21958
190913	37700	18539	21958
190913	37800	18539	21958
190913	37900	18539	21958
190913	38000	18539	21958
190913	38100	18539	21958
190913	38200	18539	21958
190913	38300	18539	21958
190913	38400	18539	21958
190913	38500	18539	21958
190913	38600	18539	21958
190913	38700	18539	21958
190913	38800	18539	21958
190913	38900	18539	21958
190913	39000	18539	21958
190913	39100	18539	21958
190913	39200	18539	21958
190913	39300	18539	21958
190913	39400	18539	21958
190913	39500	18539	21958
190913	39600	18539	21958
190913	39700	18539	21958
190913	39800	18539	21958
190913	39900	18539	21958
190913	40000	18539	21958
190913	40100	18539	21958
190913	40200	18539	21958
190913	40300	18539	21958
190913	40400	18539	21958
190913	40497	18539	21958
Total number of sequences before pre.cluster was 40497.
pre.cluster removed 21958 sequences.

It took 30 secs to cluster 40497 sequences.

Processing group 191004:
191004	0	30718	720
191019	900	47352	49035
191004	100	19066	12372
191004	200	15805	15633
191019	1000	46696	49691
191004	300	13605	17833
191004	400	12396	19042
191004	500	11575	19863
191004	600	10856	20582
191004	700	10159	21279
191004	800	9618	21820
191019	1100	46144	50243
191004	900	9327	22111
191004	1000	9008	22430
191004	1100	8837	22601
191004	1200	8685	22753
191004	1300	8555	22883
191004	1400	8378	23060
191004	1500	8263	23175
191004	1600	8163	23275
191004	1700	8068	23370
191004	1800	7973	23465
191004	1900	7939	23499
191019	1200	45748	50639
191004	2000	7890	23548
191004	2100	7830	23608
191004	2200	7772	23666
191004	2300	7697	23741
191004	2400	7667	23771
191004	2500	7615	23823
191004	2600	7579	23859
191004	2700	7552	23886
191004	2800	7525	23913
191004	2900	7467	23971
191004	3000	7418	24020
191004	3100	7356	24082
191004	3200	7333	24105
191004	3300	7308	24130
191004	3400	7303	24135
191004	3500	7288	24150
191004	3600	7268	24170
191004	3700	7247	24191
191004	3800	7232	24206
191004	3900	7209	24229
191004	4000	7174	24264
191004	4100	7154	24284
191004	4200	7142	24296
191004	4300	7126	24312
191004	4400	7120	24318
191004	4500	7104	24334
191004	4600	7096	24342
191004	4700	7084	24354
191004	4800	7068	24370
191004	4900	7055	24383
191004	5000	7047	24391
191004	5100	7041	24397
191004	5200	7031	24407
191004	5300	7016	24422
191004	5400	7007	24431
191004	5500	6986	24452
191004	5600	6973	24465
191004	5700	6967	24471
191019	1300	45284	51103
191004	5800	6949	24489
191004	5900	6927	24511
191004	6000	6920	24518
191004	6100	6907	24531
191004	6200	6894	24544
191004	6300	6890	24548
191004	6400	6876	24562
191004	6500	6862	24576
191004	6600	6851	24587
191004	6700	6851	24587
191004	6800	6850	24588
191004	6900	6850	24588
191004	7000	6850	24588
191004	7100	6850	24588
191004	7200	6850	24588
191004	7300	6850	24588
191004	7400	6850	24588
191004	7500	6850	24588
191004	7600	6850	24588
191004	7700	6850	24588
191004	7800	6850	24588
191004	7900	6850	24588
191004	8000	6850	24588
191004	8100	6850	24588
191004	8200	6850	24588
191004	8300	6850	24588
191004	8400	6850	24588
191004	8500	6850	24588
191004	8600	6850	24588
191004	8700	6850	24588
191004	8800	6850	24588
191004	8900	6850	24588
191004	9000	6850	24588
191004	9100	6850	24588
191004	9200	6850	24588
191004	9300	6850	24588
191004	9400	6850	24588
191004	9500	6850	24588
191004	9600	6850	24588
191004	9700	6850	24588
191004	9800	6850	24588
191004	9900	6850	24588
191004	10000	6850	24588
191004	10100	6850	24588
191004	10200	6850	24588
191004	10300	6850	24588
191004	10400	6850	24588
191004	10500	6850	24588
191004	10600	6850	24588
191004	10700	6850	24588
191004	10800	6850	24588
191004	10900	6850	24588
191004	11000	6850	24588
191004	11100	6850	24588
191004	11200	6850	24588
191004	11300	6850	24588
191004	11400	6850	24588
191004	11500	6850	24588
191004	11600	6850	24588
191004	11700	6850	24588
191004	11800	6850	24588
191004	11900	6850	24588
191004	12000	6850	24588
191004	12100	6850	24588
191004	12200	6850	24588
191004	12300	6850	24588
191004	12400	6850	24588
191004	12500	6850	24588
191004	12600	6850	24588
191004	12700	6850	24588
191004	12800	6850	24588
191004	12900	6850	24588
191004	13000	6850	24588
191004	13100	6850	24588
191004	13200	6850	24588
191004	13300	6850	24588
191004	13400	6850	24588
191004	13500	6850	24588
191004	13600	6850	24588
191004	13700	6850	24588
191004	13800	6850	24588
191004	13900	6850	24588
191004	14000	6850	24588
191004	14100	6850	24588
191004	14200	6850	24588
191004	14300	6850	24588
191004	14400	6850	24588
191004	14500	6850	24588
191004	14600	6850	24588
191004	14700	6850	24588
191004	14800	6850	24588
191004	14900	6850	24588
191004	15000	6850	24588
191004	15100	6850	24588
191004	15200	6850	24588
191004	15300	6850	24588
191004	15400	6850	24588
191004	15500	6850	24588
191004	15600	6850	24588
191004	15700	6850	24588
191004	15800	6850	24588
191004	15900	6850	24588
191004	16000	6850	24588
191004	16100	6850	24588
191004	16200	6850	24588
191004	16300	6850	24588
191004	16400	6850	24588
191004	16500	6850	24588
191004	16600	6850	24588
191004	16700	6850	24588
191004	16800	6850	24588
191004	16900	6850	24588
191004	17000	6850	24588
191004	17100	6850	24588
191004	17200	6850	24588
191004	17300	6850	24588
191004	17400	6850	24588
191004	17500	6850	24588
191004	17600	6850	24588
191004	17700	6850	24588
191004	17800	6850	24588
191004	17900	6850	24588
191004	18000	6850	24588
191004	18100	6850	24588
191004	18200	6850	24588
191004	18300	6850	24588
191004	18400	6850	24588
191004	18500	6850	24588
191004	18600	6850	24588
191004	18700	6850	24588
191004	18800	6850	24588
191004	18900	6850	24588
191004	19000	6850	24588
191004	19100	6850	24588
191004	19200	6850	24588
191004	19300	6850	24588
191004	19400	6850	24588
191004	19500	6850	24588
191004	19600	6850	24588
191004	19700	6850	24588
191004	19800	6850	24588
191004	19900	6850	24588
191004	20000	6850	24588
191004	20100	6850	24588
191004	20200	6850	24588
191004	20300	6850	24588
191004	20400	6850	24588
191004	20500	6850	24588
191004	20600	6850	24588
191004	20700	6850	24588
191004	20800	6850	24588
191004	20900	6850	24588
191004	21000	6850	24588
191004	21100	6850	24588
191004	21200	6850	24588
191004	21300	6850	24588
191004	21400	6850	24588
191004	21500	6850	24588
191004	21600	6850	24588
191004	21700	6850	24588
191004	21800	6850	24588
191004	21900	6850	24588
191004	22000	6850	24588
191004	22100	6850	24588
191004	22200	6850	24588
191004	22300	6850	24588
191004	22400	6850	24588
191004	22500	6850	24588
191004	22600	6850	24588
191004	22700	6850	24588
191004	22800	6850	24588
191004	22900	6850	24588
191004	23000	6850	24588
191004	23100	6850	24588
191004	23200	6850	24588
191004	23300	6850	24588
191004	23400	6850	24588
191004	23500	6850	24588
191004	23600	6850	24588
191004	23700	6850	24588
191004	23800	6850	24588
191004	23900	6850	24588
191004	24000	6850	24588
191004	24100	6850	24588
191004	24200	6850	24588
191004	24300	6850	24588
191004	24400	6850	24588
191004	24500	6850	24588
191004	24600	6850	24588
191004	24700	6850	24588
191004	24800	6850	24588
191004	24900	6850	24588
191004	25000	6850	24588
191004	25100	6850	24588
191004	25200	6850	24588
191004	25300	6850	24588
191004	25400	6850	24588
191004	25500	6850	24588
191004	25600	6850	24588
191004	25700	6850	24588
191004	25800	6850	24588
191004	25900	6850	24588
191004	26000	6850	24588
191004	26100	6850	24588
191004	26200	6850	24588
191004	26300	6850	24588
191004	26400	6850	24588
191004	26500	6850	24588
191004	26600	6850	24588
191004	26700	6850	24588
191004	26800	6850	24588
191004	26900	6850	24588
191004	27000	6850	24588
191004	27100	6850	24588
191004	27200	6850	24588
191004	27300	6850	24588
191004	27400	6850	24588
191004	27500	6850	24588
191004	27600	6850	24588
191004	27700	6850	24588
191004	27800	6850	24588
191004	27900	6850	24588
191004	28000	6850	24588
191004	28100	6850	24588
191004	28200	6850	24588
191004	28300	6850	24588
191004	28400	6850	24588
191004	28500	6850	24588
191004	28600	6850	24588
191004	28700	6850	24588
191004	28800	6850	24588
191004	28900	6850	24588
191004	29000	6850	24588
191004	29100	6850	24588
191004	29200	6850	24588
191004	29300	6850	24588
191004	29400	6850	24588
191004	29500	6850	24588
191004	29600	6850	24588
191004	29700	6850	24588
191004	29800	6850	24588
191004	29900	6850	24588
191004	30000	6850	24588
191004	30100	6850	24588
191004	30200	6850	24588
191004	30300	6850	24588
191004	30400	6850	24588
191004	30500	6850	24588
191004	30600	6850	24588
191004	30700	6850	24588
191004	30800	6850	24588
191004	30900	6850	24588
191004	31000	6850	24588
191004	31100	6850	24588
191004	31200	6850	24588
191004	31300	6850	24588
191004	31400	6850	24588
191004	31438	6850	24588
Total number of sequences before pre.cluster was 31438.
pre.cluster removed 24588 sequences.

It took 7 secs to cluster 31438 sequences.
191019	1400	44935	51452
191019	1500	44616	51771
191019	1600	44314	52073
191019	1700	44001	52386
191019	1800	43789	52598
191019	1900	43544	52843
191019	2000	43100	53287
191019	2100	42866	53521
191019	2200	42724	53663
191019	2300	42536	53851
191019	2400	42434	53953
191019	2500	42276	54111
191019	2600	42138	54249
191019	2700	42028	54359
191019	2800	41893	54494
191019	2900	41780	54607
191019	3000	41622	54765
191019	3100	41525	54862
191019	3200	41423	54964
191019	3300	41271	55116
191019	3400	41181	55206
191019	3500	41083	55304
191019	3600	40974	55413
191019	3700	40868	55519
191019	3800	40768	55619
191019	3900	40713	55674
191019	4000	40590	55797
191019	4100	40508	55879
191019	4200	40392	55995
191019	4300	40344	56043
191019	4400	40268	56119
191019	4500	40144	56243
191019	4600	40082	56305
191019	4700	40005	56382
191019	4800	39845	56542
191019	4900	39693	56694
191019	5000	39571	56816
191019	5100	39462	56925
191019	5200	39369	57018
191019	5300	39319	57068
191019	5400	39245	57142
191019	5500	39228	57159
191019	5600	39174	57213
191019	5700	39049	57338
191019	5800	39005	57382
191019	5900	38906	57481
191019	6000	38856	57531
191019	6100	38787	57600
191019	6200	38729	57658
191019	6300	38677	57710
191019	6400	38593	57794
191019	6500	38497	57890
191019	6600	38440	57947
191019	6700	38397	57990
191019	6800	38319	58068
191019	6900	38228	58159
191019	7000	38197	58190
191019	7100	38162	58225
191019	7200	38120	58267
191019	7300	38075	58312
191019	7400	38031	58356
191019	7500	38009	58378
191019	7600	37969	58418
191019	7700	37903	58484
191019	7800	37866	58521
191019	7900	37847	58540
191019	8000	37821	58566
191019	8100	37795	58592
191019	8200	37783	58604
191019	8300	37727	58660
191019	8400	37707	58680
191019	8500	37682	58705
191019	8600	37641	58746
191019	8700	37598	58789
191019	8800	37573	58814
191019	8900	37539	58848
191019	9000	37522	58865
191019	9100	37504	58883
191019	9200	37455	58932
191019	9300	37413	58974
191019	9400	37376	59011
191019	9500	37360	59027
191019	9600	37312	59075
191019	9700	37296	59091
191019	9800	37270	59117
191019	9900	37241	59146
191019	10000	37231	59156
191019	10100	37199	59188
191019	10200	37147	59240
191019	10300	37113	59274
191019	10400	37078	59309
191019	10500	37064	59323
191019	10600	37052	59335
191019	10700	37015	59372
191019	10800	36992	59395
191019	10900	36948	59439
191019	11000	36914	59473
191019	11100	36860	59527
191019	11200	36845	59542
191019	11300	36823	59564
191019	11400	36807	59580
191019	11500	36782	59605
191019	11600	36757	59630
191019	11700	36723	59664
191019	11800	36700	59687
191019	11900	36680	59707
191019	12000	36663	59724
191019	12100	36651	59736
191019	12200	36631	59756
191019	12300	36594	59793
191019	12400	36560	59827
191019	12500	36540	59847
191019	12600	36521	59866
191019	12700	36459	59928
191019	12800	36418	59969
191019	12900	36372	60015
191019	13000	36351	60036
191019	13100	36331	60056
191019	13200	36315	60072
191019	13300	36274	60113
191019	13400	36210	60177
191019	13500	36197	60190
191019	13600	36176	60211
191019	13700	36138	60249
191019	13800	36101	60286
191019	13900	36082	60305
191019	14000	36049	60338
191019	14100	36026	60361
191019	14200	35994	60393
191019	14300	35985	60402
191019	14400	35973	60414
191019	14500	35952	60435
191019	14600	35917	60470
191019	14700	35897	60490
191019	14800	35870	60517
191019	14900	35856	60531
191019	15000	35825	60562
191019	15100	35791	60596
191019	15200	35740	60647
191019	15300	35701	60686
191019	15400	35679	60708
191019	15500	35650	60737
191019	15600	35646	60741
191019	15700	35641	60746
191019	15800	35606	60781
191019	15900	35560	60827
191019	16000	35548	60839
191019	16100	35522	60865
191019	16200	35492	60895
191019	16300	35478	60909
191019	16400	35457	60930
191019	16500	35439	60948
191019	16600	35428	60959
191019	16700	35421	60966
191019	16800	35421	60966
191019	16900	35421	60966
191019	17000	35421	60966
191019	17100	35421	60966
191019	17200	35421	60966
191019	17300	35421	60966
191019	17400	35421	60966
191019	17500	35421	60966
191019	17600	35421	60966
191019	17700	35421	60966
191019	17800	35421	60966
191019	17900	35421	60966
191019	18000	35421	60966
191019	18100	35421	60966
191019	18200	35421	60966
191019	18300	35421	60966
191019	18400	35421	60966
191019	18500	35421	60966
191019	18600	35421	60966
191019	18700	35421	60966
191019	18800	35421	60966
191019	18900	35421	60966
191019	19000	35421	60966
191019	19100	35421	60966
191019	19200	35421	60966
191019	19300	35421	60966
191019	19400	35421	60966
191019	19500	35421	60966
191019	19600	35421	60966
191019	19700	35421	60966
191019	19800	35421	60966
191019	19900	35421	60966
191019	20000	35421	60966
191019	20100	35421	60966
191019	20200	35421	60966
191019	20300	35421	60966
191019	20400	35421	60966
191019	20500	35421	60966
191019	20600	35421	60966
191019	20700	35421	60966
191019	20800	35421	60966
191019	20900	35421	60966
191019	21000	35421	60966
191019	21100	35421	60966
191019	21200	35421	60966
191019	21300	35421	60966
191019	21400	35421	60966
191019	21500	35421	60966
191019	21600	35421	60966
191019	21700	35421	60966
191019	21800	35421	60966
191019	21900	35421	60966
191019	22000	35421	60966
191019	22100	35421	60966
191019	22200	35421	60966
191019	22300	35421	60966
191019	22400	35421	60966
191019	22500	35421	60966
191019	22600	35421	60966
191019	22700	35421	60966
191019	22800	35421	60966
191019	22900	35421	60966
191019	23000	35421	60966
191019	23100	35421	60966
191019	23200	35421	60966
191019	23300	35421	60966
191019	23400	35421	60966
191019	23500	35421	60966
191019	23600	35421	60966
191019	23700	35421	60966
191019	23800	35421	60966
191019	23900	35421	60966
191019	24000	35421	60966
191019	24100	35421	60966
191019	24200	35421	60966
191019	24300	35421	60966
191019	24400	35421	60966
191019	24500	35421	60966
191019	24600	35421	60966
191019	24700	35421	60966
191019	24800	35421	60966
191019	24900	35421	60966
191019	25000	35421	60966
191019	25100	35421	60966
191019	25200	35421	60966
191019	25300	35421	60966
191019	25400	35421	60966
191019	25500	35421	60966
191019	25600	35421	60966
191019	25700	35421	60966
191019	25800	35421	60966
191019	25900	35421	60966
191019	26000	35421	60966
191019	26100	35421	60966
191019	26200	35421	60966
191019	26300	35421	60966
191019	26400	35421	60966
191019	26500	35421	60966
191019	26600	35421	60966
191019	26700	35421	60966
191019	26800	35421	60966
191019	26900	35421	60966
191019	27000	35421	60966
191019	27100	35421	60966
191019	27200	35421	60966
191019	27300	35421	60966
191019	27400	35421	60966
191019	27500	35421	60966
191019	27600	35421	60966
191019	27700	35421	60966
191019	27800	35421	60966
191019	27900	35421	60966
191019	28000	35421	60966
191019	28100	35421	60966
191019	28200	35421	60966
191019	28300	35421	60966
191019	28400	35421	60966
191019	28500	35421	60966
191019	28600	35421	60966
191019	28700	35421	60966
191019	28800	35421	60966
191019	28900	35421	60966
191019	29000	35421	60966
191019	29100	35421	60966
191019	29200	35421	60966
191019	29300	35421	60966
191019	29400	35421	60966
191019	29500	35421	60966
191019	29600	35421	60966
191019	29700	35421	60966
191019	29800	35421	60966
191019	29900	35421	60966
191019	30000	35421	60966
191019	30100	35421	60966
191019	30200	35421	60966
191019	30300	35421	60966
191019	30400	35421	60966
191019	30500	35421	60966
191019	30600	35421	60966
191019	30700	35421	60966
191019	30800	35421	60966
191019	30900	35421	60966
191019	31000	35421	60966
191019	31100	35421	60966
191019	31200	35421	60966
191019	31300	35421	60966
191019	31400	35421	60966
191019	31500	35421	60966
191019	31600	35421	60966
191019	31700	35421	60966
191019	31800	35421	60966
191019	31900	35421	60966
191019	32000	35421	60966
191019	32100	35421	60966
191019	32200	35421	60966
191019	32300	35421	60966
191019	32400	35421	60966
191019	32500	35421	60966
191019	32600	35421	60966
191019	32700	35421	60966
191019	32800	35421	60966
191019	32900	35421	60966
191019	33000	35421	60966
191019	33100	35421	60966
191019	33200	35421	60966
191019	33300	35421	60966
191019	33400	35421	60966
191019	33500	35421	60966
191019	33600	35421	60966
191019	33700	35421	60966
191019	33800	35421	60966
191019	33900	35421	60966
191019	34000	35421	60966
191019	34100	35421	60966
191019	34200	35421	60966
191019	34300	35421	60966
191019	34400	35421	60966
191019	34500	35421	60966
191019	34600	35421	60966
191019	34700	35421	60966
191019	34800	35421	60966
191019	34900	35421	60966
191019	35000	35421	60966
191019	35100	35421	60966
191019	35200	35421	60966
191019	35300	35421	60966
191019	35400	35421	60966
191019	35500	35421	60966
191019	35600	35421	60966
191019	35700	35421	60966
191019	35800	35421	60966
191019	35900	35421	60966
191019	36000	35421	60966
191019	36100	35421	60966
191019	36200	35421	60966
191019	36300	35421	60966
191019	36400	35421	60966
191019	36500	35421	60966
191019	36600	35421	60966
191019	36700	35421	60966
191019	36800	35421	60966
191019	36900	35421	60966
191019	37000	35421	60966
191019	37100	35421	60966
191019	37200	35421	60966
191019	37300	35421	60966
191019	37400	35421	60966
191019	37500	35421	60966
191019	37600	35421	60966
191019	37700	35421	60966
191019	37800	35421	60966
191019	37900	35421	60966
191019	38000	35421	60966
191019	38100	35421	60966
191019	38200	35421	60966
191019	38300	35421	60966
191019	38400	35421	60966
191019	38500	35421	60966
191019	38600	35421	60966
191019	38700	35421	60966
191019	38800	35421	60966
191019	38900	35421	60966
191019	39000	35421	60966
191019	39100	35421	60966
191019	39200	35421	60966
191019	39300	35421	60966
191019	39400	35421	60966
191019	39500	35421	60966
191019	39600	35421	60966
191019	39700	35421	60966
191019	39800	35421	60966
191019	39900	35421	60966
191019	40000	35421	60966
191019	40100	35421	60966
191019	40200	35421	60966
191019	40300	35421	60966
191019	40400	35421	60966
191019	40500	35421	60966
191019	40600	35421	60966
191019	40700	35421	60966
191019	40800	35421	60966
191019	40900	35421	60966
191019	41000	35421	60966
191019	41100	35421	60966
191019	41200	35421	60966
191019	41300	35421	60966
191019	41400	35421	60966
191019	41500	35421	60966
191019	41600	35421	60966
191019	41700	35421	60966
191019	41800	35421	60966
191019	41900	35421	60966
191019	42000	35421	60966
191019	42100	35421	60966
191019	42200	35421	60966
191019	42300	35421	60966
191019	42400	35421	60966
191019	42500	35421	60966
191019	42600	35421	60966
191019	42700	35421	60966
191019	42800	35421	60966
191019	42900	35421	60966
191019	43000	35421	60966
191019	43100	35421	60966
191019	43200	35421	60966
191019	43300	35421	60966
191019	43400	35421	60966
191019	43500	35421	60966
191019	43600	35421	60966
191019	43700	35421	60966
191019	43800	35421	60966
191019	43900	35421	60966
191019	44000	35421	60966
191019	44100	35421	60966
191019	44200	35421	60966
191019	44300	35421	60966
191019	44400	35421	60966
191019	44500	35421	60966
191019	44600	35421	60966
191019	44700	35421	60966
191019	44800	35421	60966
191019	44900	35421	60966
191019	45000	35421	60966
191019	45100	35421	60966
191019	45200	35421	60966
191019	45300	35421	60966
191019	45400	35421	60966
191019	45500	35421	60966
191019	45600	35421	60966
191019	45700	35421	60966
191019	45800	35421	60966
191019	45900	35421	60966
191019	46000	35421	60966
191019	46100	35421	60966
191019	46200	35421	60966
191019	46300	35421	60966
191019	46400	35421	60966
191019	46500	35421	60966
191019	46600	35421	60966
191019	46700	35421	60966
191019	46800	35421	60966
191019	46900	35421	60966
191019	47000	35421	60966
191019	47100	35421	60966
191019	47200	35421	60966
191019	47300	35421	60966
191019	47400	35421	60966
191019	47500	35421	60966
191019	47600	35421	60966
191019	47700	35421	60966
191019	47800	35421	60966
191019	47900	35421	60966
191019	48000	35421	60966
191019	48100	35421	60966
191019	48200	35421	60966
191019	48300	35421	60966
191019	48400	35421	60966
191019	48500	35421	60966
191019	48600	35421	60966
191019	48700	35421	60966
191019	48800	35421	60966
191019	48900	35421	60966
191019	49000	35421	60966
191019	49100	35421	60966
191019	49200	35421	60966
191019	49300	35421	60966
191019	49400	35421	60966
191019	49500	35421	60966
191019	49600	35421	60966
191019	49700	35421	60966
191019	49800	35421	60966
191019	49900	35421	60966
191019	50000	35421	60966
191019	50100	35421	60966
191019	50200	35421	60966
191019	50300	35421	60966
191019	50400	35421	60966
191019	50500	35421	60966
191019	50600	35421	60966
191019	50700	35421	60966
191019	50800	35421	60966
191019	50900	35421	60966
191019	51000	35421	60966
191019	51100	35421	60966
191019	51200	35421	60966
191019	51300	35421	60966
191019	51400	35421	60966
191019	51500	35421	60966
191019	51600	35421	60966
191019	51700	35421	60966
191019	51800	35421	60966
191019	51900	35421	60966
191019	52000	35421	60966
191019	52100	35421	60966
191019	52200	35421	60966
191019	52300	35421	60966
191019	52400	35421	60966
191019	52500	35421	60966
191019	52600	35421	60966
191019	52700	35421	60966
191019	52800	35421	60966
191019	52900	35421	60966
191019	53000	35421	60966
191019	53100	35421	60966
191019	53200	35421	60966
191019	53300	35421	60966
191019	53400	35421	60966
191019	53500	35421	60966
191019	53600	35421	60966
191019	53700	35421	60966
191019	53800	35421	60966
191019	53900	35421	60966
191019	54000	35421	60966
191019	54100	35421	60966
191019	54200	35421	60966
191019	54300	35421	60966
191019	54400	35421	60966
191019	54500	35421	60966
191019	54600	35421	60966
191019	54700	35421	60966
191019	54800	35421	60966
191019	54900	35421	60966
191019	55000	35421	60966
191019	55100	35421	60966
191019	55200	35421	60966
191019	55300	35421	60966
191019	55400	35421	60966
191019	55500	35421	60966
191019	55600	35421	60966
191019	55700	35421	60966
191019	55800	35421	60966
191019	55900	35421	60966
191019	56000	35421	60966
191019	56100	35421	60966
191019	56200	35421	60966
191019	56300	35421	60966
191019	56400	35421	60966
191019	56500	35421	60966
191019	56600	35421	60966
191019	56700	35421	60966
191019	56800	35421	60966
191019	56900	35421	60966
191019	57000	35421	60966
191019	57100	35421	60966
191019	57200	35421	60966
191019	57300	35421	60966
191019	57400	35421	60966
191019	57500	35421	60966
191019	57600	35421	60966
191019	57700	35421	60966
191019	57800	35421	60966
191019	57900	35421	60966
191019	58000	35421	60966
191019	58100	35421	60966
191019	58200	35421	60966
191019	58300	35421	60966
191019	58400	35421	60966
191019	58500	35421	60966
191019	58600	35421	60966
191019	58700	35421	60966
191019	58800	35421	60966
191019	58900	35421	60966
191019	59000	35421	60966
191019	59100	35421	60966
191019	59200	35421	60966
191019	59300	35421	60966
191019	59400	35421	60966
191019	59500	35421	60966
191019	59600	35421	60966
191019	59700	35421	60966
191019	59800	35421	60966
191019	59900	35421	60966
191019	60000	35421	60966
191019	60100	35421	60966
191019	60200	35421	60966
191019	60300	35421	60966
191019	60400	35421	60966
191019	60500	35421	60966
191019	60600	35421	60966
191019	60700	35421	60966
191019	60800	35421	60966
191019	60900	35421	60966
191019	61000	35421	60966
191019	61100	35421	60966
191019	61200	35421	60966
191019	61300	35421	60966
191019	61400	35421	60966
191019	61500	35421	60966
191019	61600	35421	60966
191019	61700	35421	60966
191019	61800	35421	60966
191019	61900	35421	60966
191019	62000	35421	60966
191019	62100	35421	60966
191019	62200	35421	60966
191019	62300	35421	60966
191019	62400	35421	60966
191019	62500	35421	60966
191019	62600	35421	60966
191019	62700	35421	60966
191019	62800	35421	60966
191019	62900	35421	60966
191019	63000	35421	60966
191019	63100	35421	60966
191019	63200	35421	60966
191019	63300	35421	60966
191019	63400	35421	60966
191019	63500	35421	60966
191019	63600	35421	60966
191019	63700	35421	60966
191019	63800	35421	60966
191019	63900	35421	60966
191019	64000	35421	60966
191019	64100	35421	60966
191019	64200	35421	60966
191019	64300	35421	60966
191019	64400	35421	60966
191019	64500	35421	60966
191019	64600	35421	60966
191019	64700	35421	60966
191019	64800	35421	60966
191019	64900	35421	60966
191019	65000	35421	60966
191019	65100	35421	60966
191019	65200	35421	60966
191019	65300	35421	60966
191019	65400	35421	60966
191019	65500	35421	60966
191019	65600	35421	60966
191019	65700	35421	60966
191019	65800	35421	60966
191019	65900	35421	60966
191019	66000	35421	60966
191019	66100	35421	60966
191019	66200	35421	60966
191019	66300	35421	60966
191019	66400	35421	60966
191019	66500	35421	60966
191019	66600	35421	60966
191019	66700	35421	60966
191019	66800	35421	60966
191019	66900	35421	60966
191019	67000	35421	60966
191019	67100	35421	60966
191019	67200	35421	60966
191019	67300	35421	60966
191019	67400	35421	60966
191019	67500	35421	60966
191019	67600	35421	60966
191019	67700	35421	60966
191019	67800	35421	60966
191019	67900	35421	60966
191019	68000	35421	60966
191019	68100	35421	60966
191019	68200	35421	60966
191019	68300	35421	60966
191019	68400	35421	60966
191019	68500	35421	60966
191019	68600	35421	60966
191019	68700	35421	60966
191019	68800	35421	60966
191019	68900	35421	60966
191019	69000	35421	60966
191019	69100	35421	60966
191019	69200	35421	60966
191019	69300	35421	60966
191019	69400	35421	60966
191019	69500	35421	60966
191019	69600	35421	60966
191019	69700	35421	60966
191019	69800	35421	60966
191019	69900	35421	60966
191019	70000	35421	60966
191019	70100	35421	60966
191019	70200	35421	60966
191019	70300	35421	60966
191019	70400	35421	60966
191019	70500	35421	60966
191019	70600	35421	60966
191019	70700	35421	60966
191019	70800	35421	60966
191019	70900	35421	60966
191019	71000	35421	60966
191019	71100	35421	60966
191019	71200	35421	60966
191019	71300	35421	60966
191019	71400	35421	60966
191019	71500	35421	60966
191019	71600	35421	60966
191019	71700	35421	60966
191019	71800	35421	60966
191019	71900	35421	60966
191019	72000	35421	60966
191019	72100	35421	60966
191019	72200	35421	60966
191019	72300	35421	60966
191019	72400	35421	60966
191019	72500	35421	60966
191019	72600	35421	60966
191019	72700	35421	60966
191019	72800	35421	60966
191019	72900	35421	60966
191019	73000	35421	60966
191019	73100	35421	60966
191019	73200	35421	60966
191019	73300	35421	60966
191019	73400	35421	60966
191019	73500	35421	60966
191019	73600	35421	60966
191019	73700	35421	60966
191019	73800	35421	60966
191019	73900	35421	60966
191019	74000	35421	60966
191019	74100	35421	60966
191019	74200	35421	60966
191019	74300	35421	60966
191019	74400	35421	60966
191019	74500	35421	60966
191019	74600	35421	60966
191019	74700	35421	60966
191019	74800	35421	60966
191019	74900	35421	60966
191019	75000	35421	60966
191019	75100	35421	60966
191019	75200	35421	60966
191019	75300	35421	60966
191019	75400	35421	60966
191019	75500	35421	60966
191019	75600	35421	60966
191019	75700	35421	60966
191019	75800	35421	60966
191019	75900	35421	60966
191019	76000	35421	60966
191019	76100	35421	60966
191019	76200	35421	60966
191019	76300	35421	60966
191019	76400	35421	60966
191019	76500	35421	60966
191019	76600	35421	60966
191019	76700	35421	60966
191019	76800	35421	60966
191019	76900	35421	60966
191019	77000	35421	60966
191019	77100	35421	60966
191019	77200	35421	60966
191019	77300	35421	60966
191019	77400	35421	60966
191019	77500	35421	60966
191019	77600	35421	60966
191019	77700	35421	60966
191019	77800	35421	60966
191019	77900	35421	60966
191019	78000	35421	60966
191019	78100	35421	60966
191019	78200	35421	60966
191019	78300	35421	60966
191019	78400	35421	60966
191019	78500	35421	60966
191019	78600	35421	60966
191019	78700	35421	60966
191019	78800	35421	60966
191019	78900	35421	60966
191019	79000	35421	60966
191019	79100	35421	60966
191019	79200	35421	60966
191019	79300	35421	60966
191019	79400	35421	60966
191019	79500	35421	60966
191019	79600	35421	60966
191019	79700	35421	60966
191019	79800	35421	60966
191019	79900	35421	60966
191019	80000	35421	60966
191019	80100	35421	60966
191019	80200	35421	60966
191019	80300	35421	60966
191019	80400	35421	60966
191019	80500	35421	60966
191019	80600	35421	60966
191019	80700	35421	60966
191019	80800	35421	60966
191019	80900	35421	60966
191019	81000	35421	60966
191019	81100	35421	60966
191019	81200	35421	60966
191019	81300	35421	60966
191019	81400	35421	60966
191019	81500	35421	60966
191019	81600	35421	60966
191019	81700	35421	60966
191019	81800	35421	60966
191019	81900	35421	60966
191019	82000	35421	60966
191019	82100	35421	60966
191019	82200	35421	60966
191019	82300	35421	60966
191019	82400	35421	60966
191019	82500	35421	60966
191019	82600	35421	60966
191019	82700	35421	60966
191019	82800	35421	60966
191019	82900	35421	60966
191019	83000	35421	60966
191019	83100	35421	60966
191019	83200	35421	60966
191019	83300	35421	60966
191019	83400	35421	60966
191019	83500	35421	60966
191019	83600	35421	60966
191019	83700	35421	60966
191019	83800	35421	60966
191019	83900	35421	60966
191019	84000	35421	60966
191019	84100	35421	60966
191019	84200	35421	60966
191019	84300	35421	60966
191019	84400	35421	60966
191019	84500	35421	60966
191019	84600	35421	60966
191019	84700	35421	60966
191019	84800	35421	60966
191019	84900	35421	60966
191019	85000	35421	60966
191019	85100	35421	60966
191019	85200	35421	60966
191019	85300	35421	60966
191019	85400	35421	60966
191019	85500	35421	60966
191019	85600	35421	60966
191019	85700	35421	60966
191019	85800	35421	60966
191019	85900	35421	60966
191019	86000	35421	60966
191019	86100	35421	60966
191019	86200	35421	60966
191019	86300	35421	60966
191019	86400	35421	60966
191019	86500	35421	60966
191019	86600	35421	60966
191019	86700	35421	60966
191019	86800	35421	60966
191019	86900	35421	60966
191019	87000	35421	60966
191019	87100	35421	60966
191019	87200	35421	60966
191019	87300	35421	60966
191019	87400	35421	60966
191019	87500	35421	60966
191019	87600	35421	60966
191019	87700	35421	60966
191019	87800	35421	60966
191019	87900	35421	60966
191019	88000	35421	60966
191019	88100	35421	60966
191019	88200	35421	60966
191019	88300	35421	60966
191019	88400	35421	60966
191019	88500	35421	60966
191019	88600	35421	60966
191019	88700	35421	60966
191019	88800	35421	60966
191019	88900	35421	60966
191019	89000	35421	60966
191019	89100	35421	60966
191019	89200	35421	60966
191019	89300	35421	60966
191019	89400	35421	60966
191019	89500	35421	60966
191019	89600	35421	60966
191019	89700	35421	60966
191019	89800	35421	60966
191019	89900	35421	60966
191019	90000	35421	60966
191019	90100	35421	60966
191019	90200	35421	60966
191019	90300	35421	60966
191019	90400	35421	60966
191019	90500	35421	60966
191019	90600	35421	60966
191019	90700	35421	60966
191019	90800	35421	60966
191019	90900	35421	60966
191019	91000	35421	60966
191019	91100	35421	60966
191019	91200	35421	60966
191019	91300	35421	60966
191019	91400	35421	60966
191019	91500	35421	60966
191019	91600	35421	60966
191019	91700	35421	60966
191019	91800	35421	60966
191019	91900	35421	60966
191019	92000	35421	60966
191019	92100	35421	60966
191019	92200	35421	60966
191019	92300	35421	60966
191019	92400	35421	60966
191019	92500	35421	60966
191019	92600	35421	60966
191019	92700	35421	60966
191019	92800	35421	60966
191019	92900	35421	60966
191019	93000	35421	60966
191019	93100	35421	60966
191019	93200	35421	60966
191019	93300	35421	60966
191019	93400	35421	60966
191019	93500	35421	60966
191019	93600	35421	60966
191019	93700	35421	60966
191019	93800	35421	60966
191019	93900	35421	60966
191019	94000	35421	60966
191019	94100	35421	60966
191019	94200	35421	60966
191019	94300	35421	60966
191019	94400	35421	60966
191019	94500	35421	60966
191019	94600	35421	60966
191019	94700	35421	60966
191019	94800	35421	60966
191019	94900	35421	60966
191019	95000	35421	60966
191019	95100	35421	60966
191019	95200	35421	60966
191019	95300	35421	60966
191019	95400	35421	60966
191019	95500	35421	60966
191019	95600	35421	60966
191019	95700	35421	60966
191019	95800	35421	60966
191019	95900	35421	60966
191019	96000	35421	60966
191019	96100	35421	60966
191019	96200	35421	60966
191019	96300	35421	60966
191019	96387	35421	60966
Total number of sequences before pre.cluster was 96387.
pre.cluster removed 60966 sequences.

It took 104 secs to cluster 96387 sequences.

Processing group 191025:
191025	0	20044	644
191025	100	13032	7656
191025	200	11485	9203
191025	300	10670	10018
191025	400	10178	10510
191025	500	9784	10904
191025	600	9484	11204
191025	700	9243	11445
191025	800	9107	11581
191025	900	8963	11725
191025	1000	8890	11798
191025	1100	8810	11878
191025	1200	8746	11942
191025	1300	8694	11994
191025	1400	8631	12057
191025	1500	8569	12119
191025	1600	8514	12174
191025	1700	8448	12240
191025	1800	8412	12276
191025	1900	8385	12303
191025	2000	8341	12347
191025	2100	8296	12392
191025	2200	8259	12429
191025	2300	8216	12472
191025	2400	8177	12511
191025	2500	8168	12520
191025	2600	8139	12549
191025	2700	8118	12570
191025	2800	8093	12595
191025	2900	8071	12617
191025	3000	8046	12642
191025	3100	8030	12658
191025	3200	8003	12685
191025	3300	7966	12722
191025	3400	7946	12742
191025	3500	7934	12754
191025	3600	7927	12761
191025	3700	7927	12761
191025	3800	7927	12761
191025	3900	7927	12761
191025	4000	7927	12761
191025	4100	7927	12761
191025	4200	7927	12761
191025	4300	7927	12761
191025	4400	7927	12761
191025	4500	7927	12761
191025	4600	7927	12761
191025	4700	7927	12761
191025	4800	7927	12761
191025	4900	7927	12761
191025	5000	7927	12761
191025	5100	7927	12761
191025	5200	7927	12761
191025	5300	7927	12761
191025	5400	7927	12761
191025	5500	7927	12761
191025	5600	7927	12761
191025	5700	7927	12761
191025	5800	7927	12761
191025	5900	7927	12761
191025	6000	7927	12761
191025	6100	7927	12761
191025	6200	7927	12761
191025	6300	7927	12761
191025	6400	7927	12761
191025	6500	7927	12761
191025	6600	7927	12761
191025	6700	7927	12761
191025	6800	7927	12761
191025	6900	7927	12761
191025	7000	7927	12761
191025	7100	7927	12761
191025	7200	7927	12761
191025	7300	7927	12761
191025	7400	7927	12761
191025	7500	7927	12761
191025	7600	7927	12761
191025	7700	7927	12761
191025	7800	7927	12761
191025	7900	7927	12761
191025	8000	7927	12761
191025	8100	7927	12761
191025	8200	7927	12761
191025	8300	7927	12761
191025	8400	7927	12761
191025	8500	7927	12761
191025	8600	7927	12761
191025	8700	7927	12761
191025	8800	7927	12761
191025	8900	7927	12761
191025	9000	7927	12761
191025	9100	7927	12761
191025	9200	7927	12761
191025	9300	7927	12761
191025	9400	7927	12761
191025	9500	7927	12761
191025	9600	7927	12761
191025	9700	7927	12761
191025	9800	7927	12761
191025	9900	7927	12761
191025	10000	7927	12761
191025	10100	7927	12761
191025	10200	7927	12761
191025	10300	7927	12761
191025	10400	7927	12761
191025	10500	7927	12761
191025	10600	7927	12761
191025	10700	7927	12761
191025	10800	7927	12761
191025	10900	7927	12761
191025	11000	7927	12761
191025	11100	7927	12761
191025	11200	7927	12761
191025	11300	7927	12761
191025	11400	7927	12761
191025	11500	7927	12761
191025	11600	7927	12761
191025	11700	7927	12761
191025	11800	7927	12761
191025	11900	7927	12761
191025	12000	7927	12761
191025	12100	7927	12761
191025	12200	7927	12761
191025	12300	7927	12761
191025	12400	7927	12761
191025	12500	7927	12761
191025	12600	7927	12761
191025	12700	7927	12761
191025	12800	7927	12761
191025	12900	7927	12761
191025	13000	7927	12761
191025	13100	7927	12761
191025	13200	7927	12761
191025	13300	7927	12761
191025	13400	7927	12761
191025	13500	7927	12761
191025	13600	7927	12761
191025	13700	7927	12761
191025	13800	7927	12761
191025	13900	7927	12761
191025	14000	7927	12761
191025	14100	7927	12761
191025	14200	7927	12761
191025	14300	7927	12761
191025	14400	7927	12761
191025	14500	7927	12761
191025	14600	7927	12761
191025	14700	7927	12761
191025	14800	7927	12761
191025	14900	7927	12761
191025	15000	7927	12761
191025	15100	7927	12761
191025	15200	7927	12761
191025	15300	7927	12761
191025	15400	7927	12761
191025	15500	7927	12761
191025	15600	7927	12761
191025	15700	7927	12761
191025	15800	7927	12761
191025	15900	7927	12761
191025	16000	7927	12761
191025	16100	7927	12761
191025	16200	7927	12761
191025	16300	7927	12761
191025	16400	7927	12761
191025	16500	7927	12761
191025	16600	7927	12761
191025	16700	7927	12761
191025	16800	7927	12761
191025	16900	7927	12761
191025	17000	7927	12761
191025	17100	7927	12761
191025	17200	7927	12761
191025	17300	7927	12761
191025	17400	7927	12761
191025	17500	7927	12761
191025	17600	7927	12761
191025	17700	7927	12761
191025	17800	7927	12761
191025	17900	7927	12761
191025	18000	7927	12761
191025	18100	7927	12761
191025	18200	7927	12761
191025	18300	7927	12761
191025	18400	7927	12761
191025	18500	7927	12761
191025	18600	7927	12761
191025	18700	7927	12761
191025	18800	7927	12761
191025	18900	7927	12761
191025	19000	7927	12761
191025	19100	7927	12761
191025	19200	7927	12761
191025	19300	7927	12761
191025	19400	7927	12761
191025	19500	7927	12761
191025	19600	7927	12761
191025	19700	7927	12761
191025	19800	7927	12761
191025	19900	7927	12761
191025	20000	7927	12761
191025	20100	7927	12761
191025	20200	7927	12761
191025	20300	7927	12761
191025	20400	7927	12761
191025	20500	7927	12761
191025	20600	7927	12761
191025	20688	7927	12761
Total number of sequences before pre.cluster was 20688.
pre.cluster removed 12761 sequences.

It took 4 secs to cluster 20688 sequences.

Deconvoluting count table results...
1000
2000
3000
4000
5000
6000
7000
8000
9000
10000
11000
12000
13000
14000
15000
16000
17000
18000
19000
20000
21000
22000
23000
24000
25000
26000
27000
28000
29000
30000
31000
32000
33000
34000
35000
36000
37000
38000
39000
40000
41000
42000
43000
44000
45000
46000
47000
48000
49000
50000
51000
52000
53000
54000
55000
56000
57000
58000
59000
60000
61000
62000
63000
64000
65000
66000
67000
68000
69000
70000
71000
72000
73000
74000
75000
76000
77000
78000
79000
80000
81000
82000
83000
84000
85000
86000
87000
88000
89000
90000
91000
92000
93000
94000
95000
96000
97000
98000
99000
100000
101000
102000
103000
104000
105000
106000
107000
108000
109000
110000
111000
112000
113000
114000
115000
116000
117000
118000
119000
120000
121000
122000
123000
124000
125000
126000
127000
128000
129000
130000
131000
132000
133000
134000
135000
136000
137000
138000
139000
140000
141000
142000
143000
144000
145000
146000
147000
148000
149000
150000
151000
152000
153000
154000
155000
156000
157000
158000
159000
160000
161000
162000
163000
164000
165000
166000
167000
168000
169000
170000
171000
171389
It took 1 secs to merge 171389 sequences group data.
/******************************************/
Running command: get.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.fasta, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.count_table.temp)
Selected 132312 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.pick.fasta

/******************************************/
It took 151 secs to run pre.cluster.

Using 12 processors.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190703.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190802.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190830.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190913.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191004.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191019.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191025.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191108.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191111.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191115.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191122.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191129.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191206.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191213.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191220.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200103.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200110.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200117.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200124.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200131.map
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200205.map


mothur > chimera.vsearch(fasta=current, count=current, dereplicate=t)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta as input file for the fasta parameter.

Using 12 processors.
Using vsearch version v2.21.1.
Checking sequences from mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta ...

/******************************************/
Running command: split.groups(groups=190703-190802-190830-190913-191004-191019-191025-191108-191111-191115-191122-191129-191206-191213-191220-200103-200110-200117-200124-200131-200205, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta, count=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.count_table)

Using 12 processors.
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190830.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta190830)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190703.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta190703)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191213.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191213)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191129.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191129)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191115.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191115)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200117.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta200117)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191108.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191108)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190913.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta190913)
/******************************************/
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200131.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta200131)
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200103.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta200103)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190802.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta190802)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191019.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191019)
Selected 3206 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta190830

Selected 5451 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191108

/******************************************/
Done.
Selected 2978 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191129

Selected 5968 sequences from your fasta file.
/******************************************/
Done.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta200117

/******************************************/
Done.
/******************************************/
Done.
Selected 6792 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191115

/******************************************/
Done.
Selected 5771 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191213

/******************************************/
Done.
/******************************************/
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200124.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta200124)
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191111.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191111)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191206.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191206)
Selected 9 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta200131

/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191122.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191122)
Selected 6404 sequences from your fasta file.
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191220.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191220)

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta200103

Selected 18539 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta190913

Selected 18492 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta190802

/******************************************/
Done.
/******************************************/
Done.
/******************************************/
Done.
/******************************************/
Done.
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200110.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta200110)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191004.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191004)
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200205.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta200205)
Selected 35421 sequences from your fasta file.
Selected 5024 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta190703


Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191019

/******************************************/
Done.
/******************************************/
Done.
/******************************************/
Running command: get.seqs(dups=f, accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191025.count_table.accnos, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta191025)
Selected 6571 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta200124

Selected 3747 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191220

/******************************************/
Done.
Selected 4835 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191206

Selected 6547 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191122

Selected 8080 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191111

/******************************************/
Done.
/******************************************/
Done.
/******************************************/
Done.
/******************************************/
Done.
Selected 6536 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta200110

/******************************************/
Done.
Selected 6241 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta200205

Selected 6850 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191004

/******************************************/
Done.
/******************************************/
Done.
Selected 7927 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta191025

/******************************************/
Done.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190703.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190703.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190802.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190802.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190830.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190830.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190913.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.190913.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191004.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191004.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191019.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191019.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191025.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191025.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191108.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191108.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191111.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191111.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191115.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191115.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191122.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191122.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191129.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191129.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191206.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191206.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191213.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191213.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191220.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.191220.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200103.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200103.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200110.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200110.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200117.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200117.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200124.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200124.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200131.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200131.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200205.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.200205.fasta

/******************************************/

It took 1 secs to check 9 sequences from group 200131.

It took 4 secs to check 2978 sequences from group 191129.

It took 5 secs to check 3206 sequences from group 190830.

It took 7 secs to check 5451 sequences from group 191108.

It took 7 secs to check 5771 sequences from group 191213.

It took 7 secs to check 5024 sequences from group 190703.

It took 8 secs to check 5968 sequences from group 200117.

It took 7 secs to check 6241 sequences from group 200205.

It took 8 secs to check 6404 sequences from group 200103.

It took 9 secs to check 6792 sequences from group 191115.

It took 6 secs to check 4835 sequences from group 191206.

It took 4 secs to check 3747 sequences from group 191220.

It took 7 secs to check 6571 sequences from group 200124.

It took 8 secs to check 6536 sequences from group 200110.

It took 9 secs to check 8080 sequences from group 191111.

It took 8 secs to check 6547 sequences from group 191122.

It took 24 secs to check 18492 sequences from group 190802.

It took 24 secs to check 18539 sequences from group 190913.

It took 7 secs to check 6850 sequences from group 191004.

It took 46 secs to check 35421 sequences from group 191019.

It took 8 secs to check 7927 sequences from group 191025.
It took 54 secs to check 171389 sequences.


Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.chimeras
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.accnos


mothur > remove.seqs(fasta=current, accnos=current)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.accnos as input file for the accnos parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta as input file for the fasta parameter.
[WARNING]: This command can take a namefile and you did not provide one. The current namefile is mothur.output/mothur.input.trim.contigs.good.names which seems to match mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.fasta.
Removed 64524 sequences from your fasta file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta


mothur > classify.seqs(fasta=current, count=current, reference=ref_db/mothur.fasta, taxonomy=ref_db/mothur.tax, cutoff=80)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta as input file for the fasta parameter.

Using 12 processors.
Generating search database...    DONE.
It took 44 seconds generate search database.

Reading in the ref_db/mothur.tax taxonomy...	DONE.
Calculating template taxonomy tree...     DONE.
Calculating template probabilities...     DONE.
It took 166 seconds get probabilities.
Classifying sequences from mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta ...
100
[WARNING]: M01676_214_000000000-J25WG_1_2107_11033_25385 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
[WARNING]: M01676_195_000000000-CNHVD_1_2104_10000_26396 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
[WARNING]: M03075_342_000000000-CNLBV_1_1104_21736_19225 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
[WARNING]: M01676_214_000000000-J25WG_1_1101_26628_16868 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
[WARNING]: M01676_195_000000000-CNHVD_1_1111_8831_15503 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
100
100
200
100
100
100
100
100
100
100
[WARNING]: M01676_214_000000000-J25WG_1_1102_10699_15717 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
100
100
200
300
200
200
[WARNING]: M01676_195_000000000-CNHVD_1_2110_22771_10057 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
[WARNING]: M01676_214_000000000-J25WG_1_1110_19900_8456 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
300
200
400
300
200
200
300
200
200
200
200
200
400
500
400
400
300
500
300
600
300
300
300
500
[WARNING]: M03075_342_000000000-CNLBV_1_2111_21259_27603 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
300
300
300
500
[WARNING]: M01676_214_000000000-J25WG_1_2107_11455_25453 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
400
400
600
700
400
600
400
600
400
500
400
500
700
800
400
700

**** Exceeded maximum allowed command warnings, silencing warnings ****
[WARNING]: M01676_214_000000000-J25WG_1_1109_25153_13190 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
500
400
500
700
[WARNING]: M01676_195_000000000-CNHVD_1_2103_12746_5240 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
500
600
800
900
500
600
800
500
500
600
[WARNING]: M01676_195_000000000-CNHVD_1_1109_18858_24663 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
600
800
600
700
1000
900
[WARNING]: M01676_214_000000000-J25WG_1_2106_16044_11807 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
600
700
900
600
600
700
[WARNING]: M01676_195_000000000-CNHVD_1_2111_12666_9381 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
700
900
700
[WARNING]: M03075_342_000000000-CNLBV_1_2103_20236_16243 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
800
1100
1000
700
[WARNING]: M03075_342_000000000-CNLBV_1_2105_16332_22915 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1000
800
700
700
800
800
1000
800
900
1200
1100
800
1100
900
800
800
900
[WARNING]: M01676_195_000000000-CNHVD_1_1112_12956_16881 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
[WARNING]: M01676_195_000000000-CNHVD_1_1109_23475_8855 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
900
1100
900
[WARNING]: M01676_195_000000000-CNHVD_1_2103_8980_24116 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1000
1300
900
1200
1000
1200
[WARNING]: M01676_195_000000000-CNHVD_1_1105_2820_17930 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
900
1000
900
1000
1200
1000
1100
1000
1400
1300
1100
1300
1000
1100
1000
1100
1300
[WARNING]: M01676_195_000000000-CNHVD_1_1106_4806_12903 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
[WARNING]: M01676_195_000000000-CNHVD_1_2112_7061_10971 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1100
1500
1400
1100
1200
1400
1200
1100
1200
1100
1200
1400
1600
1500
1300
1200
1300
1200
1200
1200
1500
1300
1300
[WARNING]: M01676_214_000000000-J25WG_1_2113_10381_17768 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1500
[WARNING]: M03075_342_000000000-CNLBV_1_1106_7451_24680 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1700
1600
1300
1400
1400
[WARNING]: M01676_195_000000000-CNHVD_1_1110_27640_18312 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1300
1300
1300
1400
1600
1400
1600
[WARNING]: M01676_195_000000000-CNHVD_1_1110_11205_15803 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1800
1700
1400
1500
1400
1400
[WARNING]: M01676_195_000000000-CNHVD_1_2111_25100_5109 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1400
1700
1500
1700
1500
1500
1900
1800
1600
1500
[WARNING]: M01676_214_000000000-J25WG_1_2113_24628_10755 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1500
1500
1600
1800
[WARNING]: M01676_195_000000000-CNHVD_1_2102_15659_26721 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1600
1500
[WARNING]: M01676_195_000000000-CNHVD_1_2103_8081_21153 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1600
2000
1900
1800
1700
1600
1600
1600
1700
1900
[WARNING]: M01676_195_000000000-CNHVD_1_2105_16529_28296 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1600
1700
1700
2100
2000
1800
[WARNING]: M01676_214_000000000-J25WG_1_2113_26657_21058 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1900
1700
1700
1700
1800
2000
[WARNING]: M01676_214_000000000-J25WG_1_1107_12962_3921 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1800
1700
1800
2200
2100
1900
[WARNING]: M01676_195_000000000-CNHVD_1_2113_7732_19972 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
2000
1800
1800
1800
2100
1900
[WARNING]: M03075_342_000000000-CNLBV_1_2104_21108_23887 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1900
2300
2200
1800
2000
[WARNING]: M01676_214_000000000-J25WG_1_1114_26653_18893 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
1900
1900
2100
1900
2200
1900
2000
2400
2300
2100
2000
1900
2000
2000
2300
2000
2200
2000
2100
2500
2400
2200
2100
2000
2100
2100
2400
2100
2300
2100
2200
[WARNING]: M01676_195_000000000-CNHVD_1_1106_20493_11797 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
2600
2500
2300
2200
2100
2200
[WARNING]: M01676_214_000000000-J25WG_1_1113_5589_24376 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
2200
2500
2200
2400
2200
[WARNING]: M01676_195_000000000-CNHVD_1_2103_14467_20954 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
2300
2700
2600
2400
2300
2200
2300
2300
[WARNING]: M01676_195_000000000-CNHVD_1_2104_14258_11999 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
2600
2300
2500
2300
2400
2800
2700
2500
2400
2300
2400
[WARNING]: M03075_369_000000000-CKY2R_1_2104_21864_7878 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
2400
[WARNING]: M01676_195_000000000-CNHVD_1_2103_23658_10555 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
2700
2400
2600
2400
2500
2900
2800
2600
2500
2400
2500
2500
[WARNING]: M03075_342_000000000-CNLBV_1_1102_15693_10231 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
2800
2500
2700
2500
2600
3000
2900
2700
2600
2500
2600
2600
2900
2600
2800
[WARNING]: M01676_195_000000000-CNHVD_1_2107_17384_18218 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
2600
2700
3100
3000
2800
2700
2600
2700
2700
3000
2700
2900
2700
2800
[WARNING]: M01676_195_000000000-CNHVD_1_2113_26294_12850 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3200
3100
2900
2800
2700
2800
2800
3100
2800
3000
2800
2900
3300
3200
3000
2900
2800
2900
2900
3200
2900
3100
2900
3000
3400
3300
3100
3000
2900
3000
3000
3300
3000
3200
3000
3100
[WARNING]: M01676_214_000000000-J25WG_1_2113_9106_23355 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3500
3400
3200
3100
3000
3100
3100
[WARNING]: M01676_214_000000000-J25WG_1_1111_24783_20859 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3400
3100
[WARNING]: M01676_214_000000000-J25WG_1_1111_9522_14721 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3300
[WARNING]: M01676_214_000000000-J25WG_1_1108_15174_18943 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3100
3200
3600
3500
3300
3200
3100
3200
[WARNING]: M01676_195_000000000-CNHVD_1_1110_18743_20473 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3200
3500
3200
3400
3200
3300
3700
[WARNING]: M01676_195_000000000-CNHVD_1_2104_11925_7632 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3600
3400
3300
3200
3300
3300
3600
3300
3500
3300
3400
3800
3700
3500
3400
3300
[WARNING]: M01676_195_000000000-CNHVD_1_1103_20174_5880 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3400
3400
3700
3400
3600
3400
3500
3900
3800
3600
3500
3400
3500
[WARNING]: M01676_195_000000000-CNHVD_1_1103_6552_8024 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3500
3800
3500
3700
3500
3600
[WARNING]: M01676_214_000000000-J25WG_1_2104_12214_3251 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4000
3900
3700
3600
3500
3600
3600
[WARNING]: M01676_195_000000000-CNHVD_1_1106_13580_25367 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3900
3600
3800
3600
3700
4100
4000
3800
3700
3600
3700
3700
4000
3700
3900
3700
3800
4200
4100
3900
[WARNING]: M01676_195_000000000-CNHVD_1_2105_15536_3327 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3800
3700
3800
[WARNING]: M01676_195_000000000-CNHVD_1_2104_9026_15237 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3800
4100
3800
4000
3800
3900
4300
4200
4000
3900
[WARNING]: M01676_195_000000000-CNHVD_1_2104_17071_18282 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
3800
3900
3900
[WARNING]: M01676_195_000000000-CNHVD_1_2103_24447_18302 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4200
3900
4100
3900
4000
[WARNING]: M01676_195_000000000-CNHVD_1_1111_16869_3364 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4400
4300
4100
4000
3900
4000
4000
[WARNING]: M03075_342_000000000-CNLBV_1_2110_25242_18271 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4300
4000
4200
4000
4100
4500
4400
4200
[WARNING]: M03075_342_000000000-CNLBV_1_2101_15872_16715 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4100
4000
4100
4100
4400
4100
4300
4100
4200
[WARNING]: M01676_195_000000000-CNHVD_1_2112_27266_13061 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4600
4500
4300
4200
4100
4200
4200
[WARNING]: M01676_214_000000000-J25WG_1_1106_23288_11024 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4500
4200
4400
4200
4300
[WARNING]: M01676_195_000000000-CNHVD_1_2112_20067_14253 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4700
4600
4400
4300
4200
4300
[WARNING]: M01676_214_000000000-J25WG_1_2110_17474_18228 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4300
4600
4300
4500
4300
4400
[WARNING]: M03075_369_000000000-CKY2R_1_2104_12485_22693 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
[WARNING]: M03075_342_000000000-CNLBV_1_2103_16765_13533 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4800
4700
4500
4400
4300
4400
4400
4400
4700
4600
4400
4500
[WARNING]: M01676_214_000000000-J25WG_1_1111_23686_5305 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4900
4800
4600
4500
4400
[WARNING]: M01676_195_000000000-CNHVD_1_1107_9505_11122 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4500
4500
4800
4500
4700
4500
4600
5000
4900
4700
4600
4500
[WARNING]: M01676_195_000000000-CNHVD_1_2108_17476_16448 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4600
[WARNING]: M01676_195_000000000-CNHVD_1_2113_19385_18142 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4600
4600
4900
4800
4600
4700
[WARNING]: M03075_342_000000000-CNLBV_1_1104_10474_4301 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
[WARNING]: M03075_342_000000000-CNLBV_1_1109_4144_12784 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
5100
5000
4800
4700
4600
4700
[WARNING]: M03075_342_000000000-CNLBV_1_2109_15671_6611 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4700
4700
5000
4900
[WARNING]: M01676_195_000000000-CNHVD_1_1112_25972_13213 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4700
4800
[WARNING]: M03075_342_000000000-CNLBV_1_1103_4317_12852 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
5200
5100
4900
4800
4700
4800
4800
[WARNING]: M01676_214_000000000-J25WG_1_2112_29618_14780 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
4800
5100
5000
4800
4900
5300
[WARNING]: M01676_195_000000000-CNHVD_1_2101_22839_24427 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
5000
5200
4900
4800
4900
4900
4900
5200
5100
4900
5000
5400
5100
5300
5000
4900
5000
5000
[WARNING]: M01676_195_000000000-CNHVD_1_1102_6061_17649 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
5000
5300
5200
5000
5100
5500
5200
5400
5100
5000
5100
5100
[WARNING]: M01676_214_000000000-J25WG_1_1107_9799_5297 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
5100
5400
5300
5100
5200
5600
5300
5500
5200
5100
5200
5200
5648
5200
5500
5400
[WARNING]: M01676_195_000000000-CNHVD_1_2103_8259_12404 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
5200
5300
5400
5600
5300
5200
5300
5300
5649
5300
5600
5500
5400
5300
5500
5649
5400
[WARNING]: M01676_214_000000000-J25WG_1_2107_8538_14783 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
5300
5400
5400
5400
5600
5500
5400
5600
5649
5500
5400
[WARNING]: M03075_342_000000000-CNLBV_1_2112_9999_10192 could not be classified. You can use the remove.lineage command with taxon=unknown; to remove such sequences.
5500
5500
5649
5500
5600
5500
5600
5650
5500
5600
5600
5600
5649
5649
5600
5648
5600
5649
5649
5650

It took 999 secs to classify 67788 sequences.


It took 4 secs to create the summary file for 67788 sequences.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.mothur.wang.taxonomy
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.mothur.wang.tax.summary


mothur > remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Eukaryota)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta as input file for the fasta parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.mothur.wang.taxonomy as input file for the taxonomy parameter.

/******************************************/
Running command: remove.seqs(accnos=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.mothur.wang.accnos, count=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table, fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta)
Removed 103 sequences from your fasta file.
Removed 915 sequences from your count file.

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table

/******************************************/

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.mothur.wang.pick.taxonomy
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.mothur.wang.accnos
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta


mothur > summary.tax(taxonomy=current, count=current)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.mothur.wang.pick.taxonomy as input file for the taxonomy parameter.

It took 2 secs to create the summary file for 1410568 sequences.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.mothur.wang.pick.tax.summary


mothur > cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=4, cutoff=0.03)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta as input file for the fasta parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.mothur.wang.pick.taxonomy as input file for the taxonomy parameter.

Using 12 processors.
Splitting the file...
/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.0.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	1794
339	0	4854
151	0	4782
200	0	3613
300	0	4418
500	0	4971
303	0	4789
372	0	5165
400	0	4766
214	0	5125
480	0	4736
263	0	5439
402	0	4813
456	0	5321
504	0	5997
527	0	4370
430	0	4762

It took 0 secs to find distances for 528 sequences. 60153 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.0.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.1.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	1	299
200	1	1261
500	1	1578
300	1	2567
800	1	984
600	1	1924
317	1	2927
400	1	1718
700	1	2564
1000	1	2573
551	2	2979
711	2	2915
636	2	3211
449	2	2947
1006	2	2859
955	2	3051
900	2	2370
1055	2	3190
779	2	3231
1100	2	2995
842	2	3174
1103	2	3156

It took 2 secs to find distances for 1104 sequences. 36010 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.1.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.2.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
17	0	10
22	0	1
20	0	3
14	0	18
25	0	19
27	0	5
29	0	14
0	0	0
32	0	14
31	0	13
34	0	2
36	0	13
9	0	9

It took 0 secs to find distances for 37 sequences. 121 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.2.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.3.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	85
200	1	471
17000	2	2384
300	2	1204
400	3	2070
5700	5	8262
500	4	3254
600	5	4625
700	7	6439
15000	9	7010
800	9	8428
18800	10	4293
12700	13	12699
900	12	10067
1000	14	12401
13900	15	10377
1100	17	15003
8100	20	15639
5800	21	26960
1200	21	17964
17100	24	47836
1300	24	22205
1400	28	26084
16100	31	33531
11400	32	27485
1500	32	28593
9900	35	30427
5900	38	43560
1600	37	32062
8200	42	38915
1700	41	36342
17200	45	107109
18000	46	41559
1800	46	42376
12800	48	49409
15100	50	54035
1900	52	47808
6000	54	59902
2000	57	52137
18900	63	60523
2100	63	58237
8300	65	60975
17300	66	157756
2200	69	64613
6100	71	80844
14000	73	46279
10000	76	51716
16200	76	77431
2300	76	71017
11500	80	56179
2400	82	77034
12900	84	92099
8400	88	87149
6200	88	96399
17400	88	205750
2500	89	85842
15200	92	110615
18100	96	86216
2600	97	92977
6300	106	108863
2700	104	100741
17500	110	256499
8500	111	118083
2800	112	108519
19000	115	110906
10100	118	78952
13000	120	123403
16300	121	125838
2900	120	116883
6400	124	129604
11600	127	88070
3000	129	125303
17600	132	305541
14100	132	90866
8600	135	141689
15300	134	160493
3100	137	135988
6500	142	149183
18200	146	136400
3200	147	145662
17700	154	347069
13100	157	159913
3300	156	153326
8700	159	166121
6600	160	162151
10200	160	105557
3400	165	161868
16400	167	186367
19100	168	171829
17800	176	389135
11700	176	123831
3500	175	170723
15400	176	205298
6700	178	181888
8800	183	188230
3600	185	178546
14200	191	134404
13200	193	202000
6800	197	204723
18300	196	186677
3700	196	191689
17900	198	440011
17910	200	441842
10300	202	133936
8900	205	215285
3800	204	198556
16500	209	237099
6900	212	223453
11800	215	152123
3900	217	205118
15500	219	247956
13300	223	244311
10400	225	165986
19200	224	227662
7000	227	242199
4000	235	215948
9000	239	241590
7100	243	256923
16600	242	278139
10500	245	200853
11900	247	187863
14300	249	188177
4100	254	225966
7200	259	273751
9100	264	267186
18400	264	240900
19300	265	275823
10600	267	226734
15600	270	286607
4200	273	238274
7300	275	290833
13400	276	280950
16700	276	331583
9200	284	294409
10700	289	262627
7400	292	313254
4300	293	251016
12000	300	224491
9300	304	317898
19400	303	350170
7500	308	332964
16800	310	389811
10800	310	294245
14400	312	228364
4400	313	264042
7600	325	354574
9400	328	347996
4500	327	277693
10900	332	322268
13500	335	328829
15700	339	330788
7700	342	377972
19500	342	413779
16900	344	446152
18500	343	302434
4600	345	288300
12100	353	258990
9500	355	376334
11000	354	355236
7800	359	400795
4700	367	303268
14500	370	277533
16991	375	495163
15800	377	375735
7900	379	422938
19600	380	482911
9600	384	401339
11100	384	387311
19620	386	488524
4800	387	319001
12200	391	292082
13600	393	373497
8000	394	443148
8009	395	446247
4900	398	334200
18600	404	343275
15900	406	419459
9700	407	435991
14600	408	313502
5000	410	350227
11200	413	416893
12300	416	331583
5100	422	364436
13700	423	419422
9800	429	465651
9809	431	469575
5200	433	378522
14700	437	359187
11300	437	448389
16000	438	470207
12400	440	364559
11327	443	455357
16019	443	479889
18700	443	394851
5300	444	393069
13800	450	455956
5400	453	405347
12500	459	392785
14800	460	400964
5500	461	422486
13873	465	479070
18784	467	442978
5600	469	438118
5663	472	449312
12600	474	436472
14900	476	464813
12664	478	452659
14984	482	502849

It took 483 secs to find distances for 19621 sequences. 5603465 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.3.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.4.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1400	0	1199
1000	0	2436
2800	0	2394
0	0	0
100	0	1502
2000	1	7052
200	1	4975
300	2	10160
3000	2	18575
3300	2	15406
400	3	17597
1500	3	28448
1800	3	29673
1100	3	15959
500	4	26644
2700	4	45387
2100	5	49107
2500	6	34640
600	6	39433
2300	6	31010
2900	6	42937
1600	6	59206
1200	6	32426
1900	7	70475
3200	7	43404
700	7	52568
3100	8	80291
2200	9	78285
1700	9	87476
2211	9	82373
1712	9	91019
2966	9	78112
1977	9	101431
2797	9	93873
3127	9	92248
800	10	68063
1300	10	55171
900	10	82271
2400	10	71427
2600	11	86608
2422	11	80019
2616	11	94727
3400	11	83801
988	11	98242
3280	11	91611
1398	11	80865
3426	12	97245

It took 12 secs to find distances for 3427 sequences. 1081765 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.4.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.5.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
23	0	35
28	0	27
0	0	0
40	0	48
37	0	36
33	0	27
50	0	47
16	0	27
52	0	32
47	0	24
55	0	72
44	0	32
58	0	52

It took 0 secs to find distances for 59 sequences. 459 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.5.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.6.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
300	0	5
600	0	249
0	0	0
100	0	946
366	0	3880
400	0	2574
500	0	3459
473	0	4530
299	0	4344
518	0	4613
423	0	4760
700	0	3598
669	0	3080
599	0	3927
635	0	3571
702	0	4043
560	0	3391
200	0	4133
211	0	4485
734	0	4720

It took 0 secs to find distances for 735 sequences. 49344 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.6.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.7.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	212
1300	1	1336
1500	1	1742
2100	1	1519
200	0	787
1100	1	2895
800	2	1955
300	1	1693
2000	2	3888
1700	3	3670
400	2	3248
1400	3	7527
1200	4	7779
900	4	5416
1600	4	7661
500	3	5130
2300	3	7423
2500	3	4698
2400	4	5720
2200	5	10745
1900	5	8083
1277	5	11706
2085	5	10303
1474	5	13239
1648	5	10687
2212	6	11563
600	5	7540
2332	5	10286
1800	6	11627
700	5	9940
1000	6	9155
1806	6	11961
736	5	10796
2446	5	8978
2555	5	9122
1042	6	10862
1951	7	12716

It took 7 secs to find distances for 2556 sequences. 132219 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.7.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.8.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
200	0	8
400	0	34
0	0	0
300	0	42
600	0	60
100	0	42
500	0	107
341	0	141
394	0	173
592	0	234
624	0	211
441	0	242
558	0	136
483	0	158
654	0	182
522	0	216
278	0	202
196	0	160
684	0	235

It took 0 secs to find distances for 685 sequences. 2290 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.8.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.9.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1300	0	1420
0	0	0
2900	1	2251
2600	1	3597
100	0	656
200	0	2531
4100	0	2150
4300	1	3576
3900	1	6265
300	1	5374
1900	3	13398
2300	3	17404
3200	3	11086
400	2	9662
3700	3	19013
1400	4	16498
500	4	15418
3500	6	34365
2700	6	31515
600	5	22801
2000	7	36717
2400	8	47284
1500	8	32781
700	8	31084
3300	11	49405
1600	11	51159
3000	11	36846
4000	11	46471
4400	11	57874
800	12	38884
2100	14	59461
3800	14	57946
1700	14	68651
2800	15	60784
3400	16	88085
2500	17	78570
1800	17	89180
3600	17	72737
3424	17	98060
4484	17	107402
900	17	48461
1829	18	95435
4200	17	53387
3100	20	69451
2200	20	84532
1000	19	60256
2241	22	94447
2894	22	92869
3660	22	97460
2588	22	103285
1100	21	73155
4093	21	95715
3883	22	92215
3170	22	97133
1200	22	86281
4293	22	98482
1293	22	100670

It took 23 secs to find distances for 4485 sequences. 1173173 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.9.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.10.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
72	0	138
119	0	143
83	0	142
41	0	161
59	0	135
100	0	254
93	0	231
139	0	234
126	0	90
133	0	209
111	0	85
102	0	309
146	0	306

It took 0 secs to find distances for 147 sequences. 2183 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.10.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.11.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	133
200	1	484
1500	2	1458
2100	1	2009
300	1	1037
4400	2	4508
400	2	1751
3600	3	1892
3900	3	3047
2600	3	4604
3300	3	3220
500	3	2763
3000	4	5857
2200	5	7149
600	5	3915
1600	6	5086
4200	6	8743
700	7	5345
2700	8	10065
800	9	6770
4900	9	8647
2300	9	12269
3100	10	13346
1700	11	8616
4500	10	14619
4000	10	10521
900	11	8653
4700	12	10407
3400	12	11320
2800	13	17223
3700	13	12631
4300	13	17289
2400	13	17079
1000	14	11102
3200	15	20796
1800	17	13143
2500	17	22543
4100	18	20644
4600	18	25689
2523	18	23963
4608	19	26246
3258	19	24829
4121	19	23143
1100	19	13565
4371	20	24889
2900	21	23851
5000	21	21419
1900	22	16673
4800	21	21705
2914	22	25320
3500	22	19439
1200	22	16276
1300	23	19339
4833	23	25622
5048	23	26362
3800	23	19798
3569	24	24802
2000	25	21526
1400	24	22302
1456	24	23834
2060	25	24899
3855	25	25812

It took 26 secs to find distances for 5049 sequences. 299721 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.11.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.12.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
48	0	40
59	0	45
68	0	50
84	0	34
77	0	48
100	0	28
103	0	62
97	0	32
33	0	47
114	0	31
91	0	36
109	0	70
120	0	39

It took 0 secs to find distances for 121 sequences. 534 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.12.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.13.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	1
4	0	1
5	0	3
6	0	0
6	0	5
7	0	0
0	0	0
2	0	1
7	0	1
9	0	3
9	0	0
10	0	0
8	0	4

It took 0 secs to find distances for 11 sequences. 19 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.13.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.14.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
8	0	11
12	0	9
0	0	0
11	0	13
14	0	11
5	0	10
15	0	12
21	0	0
19	0	14
20	0	15
18	0	12
23	0	19
17	0	11

It took 0 secs to find distances for 24 sequences. 137 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.14.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.15.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
300	0	237
400	0	582
200	0	497
414	0	873
100	0	358
500	0	748
337	0	1051
238	0	1093
292	0	1036
377	0	881
478	0	1243
534	0	1113
507	0	1025
561	0	1485
447	0	1135
586	0	900
168	0	1042

It took 0 secs to find distances for 587 sequences. 12877 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.15.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.16.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
400	0	875
100	0	296
500	0	422
426	0	1653
700	1	1238
522	1	1305
600	1	1412
477	1	1833
369	1	1688
300	1	1431
301	1	1438
708	1	1807
640	1	1894
675	1	1536
604	1	1685
200	1	1328
564	1	1770
740	1	1486
212	1	1456

It took 1 secs to find distances for 741 sequences. 19551 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.16.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.17.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	153
152	0	244
139	0	252
164	0	304
200	0	109
176	0	303
107	0	228
87	0	281
124	0	223
186	0	307
216	0	260
61	0	276
197	0	362
206	0	276

It took 0 secs to find distances for 217 sequences. 3316 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.17.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.18.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
53	0	75
76	0	87
66	0	68
93	0	112
100	0	66
101	0	71
108	0	113
85	0	60
127	0	99
133	0	64
121	0	63
115	0	107
37	0	79

It took 0 secs to find distances for 134 sequences. 998 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.18.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.19.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	51
200	0	134
147	0	119
169	0	229
119	0	103
208	0	211
255	0	110
240	0	147
282	0	224
190	0	233
269	0	205
225	0	217
84	0	223
295	0	223

It took 0 secs to find distances for 296 sequences. 2244 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.19.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.20.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
42	0	98
52	0	77
67	0	86
60	0	60
73	0	84
79	0	81
29	0	100
90	0	89
105	0	127
100	0	150
95	0	88
85	0	80

It took 0 secs to find distances for 106 sequences. 1120 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.20.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.21.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	219
200	0	131
112	0	438
138	0	502
240	0	547
226	0	556
196	0	520
179	0	525
266	0	476
160	0	482
253	0	405
212	0	461
278	0	366
79	0	357

It took 0 secs to find distances for 279 sequences. 5635 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.21.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.22.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	0
7	0	2
8	0	0
9	0	3
11	0	0
12	0	0
11	0	6
0	0	0
13	0	0
3	0	1
16	0	1
14	0	0
15	0	5

It took 0 secs to find distances for 17 sequences. 18 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.22.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.23.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
97	0	125
79	0	196
56	0	305
89	0	349
100	0	62
69	0	284
105	0	298
126	0	231
139	0	243
133	0	110
113	0	313
39	0	325
120	0	276

It took 0 secs to find distances for 140 sequences. 3055 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.23.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.24.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
300	0	182
0	0	0
400	0	646
500	0	639
422	0	2916
100	0	1390
200	0	2168
298	0	2724
258	0	2693
495	0	2216
448	0	2827
334	0	2789
210	1	2827
395	1	3151
472	1	3256
365	1	2889
148	1	3009
518	1	3488

It took 1 secs to find distances for 519 sequences. 34785 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.24.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.25.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	148
500	0	531
600	0	552
400	0	939
700	0	941
468	0	999
300	0	635
703	0	1006
524	0	882
406	0	1057
663	0	739
800	0	590
742	0	1015
200	0	566
778	0	1078
620	0	1014
574	0	909
233	0	797
331	0	929
813	0	868

It took 0 secs to find distances for 814 sequences. 11293 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.25.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.26.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
31	0	34
36	0	29
25	0	39
0	0	0
44	0	48
40	0	32
48	0	46
17	0	33
58	0	43
55	0	55
64	0	0
61	0	63
52	0	54

It took 0 secs to find distances for 65 sequences. 476 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.26.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.27.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
700	0	470
100	1	748
800	1	582
600	1	833
400	1	1916
300	1	1643
500	1	3432
200	1	3072
588	1	5970
526	1	5711
833	1	3945
456	1	6609
745	1	4769
790	1	6845
900	1	3592
645	1	5305
372	1	5726
697	1	5771
913	1	5805
262	1	5187
874	1	5475

It took 1 secs to find distances for 914 sequences. 67118 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.27.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.28.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1300	0	509
100	0	927
900	1	4969
200	1	4100
800	1	4755
500	1	5790
1000	1	4662
700	1	8024
1200	2	9733
1100	2	6711
1400	2	3918
300	2	9002
863	2	11697
965	2	13223
748	2	13580
1296	2	12698
1366	2	11874
1222	2	14440
400	2	15605
1058	2	12281
1433	2	10699
1497	2	12552
431	2	17980
600	2	14512
610	2	15385
1143	2	12520

It took 2 secs to find distances for 1498 sequences. 158929 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.28.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.29.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
300	0	246
200	0	438
100	0	338
237	0	1151
400	0	634
445	0	933
291	0	1096
476	0	746
376	0	1172
533	0	917
336	0	1123
500	0	878
412	0	1021
584	0	899
559	0	750
167	0	911
505	0	1045

It took 0 secs to find distances for 585 sequences. 11764 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.29.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.30.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
70	0	311
100	0	75
92	0	189
99	0	397
105	0	456
78	0	323
49	0	264
60	0	379
116	0	262
34	0	362
111	0	487
85	0	384
122	0	539

It took 0 secs to find distances for 123 sequences. 4353 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.30.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.31.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
30	0	1
17	0	2
24	0	2
28	0	9
21	0	2
33	0	8
0	0	0
35	0	6
37	0	8
11	0	7
42	0	2
40	0	7
44	0	3

It took 0 secs to find distances for 45 sequences. 57 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.31.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.32.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	341
500	0	919
600	0	599
300	0	772
400	0	1214
405	0	1364
523	0	1408
700	0	1332
467	0	1353
702	0	1424
661	0	1548
740	1	1650
800	1	1217
200	1	1083
573	1	2150
776	1	1572
233	1	1577
811	1	1981
330	1	1277
619	1	1155

It took 1 secs to find distances for 812 sequences. 18459 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.32.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.33.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	217
91	0	269
118	0	142
105	0	331
74	0	202
129	0	190
167	0	249
159	0	254
52	0	206
184	0	226
150	0	111
140	0	269
176	0	363

It took 0 secs to find distances for 185 sequences. 2812 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.33.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.34.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	102
102	0	116
156	0	88
117	0	107
83	0	143
144	0	84
200	0	47
177	0	105
187	0	120
131	0	104
205	0	75
167	0	151
58	0	104
196	0	113

It took 0 secs to find distances for 206 sequences. 1310 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.34.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.35.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
600	0	42
500	0	125
100	0	75
700	0	153
400	0	317
200	0	280
1000	0	502
1100	0	379
800	1	601
763	1	734
683	1	625
591	1	914
966	1	803
1080	1	765
1025	1	1001
482	1	836
900	1	1120
836	1	1101
300	1	709
904	1	1149
1184	1	829
1133	1	847
341	1	894

It took 1 secs to find distances for 1185 sequences. 10498 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.35.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.36.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
38	0	33
27	0	30
33	0	21
47	0	11
0	0	0
51	0	27
43	0	21
18	0	25
58	0	44
61	0	52
68	0	25
65	0	20
55	0	22

It took 0 secs to find distances for 69 sequences. 331 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.36.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.37.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
53	0	113
0	0	0
76	0	124
85	0	78
100	0	98
101	0	125
121	0	48
93	0	104
133	0	104
115	0	142
66	0	115
108	0	101
37	0	113
127	0	161

It took 0 secs to find distances for 134 sequences. 1328 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.37.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.38.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
50	0	4
79	0	4
61	0	1
71	0	3
87	0	6
35	0	3
94	0	5
118	0	1
113	0	1
107	0	3
124	0	2
100	0	0
101	0	2

It took 0 secs to find distances for 125 sequences. 35 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.38.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.39.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
57	0	205
91	0	136
130	0	84
71	0	172
123	0	142
143	0	228
136	0	125
40	0	153
108	0	152
82	0	198
100	0	128
116	0	125

It took 0 secs to find distances for 144 sequences. 1848 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.39.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.40.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
6	0	2
9	0	0
10	0	6
8	0	1
14	0	1
13	0	3
0	0	0
11	0	3
15	0	6
4	0	3
12	0	4
17	0	0
16	0	6

It took 0 secs to find distances for 18 sequences. 35 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.40.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.41.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
200	0	294
212	0	485
237	0	376
150	0	523
184	0	514
260	0	387
300	0	337
319	0	330
301	0	383
353	0	349
336	0	445
281	0	587
100	0	491
105	0	531
369	0	443

It took 0 secs to find distances for 370 sequences. 5353 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.41.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.42.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
33	0	77
47	0	57
0	0	0
53	1	86
41	1	85
58	1	64
79	0	61
23	0	77
83	0	66
67	0	72
71	0	68
75	0	74
63	0	84

It took 1 secs to find distances for 84 sequences. 871 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.42.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.43.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
200	0	25
224	0	173
149	0	114
166	0	143
100	0	121
247	0	185
129	0	118
211	0	247
105	0	137
236	0	128
182	0	121
197	0	60
74	0	156
259	0	236

It took 0 secs to find distances for 260 sequences. 1818 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.43.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.44.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
19	0	18
23	0	8
30	0	8
33	0	12
27	0	9
0	0	0
41	0	12
43	0	8
45	0	19
36	0	19
39	0	13
13	0	8
48	0	14

It took 0 secs to find distances for 49 sequences. 148 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.44.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.45.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
200	0	45
400	0	289
300	0	515
270	0	511
302	0	522
428	0	461
234	0	313
100	0	238
406	0	407
382	0	364
190	0	448
448	0	334
331	0	592
134	0	373
357	0	503
469	0	677

It took 0 secs to find distances for 470 sequences. 5505 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.45.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.46.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
0	0	0
2	0	1

It took 0 secs to find distances for 3 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.46.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.47.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	1
3	0	0
4	0	0
4	0	0
3	0	0
6	0	0
0	0	0
1	0	0
5	0	2
5	0	0
3	0	0
5	0	0

It took 0 secs to find distances for 7 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.47.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.48.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
51	0	95
63	0	99
73	0	71
100	0	61
110	0	57
82	0	95
122	0	137
97	0	96
104	0	98
116	0	135
90	0	73
36	0	72
128	0	134

It took 0 secs to find distances for 129 sequences. 1162 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.48.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.49.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
400	0	57
500	0	81
200	0	59
349	0	221
100	0	106
300	0	205
246	0	221
428	0	343
390	0	308
302	0	215
494	0	275
524	0	241
580	0	178
553	0	189
600	0	168
462	0	313
606	0	198
174	0	323

It took 0 secs to find distances for 607 sequences. 3025 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.49.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.50.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
200	1	1229
201	1	1245
225	1	843
300	1	964
302	1	1012
174	1	1367
142	1	1789
247	1	931
319	1	1272
285	1	1213
335	1	1202
350	1	1173
267	1	1384
100	1	1340

It took 1 secs to find distances for 351 sequences. 14771 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.50.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.51.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
23	0	10
19	0	8
33	0	10
30	0	11
0	0	0
41	0	13
27	0	15
43	0	1
36	0	8
39	0	7
13	0	6
45	0	8
48	0	17

It took 0 secs to find distances for 49 sequences. 114 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.51.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.52.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
59	0	64
73	0	118
95	0	74
112	0	74
100	0	47
141	0	69
120	0	72
104	0	84
128	0	107
85	0	49
42	0	70
135	0	74
148	0	77

It took 0 secs to find distances for 149 sequences. 932 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.52.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.53.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
100	0	1
0	0	0
141	0	166
300	0	232
301	0	234
224	0	229
173	0	390
265	0	172
317	0	217
245	0	303
99	0	366
200	0	359
283	0	323
333	0	276
348	0	427

It took 0 secs to find distances for 349 sequences. 3462 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.53.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.54.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
200	0	48
0	0	0
255	0	192
228	0	397
198	0	465
380	0	287
362	0	247
280	0	139
343	0	232
100	0	207
161	0	324
323	0	155
300	0	249
302	0	297
113	0	309
397	0	387

It took 0 secs to find distances for 398 sequences. 3431 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.54.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.55.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
100	0	55
0	0	0
121	0	109
76	0	131
94	0	120
108	0	164
180	0	73
172	0	101
163	0	98
133	0	121
53	0	88
144	0	96
154	0	136
189	0	152

It took 0 secs to find distances for 190 sequences. 1389 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.55.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.56.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
300	0	252
500	0	206
100	0	291
600	0	943
400	0	1032
348	0	827
401	0	1032
568	1	1149
603	1	1096
449	1	1058
636	1	1007
667	1	1115
492	1	947
532	1	1030
200	1	1139
283	1	1235
697	1	1316

It took 1 secs to find distances for 698 sequences. 12951 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.56.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.57.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
31	0	30
35	0	16
25	0	22
0	0	0
47	0	11
44	0	26
40	0	33
57	0	30
51	0	40
17	0	18
60	0	40
54	0	21
63	0	27

It took 0 secs to find distances for 64 sequences. 314 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.57.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.58.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
200	0	139
300	0	97
206	0	207
179	0	213
310	0	190
273	0	333
100	0	253
292	0	320
102	0	260
253	0	234
145	0	182
231	0	297
327	0	251
343	0	268
359	0	185

It took 0 secs to find distances for 360 sequences. 2940 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.58.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.59.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	71
65	0	103
114	0	60
148	0	101
81	0	115
141	0	114
124	0	144
93	0	79
104	0	155
156	0	182
163	0	147
46	0	127
132	0	88

It took 0 secs to find distances for 164 sequences. 1415 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.59.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.60.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
265	0	65
200	0	43
100	0	23
500	0	20
300	0	26
216	0	53
306	0	33
375	0	31
342	0	41
433	0	35
459	0	39
484	0	41
400	0	29
508	0	49
405	0	32
152	0	47
531	0	36

It took 0 secs to find distances for 532 sequences. 502 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.60.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.61.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
400	0	60
800	0	255
0	0	0
700	0	516
1200	0	243
900	0	781
100	0	409
600	1	1497
200	1	1521
1000	1	1992
1100	1	3045
500	1	3000
300	2	3173
796	2	4964
690	2	5367
891	2	5291
1127	2	4855
1195	2	4730
1300	2	3986
1260	2	5899
976	2	5557
1054	2	5600
397	2	5064
1322	2	6103
563	2	5081
1381	2	4816

It took 2 secs to find distances for 1382 sequences. 63327 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.61.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.62.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	455
400	0	1398
500	0	1238
600	0	2447
700	1	1781
429	1	2857
480	1	3013
372	1	3218
608	1	2914
645	1	3186
680	1	2985
200	1	2025
526	1	3147
300	1	2313
713	1	3302
214	1	2440
303	1	2350
745	1	2897
568	1	2731

It took 1 secs to find distances for 746 sequences. 35040 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.62.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.63.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
300	0	45
0	0	0
400	0	82
200	0	94
265	0	401
100	0	176
229	0	408
187	0	378
296	0	360
419	0	412
324	0	384
375	0	428
398	0	319
440	0	277
351	0	434
460	0	346
132	0	353

It took 0 secs to find distances for 461 sequences. 4500 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.63.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.64.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	51
106	0	74
122	0	46
137	0	57
200	0	35
184	0	97
173	0	64
86	0	89
162	0	70
150	0	49
194	0	63
203	0	52
213	0	96
60	0	62

It took 0 secs to find distances for 214 sequences. 819 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.64.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.65.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
22	0	16
27	0	12
35	0	22
31	0	20
0	0	0
42	0	13
45	0	7
53	0	3
15	0	8
39	0	29
48	0	8
56	0	8
51	0	14

It took 0 secs to find distances for 57 sequences. 160 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.65.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.66.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	23
114	0	20
65	0	26
93	0	45
46	0	26
81	0	22
104	0	41
148	0	25
132	0	25
141	0	33
156	0	42
124	0	16
163	0	37

It took 0 secs to find distances for 164 sequences. 358 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.66.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.67.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
46	0	76
65	0	59
57	0	77
73	0	69
100	0	28
81	0	79
104	0	79
93	0	64
99	0	112
115	0	65
32	0	54
110	0	125
87	0	42

It took 0 secs to find distances for 116 sequences. 901 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.67.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.68.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
200	0	14
119	0	191
133	0	189
158	0	146
146	0	200
84	0	164
100	0	153
103	0	213
208	0	116
169	0	172
179	0	232
189	0	235
199	0	213
59	0	214

It took 0 secs to find distances for 209 sequences. 2285 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.68.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.69.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
14	0	26
21	0	20
18	0	35
24	0	17
0	0	0
30	0	27
32	0	26
34	0	35
26	0	14
28	0	11
10	0	24
38	0	41
36	0	33

It took 0 secs to find distances for 39 sequences. 309 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.69.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.70.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
100	0	19
0	0	0
108	0	70
97	0	128
84	0	102
68	0	132
119	0	180
146	0	114
128	0	108
161	0	130
154	0	106
48	0	98
169	0	181
137	0	105

It took 0 secs to find distances for 170 sequences. 1454 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.70.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.71.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
300	0	191
234	1	2113
200	1	1617
148	1	2095
100	1	2030
277	1	2039
181	1	2490
104	1	2229
315	1	2025
332	1	1652
209	1	2053
297	1	2772
348	1	1763
257	1	1700
364	1	1836

It took 1 secs to find distances for 365 sequences. 24767 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.71.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.72.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
32	0	6
46	0	0
0	0	0
40	0	3
52	0	6
62	0	7
57	0	0
74	0	4
22	0	4
66	0	4
70	0	7
78	0	0
82	0	3

It took 0 secs to find distances for 83 sequences. 44 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.72.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.73.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
17	0	16
25	0	14
22	0	10
28	0	21
38	0	13
31	0	16
0	0	0
36	0	21
34	0	8
12	0	13
40	0	7
43	0	18
45	0	22

It took 0 secs to find distances for 46 sequences. 179 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.73.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.74.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	1
2	0	0
0	0	0
1	0	0
2	0	2
3	0	0

It took 0 secs to find distances for 4 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.74.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.75.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
200	0	13
100	0	36
210	0	39
104	0	42
148	0	68
223	0	51
246	0	73
128	0	77
166	0	71
73	0	61
182	0	55
235	0	71
196	0	64
258	0	73

It took 0 secs to find distances for 259 sequences. 745 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.75.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.76.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	625
105	0	876
129	0	814
140	0	781
159	0	971
167	0	904
91	0	848
52	0	935
118	0	916
150	0	956
74	0	934
184	0	998
176	0	1088

It took 0 secs to find distances for 185 sequences. 11021 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.76.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.77.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
25	0	9
41	0	15
37	0	24
0	0	0
32	0	19
45	0	17
49	0	10
18	0	8
59	0	13
65	0	21
62	0	22
56	0	18
52	0	9

It took 0 secs to find distances for 66 sequences. 185 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.77.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.78.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
6	0	0
9	0	0
8	0	0
11	0	1
12	0	0
15	0	1
14	0	0
13	0	1
0	0	0
17	0	0
18	0	0
4	0	0
16	0	2

It took 0 secs to find distances for 19 sequences. 5 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.78.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.79.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	62
106	0	124
130	0	89
74	0	57
150	0	81
92	0	93
119	0	66
160	0	114
141	0	81
168	0	108
177	0	94
52	0	71
185	0	84

It took 0 secs to find distances for 186 sequences. 1062 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.79.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.80.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
74	0	26
90	0	25
100	0	14
105	0	54
129	0	28
111	0	28
117	0	40
64	0	29
82	0	33
52	0	21
123	0	36
36	0	31
98	0	30

It took 0 secs to find distances for 130 sequences. 381 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.80.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.81.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
10	0	1
15	0	2
17	0	0
13	0	4
0	0	0
18	0	3
24	0	5
25	0	5
7	0	3
21	0	1
23	0	4
20	0	5
27	0	7

It took 0 secs to find distances for 28 sequences. 40 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.81.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.82.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
23	0	18
16	0	11
20	0	12
0	0	0
26	0	22
42	0	5
11	0	9
36	0	32
31	0	16
34	0	25
40	0	3
29	0	24
38	0	12

It took 0 secs to find distances for 43 sequences. 189 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.82.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.83.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
8	0	0
12	0	2
10	0	1
13	0	1
15	0	6
0	0	0
17	0	1
18	0	2
5	0	1
16	0	2
19	0	2
22	0	5
21	0	7

It took 0 secs to find distances for 23 sequences. 30 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.83.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.84.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
36	0	1
45	0	9
52	0	10
0	0	0
64	0	0
59	0	8
74	0	3
25	0	11
79	0	5
83	0	8
88	0	1
92	0	7
70	0	0

It took 0 secs to find distances for 93 sequences. 63 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.84.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.85.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
20	0	5
14	0	30
25	0	26
18	0	35
23	0	32
31	0	1
0	0	0
33	0	24
9	0	33
30	0	41
28	0	36
35	0	34
37	0	27

It took 0 secs to find distances for 38 sequences. 324 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.85.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.86.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	80
105	0	183
129	0	81
60	0	140
96	0	116
74	0	77
86	0	143
122	0	225
143	0	187
42	0	139
136	0	220
114	0	171
150	0	203

It took 0 secs to find distances for 151 sequences. 1885 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.86.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.87.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
200	0	240
0	0	0
400	0	702
300	0	817
384	0	1585
100	0	480
600	1	1375
271	1	1756
333	1	2074
430	1	1832
608	1	1854
544	1	1863
471	1	2014
577	1	1790
638	1	2238
500	1	1568
509	1	2001
191	1	1730
667	1	2079

It took 1 secs to find distances for 668 sequences. 22816 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.87.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.88.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
25	0	36
28	0	21
22	0	36
0	0	0
17	0	28
38	0	25
12	0	32
34	0	62
36	0	47
31	0	36
40	0	2
45	0	13
43	0	50

It took 0 secs to find distances for 46 sequences. 388 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.88.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.89.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
200	0	44
0	0	0
300	0	547
199	0	581
257	0	663
365	0	411
305	0	666
230	0	670
100	0	428
346	0	879
382	0	642
162	0	575
282	0	488
400	0	559
114	0	561
326	0	814

It took 0 secs to find distances for 401 sequences. 7509 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.89.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.90.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
6	0	0
5	0	6
7	0	0
8	0	0
9	0	1
11	0	0
10	0	2
11	0	5
0	0	0
3	0	2
12	0	4
13	0	1
14	0	1

It took 0 secs to find distances for 15 sequences. 22 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.90.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.91.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
300	0	156
200	0	1290
172	0	1927
211	0	1604
243	0	2201
322	0	1871
386	0	1886
366	0	2957
272	0	2234
345	0	2424
100	0	1532
400	0	1664
298	0	2393
404	0	2091
121	0	2190
423	0	2082

It took 0 secs to find distances for 424 sequences. 25860 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.91.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.92.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
0	0	0
2	0	0

It took 0 secs to find distances for 3 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.92.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.92.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.93.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
41	0	32
0	0	0
59	0	39
66	0	18
51	0	26
72	0	24
93	0	21
29	0	29
100	0	17
98	0	48
89	0	36
103	0	32
83	0	22
78	0	24

It took 0 secs to find distances for 104 sequences. 351 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.93.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.94.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
100	0	458
0	0	0
300	0	25
179	0	1000
126	0	1182
155	0	1088
270	0	1440
284	0	999
200	0	1199
201	0	1209
238	0	1108
254	0	1184
220	0	1023
298	0	1267
89	0	1541
312	0	1264

It took 0 secs to find distances for 313 sequences. 14305 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.94.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.95.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
13	0	1
19	0	4
17	0	8
24	0	8
22	0	7
30	0	11
28	0	3
0	0	0
31	0	5
9	0	5
26	0	8
33	0	10
35	0	8

It took 0 secs to find distances for 36 sequences. 78 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.95.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.96.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
6	0	0
9	0	0
8	0	2
13	0	0
11	0	0
10	0	0
16	0	1
0	0	0
12	0	1
4	0	1
15	0	2
17	0	2
14	0	0

It took 0 secs to find distances for 18 sequences. 9 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.96.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.97.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
33	0	46
0	0	0
47	0	53
41	0	47
58	0	63
67	0	21
53	0	82
63	0	56
23	0	53
79	0	56
83	0	59
71	0	24
75	0	61

It took 0 secs to find distances for 84 sequences. 621 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.97.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.98.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
15	0	5
19	0	2
22	0	6
24	0	1
27	0	7
29	0	6
33	0	6
0	0	0
31	0	9
35	0	5
10	0	1
37	0	7
39	0	6

It took 0 secs to find distances for 40 sequences. 61 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.98.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.99.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	0
2	0	1
2	0	0
4	0	0
0	0	0
3	0	0
4	0	0
5	0	3
4	0	2
3	0	0
3	0	0

It took 0 secs to find distances for 6 sequences. 6 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.99.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.100.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
7	0	0
11	0	6
10	0	7
15	0	1
13	0	2
0	0	0
5	0	10
16	0	7
18	0	10
21	0	2
14	0	3
19	0	9
20	0	10

It took 0 secs to find distances for 22 sequences. 67 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.100.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.101.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
100	0	220
0	0	0
182	1	477
157	1	601
128	1	630
300	1	450
200	1	512
223	1	547
302	1	475
257	1	386
203	1	577
273	1	527
288	1	377
90	1	471
241	1	516
316	0	426

It took 1 secs to find distances for 317 sequences. 6010 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.101.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.102.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
40	0	13
28	0	20
35	0	17
45	0	33
0	0	0
53	0	18
49	0	10
64	0	31
67	0	8
19	0	27
61	0	23
71	0	29
57	0	48

It took 0 secs to find distances for 72 sequences. 277 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.102.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.103.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
89	0	102
100	0	141
134	0	127
127	0	123
149	0	77
118	0	102
63	0	92
110	0	148
77	0	126
44	0	104
142	0	201
156	0	211

It took 0 secs to find distances for 157 sequences. 1554 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.103.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.104.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	42
103	0	69
189	0	143
200	0	13
84	0	101
119	0	99
133	0	96
179	0	95
158	0	126
59	0	124
208	0	118
169	0	99
146	0	92
199	0	149

It took 0 secs to find distances for 209 sequences. 1311 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.104.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.105.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
2	0	2
1	0	1

It took 0 secs to find distances for 3 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.105.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.106.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	2
7	0	1
8	0	2
10	0	4
12	0	0
9	0	0
0	0	0
13	0	2
11	0	0
3	0	1
14	0	3
12	0	0
15	0	3

It took 0 secs to find distances for 16 sequences. 18 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.106.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.107.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
31	0	58
39	0	59
0	0	0
55	0	43
45	0	16
60	0	41
50	0	64
75	0	40
22	0	33
72	0	41
68	0	44
64	0	32
79	0	62

It took 0 secs to find distances for 80 sequences. 533 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.107.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.108.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	0
3	0	1
3	0	0
3	0	0
5	0	0
4	0	0
5	0	1
0	0	0
1	0	0
4	0	2
6	0	1
5	0	0

It took 0 secs to find distances for 7 sequences. 5 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.108.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.109.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
43	0	92
76	0	137
87	0	91
82	0	156
53	0	137
100	0	65
61	0	135
69	0	122
30	0	88
103	0	124
108	0	125
98	0	168
93	0	150

It took 0 secs to find distances for 109 sequences. 1525 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.109.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.110.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
32	0	31
46	0	18
40	0	34
0	0	0
52	0	38
57	0	33
78	0	26
70	0	19
74	0	35
22	0	37
66	0	31
62	0	27
82	0	48

It took 0 secs to find distances for 83 sequences. 377 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.110.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.111.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
51	0	48
63	0	49
81	0	67
89	0	57
96	0	43
109	0	59
100	0	37
72	0	52
127	0	123
121	0	77
35	0	51
103	0	72
115	0	75

It took 0 secs to find distances for 128 sequences. 773 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.111.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.112.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
20	0	24
29	0	52
32	0	18
38	0	0
0	0	0
25	0	49
46	0	0
35	0	43
41	0	21
44	0	23
14	0	46
48	0	1
51	0	26

It took 0 secs to find distances for 52 sequences. 303 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.112.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.113.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
6	0	1
9	0	0
12	0	2
8	0	0
13	0	0
15	0	1
11	0	3
17	0	3
0	0	0
14	0	3
16	0	1
4	0	1
18	0	0

It took 0 secs to find distances for 19 sequences. 15 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.113.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.114.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
200	0	8
100	0	45
182	0	154
162	0	133
114	0	144
199	0	114
270	0	144
230	0	97
258	0	115
141	0	135
244	0	115
80	0	127
215	0	96
283	0	234

It took 0 secs to find distances for 284 sequences. 1608 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.114.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.115.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
59	0	281
84	0	177
48	0	269
77	0	226
68	0	171
97	0	219
91	0	355
109	0	267
33	0	287
114	0	176
120	0	288
100	0	175
103	0	267

It took 0 secs to find distances for 121 sequences. 2983 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.115.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.116.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	0
2	0	0
2	0	0
0	0	0
3	0	0
3	0	0
4	0	2
2	0	0
3	0	1

It took 0 secs to find distances for 5 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.116.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.117.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	37
81	0	72
149	0	90
156	0	77
141	0	66
66	0	68
94	0	90
105	0	66
164	0	113
115	0	49
46	0	55
133	0	34
125	0	49

It took 0 secs to find distances for 165 sequences. 829 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.117.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.118.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
36	0	102
52	0	110
45	0	144
64	0	172
59	0	136
25	0	90
83	0	98
79	0	139
70	0	100
88	0	195
74	0	103
92	0	159

It took 0 secs to find distances for 93 sequences. 1548 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.118.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.119.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
4	0	3
5	0	1
6	0	5
7	0	0
7	0	0
6	0	0
9	0	0
0	0	0
9	0	3
2	0	0
10	0	7
8	0	2

It took 0 secs to find distances for 11 sequences. 21 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.119.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.120.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	0
0	0	0

It took 0 secs to find distances for 3 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.120.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.120.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.121.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
9	0	0
15	0	0
12	0	3
14	0	2
17	0	1
18	0	0
21	0	2
20	0	1
22	0	1
23	0	1
25	0	7
0	0	0
6	0	2

It took 0 secs to find distances for 26 sequences. 20 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.121.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.122.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
25	0	5
32	0	13
37	0	6
41	0	8
49	0	1
0	0	0
52	0	6
45	0	16
59	0	4
56	0	16
65	0	4
62	0	11
18	0	3

It took 0 secs to find distances for 66 sequences. 93 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.122.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.123.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
30	0	73
37	0	118
48	0	71
0	0	0
53	0	55
43	0	53
69	0	106
57	0	116
61	0	64
76	0	87
65	0	55
21	0	107
72	0	106

It took 0 secs to find distances for 77 sequences. 1011 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.123.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.124.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	2
8	0	3
7	0	9
9	0	5
12	0	0
12	0	6
11	0	3
10	0	4
13	0	8
0	0	0
15	0	6
3	0	2
14	0	8

It took 0 secs to find distances for 16 sequences. 56 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.124.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.125.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
65	0	31
53	0	24
75	0	34
93	0	25
84	0	39
126	0	35
132	0	26
120	0	29
100	0	46
114	0	33
37	0	33
107	0	45

It took 0 secs to find distances for 133 sequences. 400 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.125.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.126.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	54
59	0	79
73	0	57
95	0	84
141	0	72
112	0	90
85	0	115
128	0	50
120	0	83
104	0	86
135	0	70
148	0	100
42	0	61

It took 0 secs to find distances for 149 sequences. 947 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.126.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.127.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
15	0	9
12	0	7
20	0	8
18	0	13
0	0	0
22	0	11
25	0	8
24	0	8
27	0	10
8	0	4
29	0	9
32	0	14
30	0	7

It took 0 secs to find distances for 33 sequences. 108 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.127.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.128.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
3	0	0
2	0	0
4	0	2
5	0	0
0	0	0
1	0	1
4	0	0
5	0	0
7	0	2
6	0	0
6	0	3
5	0	3

It took 0 secs to find distances for 8 sequences. 11 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.128.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.129.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	0
2	0	1
2	0	0
0	0	0
3	0	1

It took 0 secs to find distances for 4 sequences. 2 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.129.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.130.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
18	0	0
26	0	0
23	0	4
29	0	2
32	0	4
40	0	1
0	0	0
38	0	5
35	0	3
42	0	6
44	0	10
12	0	6
47	0	10

It took 0 secs to find distances for 48 sequences. 51 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.130.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.131.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
15	0	16
24	0	17
22	0	23
19	0	16
29	0	19
31	0	4
33	0	16
0	0	0
35	0	8
27	0	7
10	0	19
37	0	24
39	0	23

It took 0 secs to find distances for 40 sequences. 192 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.131.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.132.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	238
117	0	422
166	0	386
144	0	414
186	0	384
235	0	518
263	0	373
82	0	367
250	0	463
200	0	309
220	0	559
204	0	447
276	0	786
289	0	597

It took 0 secs to find distances for 290 sequences. 5716 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.132.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.133.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
100	1	112
0	0	0
111	1	480
96	1	626
124	1	635
136	1	515
147	1	371
177	0	313
185	0	459
194	0	521
55	0	395
78	1	564
158	0	575
167	0	285

It took 1 secs to find distances for 195 sequences. 5739 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.133.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.134.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	1
2	0	0
2	0	0
1	0	0
3	0	0
0	0	0
2	0	0
3	0	2
3	0	0
4	0	3

It took 0 secs to find distances for 5 sequences. 6 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.134.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.135.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
15	0	23
22	0	15
27	0	19
19	0	15
25	0	17
0	0	0
34	0	11
36	0	37
32	0	23
30	0	29
10	0	14
38	0	33
40	0	29

It took 0 secs to find distances for 41 sequences. 265 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.135.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.136.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
30	0	72
49	0	67
0	0	0
54	0	42
44	0	31
38	0	80
62	0	6
58	0	21
21	0	61
70	0	57
73	0	82
66	0	13
77	0	44

It took 0 secs to find distances for 78 sequences. 576 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.136.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.137.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	1
2	0	0
1	0	0
2	0	2
3	0	3
0	0	0

It took 0 secs to find distances for 4 sequences. 6 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.137.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.138.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
78	0	34
55	0	23
88	0	40
118	0	29
100	0	12
111	0	10
131	0	25
104	0	15
137	0	28
68	0	37
124	0	23
38	0	33
96	0	13

It took 0 secs to find distances for 138 sequences. 310 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.138.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.139.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
100	0	186
0	0	0
134	0	335
109	0	550
77	0	580
95	0	553
122	0	420
145	0	353
165	0	471
174	0	563
54	0	327
155	0	580
182	0	491
191	0	287

It took 0 secs to find distances for 192 sequences. 5510 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.139.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.140.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	1
4	0	0
2	0	1
5	0	3
5	0	0
4	0	2
0	0	0
7	0	0
1	0	0
6	0	0
7	0	0
6	0	0
8	0	0

It took 0 secs to find distances for 9 sequences. 7 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.140.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.141.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
24	0	12
19	0	5
31	0	12
28	0	7
37	0	2
0	0	0
35	0	8
40	0	12
45	0	4
13	0	2
43	0	13
47	0	12
50	0	17

It took 0 secs to find distances for 51 sequences. 106 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.141.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.142.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
2	0	1
2	0	0
2	0	0
1	0	0
4	0	0
0	0	0
3	0	0
4	0	0
3	0	0
5	0	0
4	0	0
3	0	0

It took 0 secs to find distances for 6 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.142.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.143.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
4	0	2
7	0	0
6	0	1
8	0	0
8	0	1
11	0	0
0	0	0
3	0	2
11	0	2
12	0	2
10	0	2
9	0	0
13	0	1

It took 0 secs to find distances for 14 sequences. 13 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.143.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.144.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
20	0	19
29	0	8
0	0	0
33	0	19
36	0	13
25	0	41
44	0	15
14	0	19
39	0	21
49	0	21
42	0	38
52	0	18
47	0	22

It took 0 secs to find distances for 53 sequences. 254 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.144.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.145.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
91	0	59
112	0	56
100	0	53
79	0	64
64	0	47
102	0	67
121	0	51
159	0	20
137	0	54
152	0	43
45	0	45
145	0	65
129	0	40

It took 0 secs to find distances for 160 sequences. 611 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.145.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.146.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
20	0	0
14	0	15
25	0	11
23	0	5
18	0	10
30	0	5
31	0	6
28	0	7
0	0	0
33	0	17
35	0	10
9	0	6
37	0	17

It took 0 secs to find distances for 38 sequences. 109 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.146.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.147.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
11	0	0
7	0	5
13	0	1
10	0	10
15	0	0
0	0	0
19	0	6
16	0	1
18	0	10
21	0	4
5	0	10
14	0	2
20	0	2

It took 0 secs to find distances for 22 sequences. 51 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.147.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.148.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
72	0	19
63	0	11
81	0	21
51	0	15
115	0	31
109	0	34
96	0	13
121	0	22
35	0	14
100	0	11
89	0	21
103	0	19
127	0	12

It took 0 secs to find distances for 128 sequences. 232 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.148.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.149.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
5	0	1
6	0	0
5	0	0
8	0	0
9	0	0
7	0	0
9	0	0
10	0	1
0	0	0
8	0	0
2	0	0
11	0	2

It took 0 secs to find distances for 12 sequences. 4 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.149.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.150.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	1
1	0	0
2	0	2
2	0	0
2	0	0
3	0	0
3	0	0
3	0	3
0	0	0
4	0	4

It took 0 secs to find distances for 5 sequences. 10 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.150.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.151.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
6	0	0
9	0	1
8	0	0
11	0	0
10	0	1
12	0	0
13	0	1
14	0	0
15	0	1
17	0	0
0	0	0
16	0	0
4	0	0

It took 0 secs to find distances for 18 sequences. 4 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.151.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.152.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
10	0	3
13	0	0
15	0	9
17	0	0
19	0	1
22	0	7
21	0	7
25	0	8
26	0	1
24	0	1
0	0	0
28	0	2
7	0	6

It took 0 secs to find distances for 29 sequences. 45 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.152.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.153.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
41	0	67
59	0	75
51	0	101
66	0	76
73	0	64
100	0	9
79	0	59
94	0	82
99	0	106
104	0	90
29	0	79
89	0	36
84	0	86

It took 0 secs to find distances for 105 sequences. 921 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.153.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.154.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
100	0	34
120	0	87
76	0	91
93	0	94
108	0	81
162	0	109
153	0	85
132	0	136
53	0	129
171	0	156
143	0	90
179	0	78
188	0	97

It took 0 secs to find distances for 189 sequences. 1233 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.154.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.155.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
7	0	7
9	0	5
10	0	5
11	0	3
14	0	1
15	0	4
17	0	9
16	0	8
18	0	2
0	0	0
19	0	11
13	0	14
4	0	1

It took 0 secs to find distances for 20 sequences. 70 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.155.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.156.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
45	0	101
0	0	0
65	0	69
80	0	61
56	0	99
73	0	127
100	0	35
86	0	51
109	0	171
103	0	127
98	0	135
32	0	162
92	0	62
114	0	153

It took 0 secs to find distances for 115 sequences. 1318 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.156.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.157.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
11	0	1
16	0	2
14	0	3
21	0	0
18	0	0
20	0	0
24	0	0
23	0	1
26	0	4
27	0	0
0	0	0
29	0	0
7	0	1

It took 0 secs to find distances for 30 sequences. 12 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.157.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.158.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
2	0	0
3	0	0
4	0	0
3	0	0
5	0	0
4	0	0
5	0	0
6	0	0
6	0	0
7	0	0
0	0	0
1	0	0
5	0	0

It took 0 secs to find distances for 8 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.158.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.158.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.159.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
12	0	6
18	0	6
20	0	5
16	0	2
23	0	9
26	0	4
24	0	0
0	0	0
31	0	1
28	0	9
33	0	3
8	0	2
30	0	7

It took 0 secs to find distances for 34 sequences. 54 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.159.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.160.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
48	0	26
0	0	0
69	0	28
60	0	21
85	0	14
77	0	21
100	0	14
92	0	46
110	0	24
34	0	40
98	0	26
104	0	50
121	0	44
115	0	22

It took 0 secs to find distances for 122 sequences. 362 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.160.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.161.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	1
8	0	1
7	0	0
9	0	0
11	0	3
14	0	0
13	0	4
11	0	0
12	0	3
0	0	0
15	0	0
16	0	0
3	0	0

It took 0 secs to find distances for 17 sequences. 12 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.161.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.162.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
5	0	0
5	0	1
7	0	0
6	0	0
0	0	0
2	0	0
8	0	1
9	0	0
10	0	1
8	0	0
9	0	2
11	0	0

It took 0 secs to find distances for 12 sequences. 5 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.162.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.163.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
5	0	0
7	0	0
6	0	0
5	0	7
10	0	2
0	0	0
2	0	3
8	0	0
8	0	0
11	0	2
9	0	0
9	0	1

It took 0 secs to find distances for 12 sequences. 15 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.163.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.164.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
4	0	3
8	0	0
7	0	0
8	0	0
9	0	0
6	0	4
12	0	0
11	0	0
0	0	0
10	0	1
3	0	4
11	0	2
13	0	3

It took 0 secs to find distances for 14 sequences. 17 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.164.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.165.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
6	0	8
9	0	1
11	0	9
8	0	4
10	0	8
15	0	8
13	0	10
0	0	0
14	0	0
12	0	2
4	0	10
17	0	1
16	0	9

It took 0 secs to find distances for 18 sequences. 70 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.165.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.166.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
3	0	0
2	0	0
2	0	0
2	0	0
0	0	0
3	0	0
3	0	0
4	0	0
5	0	1
4	0	0
4	0	0

It took 0 secs to find distances for 6 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.166.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.167.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
12	0	2
17	0	3
15	0	4
21	0	11
19	0	6
25	0	9
26	0	0
29	0	9
0	0	0
23	0	3
8	0	1
28	0	10
31	0	11

It took 0 secs to find distances for 32 sequences. 69 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.167.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.168.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
39	0	38
48	1	26
62	1	24
56	1	24
69	1	18
74	1	39
27	1	25
89	1	27
79	0	28
93	0	20
84	0	27
98	0	45

It took 1 secs to find distances for 99 sequences. 341 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.168.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.169.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	0
2	0	0
0	0	0
2	0	0
2	0	0
3	0	0
4	0	0
3	0	0
3	0	0

It took 0 secs to find distances for 5 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.169.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.169.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.170.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
12	0	13
15	0	15
22	0	16
18	0	29
20	0	23
24	0	18
25	0	15
0	0	0
30	0	19
29	0	36
27	0	22
8	0	9
32	0	23

It took 0 secs to find distances for 33 sequences. 238 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.170.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.171.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
26	0	15
38	0	40
42	0	22
33	0	18
47	0	23
50	0	7
0	0	0
57	0	19
54	0	21
64	0	19
67	0	20
61	0	15
18	0	18

It took 0 secs to find distances for 68 sequences. 237 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.171.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.172.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
12	0	0
18	0	2
20	0	5
16	0	1
23	0	2
26	0	2
24	0	4
28	0	3
31	0	1
0	0	0
30	0	4
33	0	4
8	0	1

It took 0 secs to find distances for 34 sequences. 29 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.172.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.173.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
7	0	3
11	0	2
14	0	2
10	0	4
16	0	4
13	0	1
15	0	3
19	0	3
18	0	9
20	0	4
0	0	0
21	0	5
5	0	1

It took 0 secs to find distances for 22 sequences. 41 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.173.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.174.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
4	0	0
6	0	0
4	0	0
5	0	0
7	0	1
6	0	0
8	0	0
8	0	0
7	0	0
0	0	0
1	0	0
9	0	1

It took 0 secs to find distances for 10 sequences. 2 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.174.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.175.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
5	0	0
7	0	1
6	0	0
5	0	3
8	0	0
8	0	0
0	0	0
9	0	2
9	0	0
2	0	1
11	0	0
10	0	0

It took 0 secs to find distances for 12 sequences. 7 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.175.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.176.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	2
10	0	3
7	0	2
8	0	3
9	0	2
12	0	0
11	0	4
0	0	0
12	0	2
14	0	6
13	0	4
3	0	1
15	0	4

It took 0 secs to find distances for 16 sequences. 33 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.176.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.177.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
44	0	50
63	0	38
78	0	47
55	0	63
71	0	41
31	0	53
90	0	61
106	0	35
84	0	44
95	0	42
100	0	37
101	0	50
111	0	59

It took 0 secs to find distances for 112 sequences. 583 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.177.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.178.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
7	0	7
10	0	6
11	0	1
9	0	11
13	0	9
0	0	0
14	0	8
4	0	2
17	0	3
18	0	4
16	0	8
19	0	11
15	0	9

It took 0 secs to find distances for 20 sequences. 79 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.178.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.179.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
13	0	1
19	0	0
24	0	3
17	0	3
22	0	1
28	0	1
0	0	0
26	0	1
31	0	2
30	0	1
9	0	4
33	0	0
35	0	5

It took 0 secs to find distances for 36 sequences. 22 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.179.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.180.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
26	0	19
32	0	27
37	0	27
46	0	14
0	0	0
42	0	28
53	0	48
60	0	41
50	0	17
18	0	14
66	0	5
63	0	48
57	0	45

It took 0 secs to find distances for 67 sequences. 333 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.180.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.181.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	2
6	0	0
4	0	3
5	0	4
6	0	5
7	0	0
0	0	0
2	0	1
10	0	8
9	0	0
9	0	2
8	0	8
7	0	7

It took 0 secs to find distances for 11 sequences. 40 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.181.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.182.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	0
3	0	0
3	0	0
3	0	1
4	0	0
5	0	0
0	0	0
1	0	0
5	0	0
4	0	2
5	0	0
6	0	3

It took 0 secs to find distances for 7 sequences. 6 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.182.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.183.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
2	0	1
4	0	0
3	0	0
3	0	0
4	0	2
7	0	0
0	0	0
1	0	0
5	0	3
6	0	0
5	0	0
6	0	0
5	0	0

It took 0 secs to find distances for 8 sequences. 6 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.183.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.184.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
7	0	2
11	0	3
15	0	6
14	0	0
10	0	4
13	0	1
18	0	9
16	0	1
0	0	0
19	0	0
20	0	7
5	0	1
21	0	2

It took 0 secs to find distances for 22 sequences. 36 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.184.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.185.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
0	0	0
3	0	1
1	0	0
2	0	0
2	0	0

It took 0 secs to find distances for 4 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.185.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.186.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
14	0	9
17	0	7
20	0	5
22	0	7
27	0	7
25	0	6
32	0	8
31	0	6
0	0	0
29	0	10
9	0	3
36	0	7
34	0	9

It took 0 secs to find distances for 37 sequences. 84 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.186.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.187.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	0
2	0	1
3	0	2
2	0	0
0	0	0
3	0	0
3	0	0
5	0	0
4	0	0
4	0	3
4	0	0

It took 0 secs to find distances for 6 sequences. 6 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.187.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.188.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1
1	0	0
2	0	0
3	0	1
2	0	0

It took 0 secs to find distances for 4 sequences. 2 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.188.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.189.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	2
9	0	1
6	0	0
7	0	0
8	0	1
10	0	2
0	0	0
3	0	3
14	0	0
11	0	3
12	0	5
11	0	0
13	0	0

It took 0 secs to find distances for 15 sequences. 17 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.189.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.190.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	0
0	0	0
1	0	0
2	0	0
2	0	0
3	0	1
4	0	2
3	0	0
3	0	0

It took 0 secs to find distances for 5 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.190.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.191.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
16	0	4
28	0	2
23	0	5
20	0	8
26	0	14
33	0	7
0	0	0
35	0	7
31	0	21
11	0	5
37	0	17
39	0	20
41	0	14

It took 0 secs to find distances for 42 sequences. 124 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.191.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.192.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
4	0	3
8	0	0
7	0	5
6	0	5
8	0	3
11	0	1
0	0	0
9	0	3
3	0	3
13	0	8
11	0	0
12	0	0
10	0	0

It took 0 secs to find distances for 14 sequences. 31 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.192.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.193.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
11	0	7
20	0	3
16	0	5
14	0	1
19	0	3
22	0	4
24	0	1
25	0	2
0	0	0
28	0	7
7	0	4
27	0	7
30	0	11

It took 0 secs to find distances for 31 sequences. 55 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.193.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.194.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	1
5	0	0
7	0	0
0	0	0
6	0	3
5	0	2
2	0	0
8	0	0
10	0	2
9	0	0
9	0	0
8	0	1
11	0	4

It took 0 secs to find distances for 12 sequences. 13 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.194.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.195.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
42	0	17
34	0	20
24	0	25
0	0	0
30	0	20
39	0	26
49	0	20
52	0	16
46	0	37
16	0	19
55	0	23
61	0	41
58	0	34

It took 0 secs to find distances for 62 sequences. 298 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.195.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.196.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	2
11	0	9
8	0	3
9	0	4
7	0	3
0	0	0
3	0	1
12	0	4
11	0	0
13	0	6
15	0	0
14	0	7
16	0	2

It took 0 secs to find distances for 17 sequences. 41 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.196.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.197.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0
2	0	0
3	0	2
1	0	1
2	0	0

It took 0 secs to find distances for 4 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.197.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.198.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
7	0	2
11	0	5
14	0	2
15	0	0
16	0	1
10	0	11
13	0	6
0	0	0
5	0	2
20	0	6
18	0	4
19	0	5
21	0	5

It took 0 secs to find distances for 22 sequences. 49 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.198.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.199.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
6	0	0
4	0	0
0	0	0
5	0	0
6	0	0
2	0	3
7	0	1
8	0	0
9	0	0
7	0	0
9	0	0
10	0	0

It took 0 secs to find distances for 11 sequences. 4 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.199.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.200.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	6
8	0	5
7	0	6
10	0	8
9	0	5
12	0	0
12	0	8
0	0	0
11	0	10
13	0	11
3	0	3
15	0	11
14	0	12

It took 0 secs to find distances for 16 sequences. 85 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.200.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.201.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	1
0	0	0
2	0	2

It took 0 secs to find distances for 3 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.201.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.202.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
4	0	0
7	0	3
6	0	2
8	0	0
8	0	1
9	0	1
10	0	2
11	0	4
11	0	0
0	0	0
3	0	0
12	0	6
13	0	2

It took 0 secs to find distances for 14 sequences. 21 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.202.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.203.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
26	0	15
18	0	10
29	0	18
23	0	11
32	0	12
0	0	0
35	0	22
38	0	17
42	0	11
40	0	11
44	0	8
12	0	7
47	0	20

It took 0 secs to find distances for 48 sequences. 162 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.203.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.204.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
11	0	1
16	0	2
14	0	2
20	0	2
18	0	0
0	0	0
21	0	1
24	0	0
27	0	1
7	0	1
23	0	3
26	0	0
29	0	4

It took 0 secs to find distances for 30 sequences. 17 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.204.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.205.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	1
3	0	0
3	0	1
0	0	0
1	0	0
4	0	2
3	0	0
5	0	0
5	0	0
4	0	0
6	0	2
5	0	3

It took 0 secs to find distances for 7 sequences. 9 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.205.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.206.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	1
6	0	1
8	0	2
7	0	2
4	0	1
9	0	3
0	0	0
2	0	0
10	0	0
8	0	0
10	0	4
12	0	6
11	0	5

It took 0 secs to find distances for 13 sequences. 25 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.206.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.207.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	2
5	0	0
5	0	7
7	0	3
6	0	4
0	0	0
9	0	0
2	0	1
8	0	0
10	0	1
11	0	3
8	0	0
9	0	5

It took 0 secs to find distances for 12 sequences. 26 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.207.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.208.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	1
2	0	0
2	0	2
2	0	0
0	0	0
3	0	0
3	0	0
3	0	3
4	0	4

It took 0 secs to find distances for 5 sequences. 10 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.208.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.209.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	0
3	0	2
5	0	3
6	0	0
0	0	0
7	0	1
2	0	1
8	0	0
9	0	6
8	0	4
11	0	7
10	0	10
9	0	0

It took 0 secs to find distances for 12 sequences. 34 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.209.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.210.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
4	0	2
8	0	0
7	0	0
6	0	8
8	0	5
0	0	0
3	0	1
12	0	8
9	0	1
11	0	0
11	0	7
10	0	6
13	0	7

It took 0 secs to find distances for 14 sequences. 45 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.210.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.211.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	0
3	0	1
5	0	3
6	0	0
0	0	0
7	0	3
2	0	0
9	0	0
10	0	6
8	0	4
11	0	0
9	0	5
8	0	0

It took 0 secs to find distances for 12 sequences. 22 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.211.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.212.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
18	0	0
24	0	2
20	0	3
12	0	24
16	0	11
23	0	4
0	0	0
8	0	7
28	0	11
30	0	23
26	0	10
31	0	13
33	0	8

It took 0 secs to find distances for 34 sequences. 116 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.212.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.213.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	4
8	0	2
7	0	4
10	0	6
9	0	5
0	0	0
3	0	3
11	0	3
13	0	4
14	0	8
12	0	4
15	0	5
12	0	0

It took 0 secs to find distances for 16 sequences. 48 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.213.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.214.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1
2	0	2

It took 0 secs to find distances for 3 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.214.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.215.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.215.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.215.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.216.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
10	0	6
15	0	0
13	0	3
17	0	3
19	0	4
21	0	6
0	0	0
25	0	5
22	0	1
26	0	1
7	0	11
28	0	2
24	0	16

It took 0 secs to find distances for 29 sequences. 58 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.216.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.217.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	0
3	0	1
5	0	0
6	0	0
7	0	1
0	0	0
2	0	0
9	0	0
10	0	0
8	0	2
9	0	3
11	0	4
8	0	0

It took 0 secs to find distances for 12 sequences. 11 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.217.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.218.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0
2	0	0

It took 0 secs to find distances for 3 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.218.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.218.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.219.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0
2	0	0

It took 0 secs to find distances for 3 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.219.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.219.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.220.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
4	0	3
5	0	3
0	0	0
2	0	1
6	0	4
7	0	5
8	0	2
9	0	3
8	0	0
10	0	0
10	0	6
11	0	4
12	0	5

It took 0 secs to find distances for 13 sequences. 36 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.220.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.221.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.221.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.221.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.222.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.222.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.222.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.223.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
27	0	34
31	0	34
22	0	54
35	0	36
45	0	39
0	0	0
39	0	64
48	0	53
51	0	27
42	0	3
53	0	31
15	0	35
56	0	42

It took 0 secs to find distances for 57 sequences. 452 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.223.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.224.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	1
0	0	0
2	0	2

It took 0 secs to find distances for 3 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.224.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.225.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
15	0	52
32	0	53
27	0	48
19	0	60
25	0	51
0	0	0
30	0	78
34	0	58
10	0	37
22	0	54
36	0	62
38	0	66
40	0	75

It took 0 secs to find distances for 41 sequences. 694 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.225.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.226.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	1
2	0	0
2	0	2
2	0	0
0	0	0
3	0	0
3	0	0
4	0	3
3	0	0

It took 0 secs to find distances for 5 sequences. 6 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.226.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.227.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
4	0	0
8	0	0
11	0	0
7	0	3
6	0	3
8	0	4
12	0	0
10	0	6
11	0	7
0	0	0
9	0	5
3	0	0
13	0	0

It took 0 secs to find distances for 14 sequences. 28 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.227.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.228.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
2	0	2
3	0	0
3	0	3
4	0	0
4	0	4
0	0	0
1	0	1
5	0	0
6	0	0
5	0	0
5	0	4
7	0	7
6	0	4

It took 0 secs to find distances for 8 sequences. 25 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.228.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.229.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
6	0	0
7	0	0
5	0	3
8	0	3
9	0	1
11	0	0
13	0	1
0	0	0
3	0	1
12	0	2
10	0	0
11	0	1
14	0	2

It took 0 secs to find distances for 15 sequences. 14 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.229.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.230.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	0
2	0	1
2	0	0
2	0	0
0	0	0
3	0	0
3	0	2
3	0	0
4	0	3

It took 0 secs to find distances for 5 sequences. 6 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.230.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.231.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	2
6	0	0
4	0	2
5	0	3
6	0	1
0	0	0
8	0	1
2	0	1
9	0	0
7	0	0
7	0	0
9	0	1
10	0	1

It took 0 secs to find distances for 11 sequences. 12 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.231.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.232.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1
2	0	2

It took 0 secs to find distances for 3 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.232.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.233.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1

It took 0 secs to find distances for 2 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.233.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.234.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
4	0	0
3	0	0
4	0	2
5	0	3
0	0	0
6	0	4
1	0	1
7	0	0
8	0	0
6	0	0
8	0	6
7	0	5
9	0	7

It took 0 secs to find distances for 10 sequences. 28 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.234.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.235.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	0
2	0	0
2	0	0
2	0	0
0	0	0
3	0	0
3	0	0
4	0	0
3	0	0

It took 0 secs to find distances for 5 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.235.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.235.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.236.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	0
2	0	0
2	0	0
3	0	0
0	0	0

It took 0 secs to find distances for 4 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.236.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.236.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.237.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
5	0	0
6	0	1
7	0	1
8	0	0
9	0	0
11	0	0
10	0	1
11	0	0
12	0	0
13	0	2
0	0	0
14	0	2
3	0	0

It took 0 secs to find distances for 15 sequences. 7 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.237.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.238.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.238.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.238.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.239.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
2	0	0
3	0	0
4	0	2
4	0	0
5	0	1
7	0	0
7	0	2
0	0	0
5	0	0
6	0	1
1	0	1
8	0	3
6	0	0

It took 0 secs to find distances for 9 sequences. 10 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.239.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.240.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	0
2	0	1
2	0	0
3	0	0
3	0	0
3	0	0
4	0	1
4	0	0
4	0	0
0	0	0
5	0	1

It took 0 secs to find distances for 6 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.240.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.241.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	0
2	0	0
2	0	1
2	0	0
3	0	0
0	0	0
3	0	0
3	0	1
4	0	2

It took 0 secs to find distances for 5 sequences. 4 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.241.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.242.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	0
2	0	0
2	0	0
0	0	0
3	0	0

It took 0 secs to find distances for 4 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.242.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.242.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.243.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
2	0	0
3	0	0
3	0	0
4	0	0
4	0	0
5	0	0
5	0	0
5	0	0
0	0	0
6	0	0
1	0	0
6	0	1
7	0	0

It took 0 secs to find distances for 8 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.243.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.244.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1

It took 0 secs to find distances for 2 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.244.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.245.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0
2	0	1

It took 0 secs to find distances for 3 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.245.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.246.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0
2	0	0

It took 0 secs to find distances for 3 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.246.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.246.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.247.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1

It took 0 secs to find distances for 2 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.247.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.248.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.248.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.248.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.249.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	1
0	0	0
2	0	0
2	0	2
2	0	0
4	0	4
3	0	0
3	0	0
3	0	2

It took 0 secs to find distances for 5 sequences. 9 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.249.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.250.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	0
2	0	0
2	0	1
2	0	0
3	0	0
0	0	0
3	0	0
3	0	2
4	0	0

It took 0 secs to find distances for 5 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.250.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.251.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	0
1	0	0
2	0	0
2	0	0
3	0	0
3	0	0
3	0	0
4	0	1
0	0	0

It took 0 secs to find distances for 5 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.251.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.252.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
3	0	0
1	0	0
2	0	0
2	0	0
0	0	0

It took 1 secs to find distances for 4 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.252.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.252.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.253.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
3	0	1
1	0	0
2	0	1
2	0	0
0	0	0

It took 0 secs to find distances for 4 sequences. 2 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.253.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.254.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
3	0	0
2	0	0
3	0	0
3	0	2
4	0	0
5	0	0
4	0	3
5	0	0
0	0	0
5	0	0
6	0	2
1	0	1

It took 0 secs to find distances for 7 sequences. 8 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.254.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.255.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	1
1	0	0
3	0	3
2	0	2
2	0	0
0	0	0

It took 0 secs to find distances for 4 sequences. 6 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.255.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.256.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
3	0	0
2	0	0
3	0	1
3	0	0
5	0	0
4	0	0
4	0	2
5	0	1
6	0	0
0	0	0
1	0	0
5	0	0

It took 0 secs to find distances for 7 sequences. 4 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.256.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.257.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0
2	0	0

It took 0 secs to find distances for 3 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.257.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.257.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.258.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.258.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.258.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.259.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1

It took 0 secs to find distances for 2 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.259.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.260.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
5	0	0
7	0	4
5	0	5
6	0	0
9	0	0
8	0	0
8	0	5
9	0	4
10	0	1
0	0	0
2	0	1
11	0	2

It took 0 secs to find distances for 12 sequences. 22 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.260.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.261.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
4	0	0
4	0	0
5	0	1
6	0	0
6	0	2
8	0	0
0	0	0
9	0	0
1	0	0
7	0	0
8	0	5
7	0	4

It took 0 secs to find distances for 10 sequences. 12 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.261.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.262.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	0
4	0	3
2	0	1
3	0	2
4	0	0
5	0	0
5	0	5
6	0	0
5	0	0
0	0	0
7	0	6
1	0	0
6	0	5

It took 0 secs to find distances for 8 sequences. 22 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.262.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.263.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
4	0	0
3	0	0
4	0	0
6	0	3
5	0	1
6	0	0
7	0	0
7	0	3
8	0	3
8	0	0
9	0	3
0	0	0
1	0	1

It took 0 secs to find distances for 10 sequences. 14 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.263.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.264.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
2	0	0
3	0	0
4	0	0
4	0	0
5	0	0
6	0	0
7	0	0
7	0	0
6	0	0
5	0	0
0	0	0
1	0	0
8	0	0

It took 0 secs to find distances for 9 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.264.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.264.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.265.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	0
2	0	1
2	0	0
0	0	0
3	0	1

It took 0 secs to find distances for 4 sequences. 2 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.265.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.266.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
2	0	1
3	0	0
3	0	3
4	0	0
5	0	0
4	0	4
5	0	0
5	0	5
6	0	5
7	0	5
6	0	0
0	0	0
1	0	1

It took 0 secs to find distances for 8 sequences. 24 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.266.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.267.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	1
1	0	0
2	0	0
2	0	1
2	0	0
3	0	0
3	0	2
0	0	0
4	0	0
3	0	0

It took 0 secs to find distances for 5 sequences. 4 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.267.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.268.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	1
1	0	0
2	0	0
2	0	2
0	0	0
3	0	3

It took 0 secs to find distances for 4 sequences. 6 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.268.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.269.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
1	0	1
0	0	0
2	0	2
2	0	0
3	0	0

It took 0 secs to find distances for 4 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.269.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.270.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.270.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.270.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.271.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.271.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.271.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.272.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0
2	0	0

It took 0 secs to find distances for 3 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.272.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.272.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.273.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
2	0	0
2	0	0
2	0	1
3	0	0
3	0	2
3	0	0
0	0	0
4	0	0
4	0	0
5	0	0
4	0	0

It took 0 secs to find distances for 6 sequences. 3 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.273.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.274.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.274.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.274.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.275.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
2	0	0
1	0	1

It took 0 secs to find distances for 3 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.275.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.276.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
3	0	1
3	0	0
4	0	0
4	0	0
5	0	0
2	0	0
0	0	0
5	0	0
5	0	0
1	0	0
7	0	0
6	0	0
6	0	1

It took 0 secs to find distances for 8 sequences. 2 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.276.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.277.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1
2	0	0

It took 0 secs to find distances for 3 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.277.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.278.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
6	0	0
5	0	2
7	0	2
8	0	1
9	0	1
11	0	0
10	0	3
11	0	4
12	0	2
0	0	0
3	0	0
13	0	0
14	0	5

It took 0 secs to find distances for 15 sequences. 20 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.278.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.279.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1

It took 0 secs to find distances for 2 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.279.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.280.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1

It took 0 secs to find distances for 2 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.280.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.281.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
1	0	0
0	0	0
3	0	2
2	0	1
1	0	0
3	0	0
3	0	0
4	0	0
5	0	0
5	0	0
4	0	3
5	0	4
6	0	5

It took 0 secs to find distances for 7 sequences. 15 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.281.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.282.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0
2	0	1

It took 0 secs to find distances for 3 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.282.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.283.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.283.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.283.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.284.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1

It took 0 secs to find distances for 2 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.284.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.285.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.285.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.285.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.286.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.286.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.286.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.287.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	0

It took 0 secs to find distances for 2 sequences. 0 distances below cutoff 0.03.

mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.287.dist is blank. This can result if there are no distances below your cutoff.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.287.dist

/******************************************/
Running command: dist.seqs(fasta=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.288.temp, processors=12, cutoff=0.03, outputdir=mothur.output/)

Using 12 processors.
/******************************************/

Sequence	Time	Num_Dists_Below_Cutoff
0	0	0
1	0	1

It took 0 secs to find distances for 2 sequences. 1 distances below cutoff 0.03.


Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.288.dist

It took 821 seconds to split the distance file.
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.9.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.91.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.35.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.54.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.39.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.34.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.117.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.26.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.36.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.148.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.51.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.100.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.152.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.176.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.262.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.189.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.217.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.182.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.78.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.250.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.253.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.275.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.243.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.288.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.251.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.282.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.275.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.142.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.46.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.245.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.247.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.185.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.244.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	27	0	1	0	1	0	0.964286	1	0.964286	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	1	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.277.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.129.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	9	0	1	0	1	0	0.9	1	0.9	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.265.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	2	0	1	0	1	0	0.666667	1	0.666667	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.233.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	2	0	1	0	1	0	0.666667	1	0.666667	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.253.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	2	0	1	0	1	0	0.666667	1	0.666667	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.188.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	2	0	1	0	1	0	0.666667	1	0.666667	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	14	0	1	0	1	0	0.933333	1	0.933333	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.276.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.280.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	1	0	0	0	0	1	0	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	1	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.259.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	5	0	1	0	1	0	0.833333	1	0.833333	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.284.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.279.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	2	0	1	0	1	0	0.666667	1	0.666667	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.105.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2	4	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.47.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2	4	0	0	1	1	1	1	1	1	1	1	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	1	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.240.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.116.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1	4	0	1	0.5	1	1	0.8	1	0.833333	0.632456	0.666667	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.250.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1	4	0	1	0.5	1	1	0.8	1	0.833333	0.632456	0.666667	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.197.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2	26	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.74.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	1	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.232.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	1	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.224.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	1	0	0	0	0	1	0	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	1	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.201.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.190.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	3	0	0	0	0	1	0	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	18	0	3	0	1	0	0.857143	1	0.857143	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.199.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.149.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
3	12	0	0	1	1	1	1	1	1	1	1	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	7	0	3	0	1	0	0.7	1	0.7	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.151.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.269.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	7	0	3	0	1	0	0.7	1	0.7	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	3	0	3	0	1	0	0.5	1	0.5	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.78.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.162.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	3	0	3	0	1	0	0.5	1	0.5	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	3	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.99.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.241.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	3	0	0	0	0	1	0	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	3	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.267.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.256.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	7	0	3	0	1	0	0.7	1	0.7	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4	51	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.273.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.226.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4	62	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.268.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4	149	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.134.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	3	0	3	0	1	0	0.5	1	0.5	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.255.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
5	166	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.182.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
5	61	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.140.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	9	0	6	0	1	0	0.6	1	0.6	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.175.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4	6	0	0	1	1	1	1	1	1	1	1	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
3	6	0	1	0.75	1	1	0.857143	1	0.9	0.801784	0.857143	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.137.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4	17	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.183.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.187.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	12	0	3	0	1	0	0.8	1	0.8	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.230.dist
0	4	0	6	0	1	0	0.4	1	0.4	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.208.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	6	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.128.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.62.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	4	0	6	0	1	0	0.4	1	0.4	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	6	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.239.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.249.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	15	0	6	0	1	0	0.714286	1	0.714286	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.217.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
7	29	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.231.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
7	59	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.157.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	6	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.150.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	22	0	6	0	1	0	0.785714	1	0.785714	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.96.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	9	0	6	0	1	0	0.6	1	0.6	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.205.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	4	0	6	0	1	0	0.4	1	0.4	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.254.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	10	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.163.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
9	16	1	2	0.818182	0.941176	0.9	0.888889	0.9	0.892857	0.773983	0.857143	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.281.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
10	26	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.113.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
6	1	0	3	0.666667	1	1	0.25	1	0.7	0.408248	0.8	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.194.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
11	55	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.189.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
5	43	0	7	0.416667	1	1	0.86	1	0.872727	0.598609	0.588235	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.204.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
8	423	0	4	0.666667	1	1	0.990632	1	0.990805	0.812663	0.8	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
32463	239720	3125	2577	0.926455	0.987132	0.91219	0.989364	0.91219	0.979481	0.907551	0.919267	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	10	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.106.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.263.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
9	144	0	0	1	1	1	1	1	1	1	1	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
9	12	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.143.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.229.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4	13	0	4	0.5	1	1	0.764706	1	0.809524	0.618347	0.666667	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.161.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
15	50	1	0	1	0.980392	0.9375	1	0.9375	0.984848	0.958706	0.967742	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.202.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	6	0	15	0	1	0	0.285714	1	0.285714	0	0	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
15	156	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.260.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.90.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
13	53	0	0	1	1	1	1	1	1	1	1	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
10	88	0	7	0.588235	1	1	0.926316	1	0.933333	0.738168	0.740741	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.13.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.262.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
17	417	1	0	1	0.997608	0.944444	1	0.944444	0.997701	0.970662	0.971429	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.211.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
14	102	0	4	0.777778	1	1	0.962264	1	0.966667	0.865117	0.875	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
10	31	0	4	0.714286	1	1	0.885714	1	0.911111	
Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.266.dist
0.795395	0.833333	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
10	78	0	3	0.769231	1	1	0.962963	1	0.967033	0.860663	0.869565	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.119.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.278.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
14	91	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.121.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
12	124	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.22.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
21	66	4	0	1	0.942857	0.84	1	0.84	0.956044	0.889944	0.913043	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.172.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
20	42	2	2	0.909091	0.954545	0.909091	0.954545	0.909091	0.939394	0.863636	0.909091	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.25.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.192.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
13	83	0	9	0.590909	1	1	0.902174	1	0.914286	0.730139	0.742857	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
13	36	0	6	0.684211	1	1	0.857143	1	0.890909	0.765811	0.8125	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.83.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.206.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
21	6	0	1	0.954545	1	1	0.857143	1	0.964286	0.904534	0.976744	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
22	44	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.176.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
16	4	0	8	0.666667	1	1	0.333333	1	0.714286	0.471405	0.8	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.209.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
9	34	0	12	0.428571	1	1	0.73913	1	0.781818	0.562823	0.6	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.38.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.227.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
20	85	0	0	1	1	1	1	1	1	1	1	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
20	305	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.207.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.234.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
18	117	1	0	1	0.991525	0.947368	1	0.947368	0.992647	0.969195	0.972973	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.228.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
27	531	1	2	0.931034	0.99812	0.964286	0.996248	0.964286	0.994652	0.944714	0.947368	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.173.dist
30	53	7	1	0.967742	0.883333	0.810811	0.981481	0.810811	0.912088	0.821158	0.882353	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.210.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
29	223	0	1	0.966667	1	1	0.995536	1	0.996047	0.980995	0.983051	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.72.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
25	53	0	0	1	1	1	1	1	1	1	1	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
31	86	1	2	0.939394	0.988506	0.96875	0.977273	0.96875	0.975	0.936917	0.953846	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.220.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.152.dist
24	32	0	10	0.705882	1	1	0.761905	1	0.848485	0.733359	0.827586	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.213.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	63	0	28	0	1	0	0.692308	1	0.692308	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.196.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
33	7715	0	2	0.942857	1	1	0.999741	1	0.999742	0.970882	0.970588	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
20	38	2	6	0.769231	0.95	0.909091	0.863636	0.909091	0.878788	0.745499	0.833333	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.147.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
21	17	0	7	0.75	1	1	0.708333	1	0.844444	0.728869	0.857143	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.181.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.81.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
15	3	0	10	0.6	1	1	0.230769	1	0.642857	0.372104	0.75	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.184.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
41	190	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.216.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
44	44	2	1	0.977778	0.956522	0.956522	0.977778	0.956522	0.967033	0.9343	0.967033	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.84.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
36	3359	0	8	0.818182	1	1	0.997624	1	0.997649	0.903459	0.9	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
36	42	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.98.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.159.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
45	361	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.100.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
48	69	3	0	1	0.958333	0.941176	1	0.941176	0.975	0.949716	0.969697	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.167.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
38	95	0	3	0.926829	1	1	0.969388	1	0.977941	0.94787	0.962025	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
9538	318372	1226	1755	0.844594	0.996164	0.886102	0.994518	0.886102	0.990991	0.860458	0.86485	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.31.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
41	177	3	10	0.803922	0.983333	0.931818	0.946524	0.931818	0.943723	0.831552	0.863158	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
37	15	0	3	0.925	1	1	0.833333	
Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.165.dist
1	0.945455	0.877971	0.961039	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.193.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
40	335	3	0	1	0.991124	0.930233	1	0.930233	0.992063	0.960196	0.963855	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
33	192	3	3	0.916667	0.984615	0.916667	0.984615	0.916667	0.974026	0.901282	0.916667	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.124.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.130.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
53	348	0	5	0.913793	1	1	0.985836	1	0.987685	0.949131	0.954955	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.141.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
63	4210	5	0	1	0.998814	0.926471	1	0.926471	0.998831	0.961962	0.961832	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
59	719	0	2	0.967213	1	1	0.997226	1	0.997436	0.982105	0.983333	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.146.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.30.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
54	504	3	0	1	0.994083	0.947368	1	0.947368	0.994652	0.970445	0.972973	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.127.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.178.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
63	164	0	4	0.940299	1	1	0.97619	1	0.982684	0.958076	0.969231	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
68	427	0	1	0.985507	1	1	0.997664	1	0.997984	0.991567	0.992701	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.51.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
47	932	1	10	0.824561	0.998928	0.979167	0.989384	0.979167	0.988889	0.89308	0.895238	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.212.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
70	71	12	0	1	0.855422	0.853659	1	0.853659	0.921569	0.85454	0.921053	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.122.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.191.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
54	405	5	1	0.981818	0.987805	0.915254	0.997537	0.915254	0.987097	0.940778	0.947368	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
45	60	4	11	0.803571	0.9375	0.918367	0.84507	0.918367	0.875	0.752171	0.857143	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.186.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.200.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
50	1077	0	1	0.980392	1	1	0.999072	1	0.999113	0.989688	0.990099	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
100	1165	4	6	0.943396	0.996578	0.961538	0.994876	0.961538	0.992157	0.948159	0.952381	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.95.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
107	591	3	2	0.981651	0.994949	0.972727	0.996627	0.972727	0.992888	0.972971	0.977169	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.77.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.131.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
83	413	7	25	0.768519	0.983333	0.922222	0.942922	0.922222	0.939394	0.806511	0.838384	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
70	108	3	9	0.886076	0.972973	0.958904	0.923077	0.958904	0.936842	0.870439	0.921053	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.82.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.44.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
108	1062	0	6	0.947368	1	1	0.994382	1	0.994898	0.970591	0.972973	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
105	444	1	11	0.905172	0.997753	0.990566	0.975824	0.990566	0.97861	0.934119	0.945946	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4283	2827	323	70	0.983919	0.89746	0.929874	0.975837	0.929874	0.947621	0.893462	0.956133	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.148.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.171.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.10.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
85	2045	7	8	0.913978	0.996589	0.923913	0.996103	0.923913	0.993007	0.91528	0.918919	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
73	737	0	51	0.58871	1	1	0.935279	1	0.940767	0.74203	0.741117	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.73.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.144.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
65	582	0	19	0.77381	1	1	0.968386	1	0.971471	0.865648	0.872483	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
72	35	0	13	0.847059	1	1	0.729167	1	0.891667	0.785905	0.917197	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.65.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
78	550	2	0	1	0.996377	0.975	1	0.975	0.996825	0.98563	0.987342	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.203.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.14.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
168	1952	8	17	0.908108	0.995918	0.954545	0.991366	0.954545	0.988345	0.924732	0.930748	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
172	572	16	20	0.895833	0.972789	0.914894	0.966216	0.914894	0.953846	0.874844	0.905263	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.138.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
171	705	9	18	0.904762	0.987395	0.95	0.975104	0.95	0.9701	0.908481	0.926829	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.85.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
133	1021	7	15	0.898649	0.993191	0.95	0.985521	0.95	0.981293	0.913419	0.923611	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.57.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.102.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
221	7890	6	11	0.952586	0.99924	0.973568	0.998608	0.973568	0.997908	0.961947	0.962963	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.36.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2067	8471	77	116	0.946862	0.990992	0.964086	0.986491	0.964086	0.982015	0.944194	0.955396	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
187	2025	16	50	0.78903	0.992161	0.921182	0.975904	0.921182	0.971027	0.837135	
tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0.85	

157	848	8	22	0.877095	0.990654	0.951515	0.974713	0.951515	0.971014	0.896512	0.912791	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
238	1121	3	16	0.937008	0.997331	0.987552	0.985928	0.987552	0.986212	0.953709	0.961616	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.180.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
133	1435	1	27	0.83125	0.999304	0.992537	0.981532	0.992537	0.982456	0.899454	0.904762	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.69.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.93.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.156.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.195.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
142	952	14	20	0.876543	0.985507	0.910256	0.979424	0.910256	0.969858	0.875756	0.893082	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
135	135	4	2	0.985401	0.971223	0.971223	0.985401	0.971223	0.978261	0.956624	0.978261	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.112.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
275	1588	5	23	0.922819	0.996861	0.982143	0.985723	0.982143	0.985193	0.943465	0.951557	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.135.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
285	9126	17	25	0.919355	0.998141	0.943709	0.997268	0.943709	0.995557	0.929162	0.931373	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.110.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.125.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
281	378	1	43	0.867284	0.997361	0.996454	0.897862	0.996454	0.937411	0.879356	0.927393	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
301	1678	24	13	0.958599	0.985899	0.926154	0.992312	0.926154	0.981647	0.931391	0.942097	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.5.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
260	2257	22	17	0.938628	0.990347	0.921986	0.992524	0.921986	0.984742	0.921714	0.930233	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
285	1997	18	46	0.861027	0.991067	0.940594	0.977484	0.940594	0.97272	0.884471	0.899054	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.223.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.160.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
318	1872	6	15	0.954955	0.996805	0.981481	0.992051	0.981481	0.990502	0.962585	0.968037	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
293	425	7	16	0.94822	0.983796	0.976667	0.963719	0.976667	0.968961	0.936192	0.962233	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.26.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.88.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
333	4977	28	18	0.948718	0.994406	0.922438	0.996396	0.922438	0.991412	0.9309	0.935393	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1295	5188	49	23	0.982549	0.990643	0.963542	0.995586	0.963542	0.989016	0.966135	0.972953	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.60.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
293	1012	11	10	0.966997	0.989247	0.963816	0.990215	0.963816	0.984163	0.955137	0.965404	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
259	548	7	6	0.977358	0.987387	0.973684	0.98917	0.973684	0.984146	0.963799	0.975518	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.107.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.80.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.67.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.66.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
366	3010	16	11	0.970822	0.994712	0.958115	0.996359	0.958115	0.992066	0.959988	0.964427	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
385	8363	15	15	0.9625	0.99821	0.9625	0.99821	0.9625	0.996582	0.96071	0.9625	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.145.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
348	1226	26	111	0.75817	0.979233	0.930481	0.916978	0.930481	0.91993	0.790518	0.835534	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
437	1128	16	15	0.966814	0.986014	0.96468	0.986877	0.96468	0.980576	0.952192	0.965746	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.75.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
358	6994	25	4	0.98895	0.996438	0.934726	0.999428	0.934726	0.996071	0.959429	0.961074	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.64.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
460	1578	26	16	0.966387	0.983791	0.946502	0.989962	0.946502	0.979808	0.943296	0.956341	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.111.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
348	633	14	40	0.896907	0.978362	0.961326	0.940565	0.961326	0.947826	0.88848	0.928	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.177.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
433	2618	9	100	0.812383	0.996574	0.979638	0.963208	0.979638	0.965506	0.873339	0.888205	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.117.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.225.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
335	7986	18	46	0.879265	0.997751	0.949008	0.994273	0.949008	0.992367	0.909546	0.912807	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
337	12976	32	21	0.941341	0.99754	0.913279	0.998384	0.913279	0.996035	0.925172	0.927098	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.153.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
890	5736	33	11	0.987791	0.99428	0.964247	0.998086	0.964247	0.993403	0.972152	0.975877	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.97.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
462	140720	24	40	0.920319	0.999829	0.950617	0.999716	0.950617	0.999547	0.935119	0.935223	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.136.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
565	12091	18	46	0.924714	0.998514	0.969125	0.99621	0.969125	0.994969	0.944046	0.946399	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.12.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
681	32627	39	64	0.914094	0.998806	0.945833	0.998042	0.945833	0.996917	0.928259	0.929693	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
793	21930	42	26	0.968254	0.998088	0.949701	0.998816	0.949701	0.997016	0.957388	0.958888	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.42.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
732	7343	12	41	
Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.18.dist
0.94696	0.998368	0.983871	0.994447	0.983871	0.993479	0.961682	0.965063	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.20.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
542	5611	22	41	0.929674	0.996094	0.960993	0.992746	0.960993	0.989865	0.93965	0.945074	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
694	78	48	0	1	0.619048	0.93531	1	0.93531	0.941463	0.760921	0.966574	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
774	12670	31	55	0.933655	0.997559	0.961491	0.995678	0.961491	0.993644	0.944102	0.947368	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.154.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.48.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.79.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.126.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
783	4487	52	138	0.850163	0.988544	0.937725	0.970162	0.937725	0.965201	0.872611	0.8918	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
619	2840	25	2	0.996779	0.991274	0.96118	0.999296	0.96118	0.992255	0.974167	0.978656	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.34.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1192	16497	36	41	0.966748	0.997823	0.970684	0.997521	0.970684	0.995666	0.966386	0.968712	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
567	2381	46	9	0.984375	0.981047	0.924959	0.996234	0.924959	0.981685	0.943048	0.953743	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
467	6709	17	67	0.874532	0.997472	0.964876	0.990112	0.964876	0.98843	0.912553	0.917485	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.37.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.123.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1073	4411	34	47	0.958036	0.992351	0.969286	0.989457	0.969286	0.985445	0.954556	0.963628	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.52.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
976	7859	54	22	0.977956	0.993176	0.947573	0.997208	0.947573	0.991471	0.957866	0.962525	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.168.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.43.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.103.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
753	2578	37	118	0.864524	0.985851	0.953165	0.956231	0.953165	0.955536	0.87939	0.906683	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
903	16059	84	159	0.850282	0.994797	0.914894	0.990196	0.914894	0.985876	0.87457	0.881406	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.70.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1023	7029	65	139	0.880379	0.990837	0.940257	0.980608	0.940257	0.975291	0.895697	0.909333	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
730	10044	35	217	0.770855	0.996527	0.954248	0.978852	0.954248	0.977145	0.846194	0.852804	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1056	19626	179	254	0.806107	0.990962	0.855061	0.987223	0.855061	0.979493	0.819365	0.829862	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.104.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.118.dist
877	1800	115	134	0.867458	0.939948	0.884073	0.930714	0.884073	0.914901	0.811088	0.875686	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.114.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1190	7532	51	138	0.896084	0.993274	0.958904	0.982008	0.958904	0.97879	0.914772	0.926431	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.59.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
332	4488	22	9	0.973607	0.995122	0.937853	0.997999	0.937853	0.99361	0.952148	0.955396	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.170.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
834	10004	90	98	0.89485	0.991084	0.902597	0.990299	0.902597	0.982949	0.889408	0.898707	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.109.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.39.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1665	31792	60	153	0.915842	0.998116	0.965217	0.995211	0.965217	0.993674	0.936905	0.939881	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.19.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1451	10649	43	103	0.933719	0.995978	0.971218	0.99042	0.971218	0.988078	0.945533	0.9521	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.55.dist
1338	12816	95	116	0.92022	0.992642	0.933706	0.99103	0.933706	0.985312	0.91878	0.926914	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1251	11860	91	164	0.884099	0.992386	0.932191	0.986361	0.932191	0.980922	0.897271	0.907508	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1410	2576	154	138	0.910853	0.94359	0.901535	0.949153	0.901535	0.931744	0.852563	0.90617	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.17.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1349	38399	179	259	0.83893	0.99536	0.882853	0.9933	0.882853	0.989101	0.854966	0.860332	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
237	278	12	1	0.995798	0.958621	0.951807	0.996416	0.951807	0.975379	0.951316	0.973306	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.49.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.2.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.33.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1157	20300	125	154	0.882532	0.99388	0.902496	0.992471	0.902496	0.987164	0.885641	0.892403	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1373	4294	67	152	0.900328	0.984637	0.953472	0.965812	0.953472	0.962793	0.901961	0.926138	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.8.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.23.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.115.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1768	8400	48	80	0.95671	0.994318	0.973568	0.990566	0.973568	0.987568	0.957559	0.965066	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1786	41279	137	458	0.7959	0.996692	0.928757	0.989027	0.928757	0.986372	0.852894	0.857211	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.86.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1302	16522	44	87	0.937365	0.997344	0.967311	0.994762	0.967311	0.992704	0.948292	0.952102	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.58.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
118	533	12	3	0.975207	0.977982	0.907692	0.994403	0.907692	0.977477	0.92729	0.940239	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.54.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.155.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.68.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
3210	19912	208	106	0.968034	0.989662	0.939146	0.994705	0.939146	0.986602	0.945698	0.953371	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2795	180781	115	230	0.923967	0.999364	0.960481	0.998729	0.960481	0.998124	0.9411	0.94187	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.63.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2310	14171	37	502	0.821479	0.997396	0.984235	0.965788	0.984235	0.968331	0.882015	0.895522	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
3029	6603	72	26	0.991489	0.989213	0.976782	0.996078	0.976782	0.989928	0.976773	0.984081	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2773	4067	210	210	0.929601	0.9509	0.929601	0.9509	0.929601	0.942149	0.880501	0.929601	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
59	120	0	11	0.842857	1	1	0.916031	1	0.942105	0.878682	0.914729	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.198.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1652	9225	215	233	0.876393	
tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0.977225	0.884842	0.975365	0.884842	0.960442	0.856906	0.880597	

2067	231885	95	223	0.90262	0.99959	0.956059	0.999039	0.956059	0.998643	0.928278	0.928571	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2660	61426	254	280	0.904762	0.995882	0.912835	0.995462	0.912835	0.991736	0.904462	0.90878	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.133.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2030	19341	110	255	0.888403	0.994345	0.948598	0.986987	0.948598	0.983208	0.908782	0.917514	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
3177	75446	126	254	0.925969	0.998333	0.961853	0.996645	0.961853	0.99519	0.941244	0.94357	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.132.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4030	101149	381	470	0.895556	0.996247	0.913625	0.995375	0.913625	0.991974	0.90036	0.9045	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
37	182	0	12	0.755102	1	1	0.938144	1	0.948052	0.841662	0.860465	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.101.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.40.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
5354	12626	550	385	0.932915	0.958257	0.906843	0.97041	0.906843	0.950568	0.884185	0.919694	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
20	116	2	15	0.571429	0.983051	0.909091	0.885496	0.909091	0.888889	0.663764	0.701754	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.179.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.53.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.45.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.89.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
21	608	0	1	0.954545	1	1	0.998358	1	0.998413	0.976206	0.976744	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.164.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
16	74	0	1	0.941176	1	1	0.986667	1	0.989011	0.963653	0.969697	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.139.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.21.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.261.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
5806	43998	78	204	0.966057	0.99823	0.986744	0.995385	0.986744	0.99437	0.973167	0.976291	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
10	33	0	2	0.833333	1	1	0.942857	1	0.955556	0.886405	0.909091	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.41.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.237.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.35.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.29.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
7	98	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.108.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4970	104300	410	535	0.902816	0.996084	0.923792	0.994897	0.923792	0.991426	0.90874	0.913183	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2878	57029	235	584	0.831311	0.995896	0.92451	0.989863	0.92451	0.986513	0.869699	0.875437	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
5287	12743	83	223	0.959528	0.993529	0.984544	0.982801	0.984544	0.983312	0.960174	0.971875	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4898	35160	1029	818	0.856893	0.971566	0.826388	0.977264	0.826388	0.955924	0.815961	0.841364	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
5275	32798	348	360	0.936114	0.989501	0.938111	0.989143	0.938111	0.981744	0.926434	0.937111	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
7267	72330	361	242	0.967772	0.995034	0.952674	0.996665	0.952674	0.992481	0.956049	0.960164	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
4	16	0	1	5119	62744	168	234	0.8	0.956286	1	0.99733	1	0.968224	0.941176	0.996284	1	0.968224	0.952381	0.994111	0.867722	0.959047	0.888889	

0.962218	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.214.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
9420	158487	569	2344	0.800748	0.996423	0.943037	0.985426	0.943037	0.982947	0.860316	0.866087	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	0	0	3	0	0	0	0	1	0	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.174.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
2	43	0	0	1	1	1	1	1	1	1	1	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.166.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
8797	689977	1045	1701	0.837969	0.998488	0.893822	0.997541	0.893822	0.996086	0.863474	0.864995	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0	14	0	1	0	1	0	0.933333	1	0.933333	0	0	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.87.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.16.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
21984	198298	1664	832	0.963534	0.991678	0.929635	0.995822	0.929635	0.988796	0.940217	0.946281	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.76.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.56.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.94.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
15965	253250	1369	3586	0.816582	0.994623	0.921022	0.986038	0.921022	0.981927	0.857795	0.865664	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.15.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.32.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.50.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
9930	229794	508	3021	0.766736	0.997794	0.951332	0.987024	0.951332	0.985492	0.846996	0.849117	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
11709	158339	775	1168	0.909296	0.995129	0.937921	0.992677	0.937921	0.988703	0.917418	0.923386	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
12853	33805	718	1452	0.898497	0.979202	0.947093	0.958817	0.947093	0.955558	0.891693	0.922155	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
10854	5357	642	167	0.984847	0.892982	0.944154	0.969768	0.944154	0.952468	0.895694	0.964072	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
17897	309681	1126	562	0.969554	0.996377	0.940808	0.998189	0.940808	0.994873	0.952369	0.954965	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
12901	45960	694	1870	0.873401	0.985125	0.948952	0.960903	0.948952	0.958258	0.883818	0.90961	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.71.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.91.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
24252	40711	952	515	0.979206	0.97715	0.962228	0.987508	0.962228	0.977917	0.95304	0.970643	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
23070	62446	1370	2790	0.892111	0.978532	0.943944	0.957232	0.943944	0.953611	0.885778	0.917296	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.1.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
30400	570439	2407	5610	0.84421	0.995798	0.926632	0.990261	0.926632	0.986833	0.877609	0.883503	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.24.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.6.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.0.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.61.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
31859	96839	2797	2926	0.915883	0.971928	0.919292	0.970671	0.919292	0.957425	0.888887	0.917585	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.27.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
47427	211420	8981	1917	0.96115	0.959252	0.840785	0.991014	0.840785	0.959599	0.87498	0.896948	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
57329	75699	3276	2824	0.953053	0.958519	0.945945	0.964036	0.945945	0.956155	0.910776	0.949486	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
57983	885273	5671	5344	0.915613	0.993635	0.910909	0.994	0.910909	0.988457	0.907075	0.913255	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
59467	344592	5531	7651	0.886007	0.984203	0.914905	0.978279	0.914905	0.968407	0.881622	0.900224	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.7.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.28.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
117673	3.11979e+06	13285	14546	0.889986	0.99576	0.898555	0.995359	0.898555	0.991477	0.88982	0.89425	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
144253	944307	18017	14676	0.907657	0.981278	0.888969	0.984696	0.888969	0.970842	0.881267	0.898216	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.11.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
277982	1.24289e+07	15069	21739	0.927469	0.998789	0.948579	0.998254	0.948579	0.997112	0.936489	0.937905	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.4.dist

Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.9.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
1.03669e+06	4.73957e+06	49114	45072	0.958335	0.989744	0.954767	0.99058	0.954767	0.983956	0.946712	0.956548	


tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
935512	8.77314e+06	109054	237661	0.79742	0.987722	0.895599	0.973625	0.895599	0.965519	0.826114	0.843663	


Clustering mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta.3.dist

tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
3.76739e+06	1.86385e+08	493474	1.83608e+06	0.672332	0.997359	0.884184	0.990245	0.884184	0.987897	0.765244	0.763841	

It took 65 seconds to cluster
Merging the clustered files...
It took 6 seconds to merge.
/******************************************/
Running command: sens.spec(cutoff=0.03, list=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.list, column=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.dist, count=mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table)

NOTE: sens.spec assumes that only unique sequences were used to generate the distance matrix.

label	cutoff	numotus	tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0.03
0.03	0.03	12630	6.91729e+06	2.2807e+09	750800	2.23213e+06	0.756035	0.999671	0.902088	0.999022	0.902088	0.998698	0.825212	0.822629

It took 54 to run sens.spec.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.sensspec

/******************************************/
Done.


label	cutoff	numotus	tp	tn	fp	fn	sensitivity	specificity	ppv	npv	fdr	accuracy	mcc	f1score
0.03	0.03	12630	6.91729e+06	2.2807e+09	750800	2.23213e+06	0.756	0.9997	0.9021	0.999	0.9021	0.9987	0.8252	0.8226

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.dist
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.list
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.sensspec


mothur > make.shared(list=current, count=current, label=0.03)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.list as input file for the list parameter.
0.03

Output File Names:
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.shared


mothur > classify.otu(list=current, count=current, taxonomy=current, label=0.03)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table as input file for the count parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.list as input file for the list parameter.
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.mothur.wang.pick.taxonomy as input file for the taxonomy parameter.
0.03

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.0.03.cons.taxonomy
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.0.03.cons.tax.summary


mothur > count.groups(shared=current)
Using mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.shared as input file for the shared parameter.
190703 contains 55586.
190802 contains 59402.
190830 contains 67571.
190913 contains 95997.
191004 contains 112650.
191019 contains 271805.
191025 contains 52095.
191108 contains 49494.
191111 contains 66879.
191115 contains 57356.
191122 contains 53380.
191129 contains 36083.
191206 contains 41415.
191213 contains 57087.
191220 contains 37261.
200103 contains 63863.
200110 contains 55642.
200117 contains 51202.
200124 contains 63399.
200131 contains 12.
200205 contains 62389.

Size of smallest group: 12.

Total seqs: 1410568.

Output File Names: 
mothur.output/mothur.input.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.count.summary


mothur > quit()


It took 2964 seconds to run 26 commands from /var/spool/slurmd/job34769254/slurm_script batch file.



<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Detected 87 [WARNING] messages, please review.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
